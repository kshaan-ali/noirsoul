{
	"id": "632cd700d69e2dde9737a665c7400524",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"totalEclipseNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\n\r\ncontract totalEclipseNFT is ERC721, Ownable, ERC2981 {\r\n    uint256 private _nextTokenId = 1; // Start tokenId indexing at 1\r\n\r\n    /**\r\n     * @param _royaltyFeesInBips The royalty fee percentage in basis points (1% = 100 bips).\r\n     * @param _royaltyReceiverAddress The address that will receive royalty payments.\r\n     * @param _approvalToVaultAddress The address approved to operate all NFTs (e.g., for fractionalization).\r\n     */\r\n\r\n    constructor(\r\n        uint96 _royaltyFeesInBips,\r\n        address _royaltyReceiverAddress,\r\n        address _approvalToVaultAddress\r\n    ) ERC721(\"Total Eclipse\", \"TEA\") Ownable(msg.sender) {\r\n        setRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips); // Royalty informations\r\n        collectiveMinting(_royaltyReceiverAddress, 10); // Minting the collection at once\r\n        _setApprovalForAll(\r\n            _royaltyReceiverAddress,\r\n            _approvalToVaultAddress,\r\n            true\r\n        ); // Approval function call to operate the collection for fractionalization\r\n    }\r\n\r\n    // This function is used to set the metadata for the NFTs\r\n    function _baseURI() internal pure override returns (string memory) {\r\n        return\r\n            \"https://ipfs.filebase.io/ipfs/QmXcA1rEeoUvcMnLQeFJv3LvUEeXijfBkqJgE5LCGa9MAP/\"; //Have to change for every albums\r\n    }\r\n\r\n    // Mint function to create multiple NFTs at once in an album\r\n    function collectiveMinting(address _to, uint256 _mintAmount)\r\n        private\r\n        onlyOwner\r\n    {\r\n        for (uint256 i = 0; i < _mintAmount; i++) {\r\n            uint256 tokenId = _nextTokenId++;\r\n            _safeMint(_to, tokenId);\r\n        }\r\n    }\r\n\r\n    // To check the NFT count\r\n    function totalSupply() public view returns (uint256) {\r\n        return _nextTokenId - 1; // Because the first token is indexed at 1\r\n    }\r\n\r\n    // Set Royalty for all the NFTs of this contract\r\n    function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)\r\n        public\r\n        onlyOwner\r\n    {\r\n        _setDefaultRoyalty(_receiver, _royaltyFeesInBips);\r\n    }\r\n\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC2981)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 339,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 343,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 347,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 357,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"ERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.",
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1496,
								"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(RoyaltyInfo)1493_storage"
							},
							{
								"astId": 1501,
								"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)1493_storage"
							},
							"t_struct(RoyaltyInfo)1493_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 1490,
										"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1492,
										"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP1 DUP8 0x2C 0xB2 PUSH9 0x84AAAFE3F376290398 0x29 PUSH13 0x63C68953AD1EDA79CDF5E48222 0xF8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP1 DUP8 0x2C 0xB2 PUSH9 0x84AAAFE3F376290398 0x29 PUSH13 0x63C68953AD1EDA79CDF5E48222 0xF8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"totalEclipseNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6505DA2BE565CC900B837DD23F71E2D480F646698CA33C38 SDIV DUP8 EXP 0xAD CODESIZE 0xE9 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6505DA2BE565CC900B837DD23F71E2D480F646698CA33C38 SDIV DUP8 EXP 0xAD CODESIZE 0xE9 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"totalEclipseNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR CREATE2 0xBF ADD 0xE6 CALLVALUE 0xF7 PREVRANDAO SWAP1 DUP2 0xCB PUSH31 0xA2C906E5D3E4AF570F4BBB3C5AC35646E607949464736F6C634300081A0033 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR CREATE2 0xBF ADD 0xE6 CALLVALUE 0xF7 PREVRANDAO SWAP1 DUP2 0xCB PUSH31 0xA2C906E5D3E4AF570F4BBB3C5AC35646E607949464736F6C634300081A0033 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"totalEclipseNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"totalEclipseNFT.sol": {
				"totalEclipseNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_royaltyFeesInBips",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "_royaltyReceiverAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_approvalToVaultAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_royaltyFeesInBips",
									"type": "uint96"
								}
							],
							"name": "setRoyaltyInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"params": {
									"_approvalToVaultAddress": "The address approved to operate all NFTs (e.g., for fractionalization).",
									"_royaltyFeesInBips": "The royalty fee percentage in basis points (1% = 100 bips).",
									"_royaltyReceiverAddress": "The address that will receive royalty payments."
								}
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"totalEclipseNFT.sol\":236:2526  contract totalEclipseNFT is ERC721, Ownable, ERC2981 {... */\n  mstore(0x40, 0x80)\n    /* \"totalEclipseNFT.sol\":327:328  1 */\n  0x01\n    /* \"totalEclipseNFT.sol\":296:328  uint256 private _nextTokenId = 1 */\n  0x09\n  sstore\n    /* \"totalEclipseNFT.sol\":680:1272  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"totalEclipseNFT.sol\":858:868  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x98, 0x546f74616c2045636c69707365)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x544541)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"totalEclipseNFT.sol\":881:940  setRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips) */\n  tag_18\n    /* \"totalEclipseNFT.sol\":896:919  _royaltyReceiverAddress */\n  dup3\n    /* \"totalEclipseNFT.sol\":921:939  _royaltyFeesInBips */\n  dup5\n    /* \"totalEclipseNFT.sol\":881:895  setRoyaltyInfo */\n  tag_19\n    /* \"totalEclipseNFT.sol\":881:940  setRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips) */\n  jump\t// in\ntag_18:\n    /* \"totalEclipseNFT.sol\":975:1021  collectiveMinting(_royaltyReceiverAddress, 10) */\n  tag_20\n    /* \"totalEclipseNFT.sol\":993:1016  _royaltyReceiverAddress */\n  dup3\n    /* \"totalEclipseNFT.sol\":1018:1020  10 */\n  0x0a\n    /* \"totalEclipseNFT.sol\":975:992  collectiveMinting */\n  tag_21\n    /* \"totalEclipseNFT.sol\":975:1021  collectiveMinting(_royaltyReceiverAddress, 10) */\n  jump\t// in\ntag_20:\n    /* \"totalEclipseNFT.sol\":1066:1190  _setApprovalForAll(... */\n  tag_22\n    /* \"totalEclipseNFT.sol\":1099:1122  _royaltyReceiverAddress */\n  dup3\n    /* \"totalEclipseNFT.sol\":1137:1160  _approvalToVaultAddress */\n  dup3\n    /* \"totalEclipseNFT.sol\":1175:1179  true */\n  0x01\n    /* \"totalEclipseNFT.sol\":1066:1084  _setApprovalForAll */\n  tag_23\n    /* \"totalEclipseNFT.sol\":1066:1190  _setApprovalForAll(... */\n  jump\t// in\ntag_22:\n    /* \"totalEclipseNFT.sol\":680:1272  constructor(... */\n  pop\n  pop\n  pop\n    /* \"totalEclipseNFT.sol\":236:2526  contract totalEclipseNFT is ERC721, Ownable, ERC2981 {... */\n  jump(tag_153)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"totalEclipseNFT.sol\":2134:2312  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_27\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_27:\n    /* \"totalEclipseNFT.sol\":2255:2304  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n  tag_30\n    /* \"totalEclipseNFT.sol\":2274:2283  _receiver */\n  dup3\n    /* \"totalEclipseNFT.sol\":2285:2303  _royaltyFeesInBips */\n  dup3\n    /* \"totalEclipseNFT.sol\":2255:2273  _setDefaultRoyalty */\n  tag_31\n    /* \"totalEclipseNFT.sol\":2255:2304  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n  jump\t// in\ntag_30:\n    /* \"totalEclipseNFT.sol\":2134:2312  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)... */\n  pop\n  pop\n  jump\t// out\n    /* \"totalEclipseNFT.sol\":1636:1895  function collectiveMinting(address _to, uint256 _mintAmount)... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_33\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_28\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_33:\n    /* \"totalEclipseNFT.sol\":1754:1763  uint256 i */\n  0x00\n    /* \"totalEclipseNFT.sol\":1749:1888  for (uint256 i = 0; i < _mintAmount; i++) {... */\ntag_35:\n    /* \"totalEclipseNFT.sol\":1773:1784  _mintAmount */\n  dup2\n    /* \"totalEclipseNFT.sol\":1769:1770  i */\n  dup2\n    /* \"totalEclipseNFT.sol\":1769:1784  i < _mintAmount */\n  lt\n    /* \"totalEclipseNFT.sol\":1749:1888  for (uint256 i = 0; i < _mintAmount; i++) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"totalEclipseNFT.sol\":1824:1836  _nextTokenId */\n  0x09\n    /* \"totalEclipseNFT.sol\":1824:1838  _nextTokenId++ */\n  dup1\n  sload\n    /* \"totalEclipseNFT.sol\":1806:1821  uint256 tokenId */\n  0x00\n  swap2\n  dup3\n    /* \"totalEclipseNFT.sol\":1824:1838  _nextTokenId++ */\n  tag_38\n  dup4\n  tag_39\n  jump\t// in\ntag_38:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"totalEclipseNFT.sol\":1806:1838  uint256 tokenId = _nextTokenId++ */\n  swap1\n  pop\n    /* \"totalEclipseNFT.sol\":1853:1876  _safeMint(_to, tokenId) */\n  tag_40\n    /* \"totalEclipseNFT.sol\":1863:1866  _to */\n  dup5\n    /* \"totalEclipseNFT.sol\":1806:1838  uint256 tokenId = _nextTokenId++ */\n  dup3\n    /* \"totalEclipseNFT.sol\":1853:1862  _safeMint */\n  tag_41\n    /* \"totalEclipseNFT.sol\":1853:1876  _safeMint(_to, tokenId) */\n  jump\t// in\ntag_40:\n  pop\n    /* \"totalEclipseNFT.sol\":1786:1789  i++ */\n  0x01\n  add\n    /* \"totalEclipseNFT.sol\":1749:1888  for (uint256 i = 0; i < _mintAmount; i++) {... */\n  jump(tag_35)\ntag_36:\n  pop\n    /* \"totalEclipseNFT.sol\":1636:1895  function collectiveMinting(address _to, uint256 _mintAmount)... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n  mload(0x40)\n  shl(0xe3, 0x0b611743)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3464:3496   */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n  dup4\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n  swap5\n  dup8\n  and\n  dup1\n  dup5\n  mstore\n  swap5\n  dup3\n  mstore\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup7\n  iszero\n  iszero\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n  swap2\n  mload\n    /* \"#utility.yul\":3885:3926   */\n  swap2\n  dup3\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n  0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n  swap2\n    /* \"#utility.yul\":3858:3876   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_52\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  shl(0xe0, 0x118cdaa7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_52:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n  0x2710\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3576:3602  feeNumerator > denominator */\n  dup3\n  and\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n  iszero\n  tag_58\n  jumpi\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  mload(0x40)\n  shl(0xe0, 0x6f483d09)\n  dup2\n  mstore\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"#utility.yul\":4128:4159   */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4110:4160   */\n  mstore\n    /* \"#utility.yul\":4176:4194   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4169:4203   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4083:4101   */\n  0x44\n  add\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  tag_13\n    /* \"#utility.yul\":3937:4209   */\n  jump\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\ntag_58:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3758:3780  receiver == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n  tag_61\n  jumpi\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x5b6cc805)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3848:3849  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\ntag_61:\n  pop\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3894:3929  RoyaltyInfo(receiver, feeNumerator) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  dup1\n  dup4\n  mstore\n  sub(shl(0x60, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  0x20\n  swap1\n  swap3\n  add\n  dup3\n  swap1\n  mstore\n  shl(0xa0, 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n  swap1\n  swap2\n  mul\n  or\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3891  _defaultRoyaltyInfo */\n  0x07\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n  sstore\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n  shl(0x20, tag_65)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n  0x20\n  shr\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n  tag_70\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n  tag_71\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n  jump\t// in\ntag_70:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n  tag_73\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\ntag_71:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n  tag_75\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\ntag_75:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n  tag_77\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n  tag_78\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n  jump\t// in\ntag_77:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x39e35637)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\ntag_73:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n  dup4\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n  tag_98\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n  mload(0x40)\n  shl(0xe1, 0x0a85bd01)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n  dup5\n  and\n  swap1\n  0x150b7a02\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n  tag_84\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n  dup9\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n  dup8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n  dup8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n  0x04\n  add\n  tag_85\n  jump\t// in\ntag_84:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_86\n  jumpi\n  pop\n  0x40\n  dup1\n  mload\n  0x1f\n  returndatasize\n  swap1\n  dup2\n  add\n  not(0x1f)\n  and\n  dup3\n  add\n  swap1\n  swap3\n  mstore\n  tag_87\n  swap2\n  dup2\n  add\n  swap1\n  tag_88\n  jump\t// in\ntag_87:\n  0x01\ntag_86:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n  tag_89\n  jumpi\n  returndatasize\n  dup1\n  dup1\n  iszero\n  tag_94\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_93)\ntag_94:\n  0x60\n  swap2\n  pop\ntag_93:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n  tag_95\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3464:3496   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\ntag_95:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n  revert\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\ntag_89:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n  dup2\n  and\n  shl(0xe1, 0x0a85bd01)\n  eq\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n  tag_99\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n  mload(0x40)\n  shl(0xe1, 0x32505749)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3464:3496   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\ntag_99:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\ntag_98:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\ntag_78:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n  dup4\n  and\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n  tag_105\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n  tag_105\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n  tag_106\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n  jump\t// in\ntag_105:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n  dup2\n  and\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n  tag_107\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n  tag_108\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n  dup2\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n  tag_109\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n  jump\t// in\ntag_108:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n  dup1\n  sload\n  not(0x00)\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\ntag_107:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n  dup6\n  and\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n  tag_110\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n  dup6\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\ntag_110:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n  0x00\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup10\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n  swap2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n  dup8\n  swap4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n  swap2\n  dup6\n  and\n  swap2\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  log4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n  swap5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\ntag_106:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n  tag_113\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n  tag_114\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n  jump\t// in\ntag_113:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n  tag_36\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n  tag_116\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x7e273289)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":5346:5371   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5319:5337   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n  tag_13\n    /* \"#utility.yul\":5200:5377   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\ntag_116:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x177e802f)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5574:5606   */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5556:5607   */\n  mstore\n    /* \"#utility.yul\":5623:5641   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5616:5650   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5529:5547   */\n  0x44\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n  tag_13\n    /* \"#utility.yul\":5382:5656   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\ntag_109:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n  dup1\n  tag_123\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n  dup3\n  and\n  iszero\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\ntag_123:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n  iszero\n  tag_124\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n  tag_125\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n  tag_126\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n  jump\t// in\ntag_125:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n  tag_127\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n  and\n  eq\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\ntag_127:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n  dup1\n  iszero\n  tag_128\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  dup1\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n  swap4\n  dup8\n  and\n  dup4\n  mstore\n  swap3\n  swap1\n  mstore\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\ntag_128:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n  iszero\n  tag_131\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n  mload(0x40)\n  shl(0xe0, 0xa9fbf51f)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3464:3496   */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3446:3497   */\n  mstore\n    /* \"#utility.yul\":3419:3437   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n  tag_13\n    /* \"#utility.yul\":3300:3503   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\ntag_131:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n  iszero\n  tag_133\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n  and\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\ntag_133:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\ntag_124:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\ntag_114:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n  dup4\n  and\n  iszero\n  dup1\n  iszero\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n  tag_138\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n  dup1\n  tag_137\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  dup1\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n  swap4\n  dup8\n  and\n  dup4\n  mstore\n  swap3\n  swap1\n  mstore\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\ntag_137:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n  dup1\n  tag_138\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n  dup5\n  dup2\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n  swap2\n  and\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n  eq\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\ntag_138:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n  swap5\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\ntag_126:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n  dup2\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n  tag_143\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n  mload(0x40)\n  shl(0xe0, 0x7e273289)\n  dup2\n  mstore\n  0x04\n  dup2\n  add\n    /* \"#utility.yul\":5346:5371   */\n  dup5\n  swap1\n  mstore\n    /* \"#utility.yul\":5319:5337   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n  tag_13\n    /* \"#utility.yul\":5200:5377   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\ntag_143:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_147:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_155:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:654   */\ntag_3:\n    /* \"#utility.yul\":283:289   */\n  0x00\n    /* \"#utility.yul\":291:297   */\n  dup1\n    /* \"#utility.yul\":299:305   */\n  0x00\n    /* \"#utility.yul\":352:354   */\n  0x60\n    /* \"#utility.yul\":340:349   */\n  dup5\n    /* \"#utility.yul\":331:338   */\n  dup7\n    /* \"#utility.yul\":327:350   */\n  sub\n    /* \"#utility.yul\":323:355   */\n  slt\n    /* \"#utility.yul\":320:372   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":365:366   */\n  dup1\n    /* \"#utility.yul\":358:370   */\n  revert\n    /* \"#utility.yul\":320:372   */\ntag_157:\n    /* \"#utility.yul\":394:410   */\n  dup4\n  mload\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"#utility.yul\":439:469   */\n  dup2\n  and\n    /* \"#utility.yul\":429:470   */\n  dup2\n  eq\n    /* \"#utility.yul\":419:488   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":484:485   */\n  0x00\n    /* \"#utility.yul\":481:482   */\n  dup1\n    /* \"#utility.yul\":474:486   */\n  revert\n    /* \"#utility.yul\":419:488   */\ntag_158:\n    /* \"#utility.yul\":507:512   */\n  swap3\n  pop\n    /* \"#utility.yul\":531:580   */\n  tag_159\n    /* \"#utility.yul\":576:578   */\n  0x20\n    /* \"#utility.yul\":561:579   */\n  dup6\n  add\n    /* \"#utility.yul\":531:580   */\n  tag_147\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":521:580   */\n  swap2\n  pop\n    /* \"#utility.yul\":599:648   */\n  tag_160\n    /* \"#utility.yul\":644:646   */\n  0x40\n    /* \"#utility.yul\":633:642   */\n  dup6\n    /* \"#utility.yul\":629:647   */\n  add\n    /* \"#utility.yul\":599:648   */\n  tag_147\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":589:648   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:654   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":659:786   */\ntag_148:\n    /* \"#utility.yul\":720:730   */\n  0x4e487b71\n    /* \"#utility.yul\":715:718   */\n  0xe0\n    /* \"#utility.yul\":711:731   */\n  shl\n    /* \"#utility.yul\":708:709   */\n  0x00\n    /* \"#utility.yul\":701:732   */\n  mstore\n    /* \"#utility.yul\":751:755   */\n  0x41\n    /* \"#utility.yul\":748:749   */\n  0x04\n    /* \"#utility.yul\":741:756   */\n  mstore\n    /* \"#utility.yul\":775:779   */\n  0x24\n    /* \"#utility.yul\":772:773   */\n  0x00\n    /* \"#utility.yul\":765:780   */\n  revert\n    /* \"#utility.yul\":791:1171   */\ntag_149:\n    /* \"#utility.yul\":870:871   */\n  0x01\n    /* \"#utility.yul\":866:878   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":913:925   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":934:995   */\n  tag_163\n  jumpi\n    /* \"#utility.yul\":988:992   */\n  0x7f\n    /* \"#utility.yul\":980:986   */\n  dup3\n    /* \"#utility.yul\":976:993   */\n  and\n    /* \"#utility.yul\":966:993   */\n  swap2\n  pop\n    /* \"#utility.yul\":934:995   */\ntag_163:\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1033:1039   */\n  dup3\n    /* \"#utility.yul\":1030:1044   */\n  lt\n    /* \"#utility.yul\":1010:1028   */\n  dup2\n    /* \"#utility.yul\":1007:1045   */\n  sub\n    /* \"#utility.yul\":1004:1165   */\n  tag_164\n  jumpi\n    /* \"#utility.yul\":1087:1097   */\n  0x4e487b71\n    /* \"#utility.yul\":1082:1085   */\n  0xe0\n    /* \"#utility.yul\":1078:1098   */\n  shl\n    /* \"#utility.yul\":1075:1076   */\n  0x00\n    /* \"#utility.yul\":1068:1099   */\n  mstore\n    /* \"#utility.yul\":1122:1126   */\n  0x22\n    /* \"#utility.yul\":1119:1120   */\n  0x04\n    /* \"#utility.yul\":1112:1127   */\n  mstore\n    /* \"#utility.yul\":1150:1154   */\n  0x24\n    /* \"#utility.yul\":1147:1148   */\n  0x00\n    /* \"#utility.yul\":1140:1155   */\n  revert\n    /* \"#utility.yul\":1004:1165   */\ntag_164:\n  pop\n    /* \"#utility.yul\":791:1171   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1302:1820   */\ntag_151:\n    /* \"#utility.yul\":1404:1406   */\n  0x1f\n    /* \"#utility.yul\":1399:1402   */\n  dup3\n    /* \"#utility.yul\":1396:1407   */\n  gt\n    /* \"#utility.yul\":1393:1814   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1440:1445   */\n  dup1\n    /* \"#utility.yul\":1437:1438   */\n  0x00\n    /* \"#utility.yul\":1430:1446   */\n  mstore\n    /* \"#utility.yul\":1484:1488   */\n  0x20\n    /* \"#utility.yul\":1481:1482   */\n  0x00\n    /* \"#utility.yul\":1471:1489   */\n  keccak256\n    /* \"#utility.yul\":1554:1556   */\n  0x1f\n    /* \"#utility.yul\":1542:1552   */\n  dup5\n    /* \"#utility.yul\":1538:1557   */\n  add\n    /* \"#utility.yul\":1535:1536   */\n  0x05\n    /* \"#utility.yul\":1531:1558   */\n  shr\n    /* \"#utility.yul\":1525:1529   */\n  dup2\n    /* \"#utility.yul\":1521:1559   */\n  add\n    /* \"#utility.yul\":1590:1594   */\n  0x20\n    /* \"#utility.yul\":1578:1588   */\n  dup6\n    /* \"#utility.yul\":1575:1595   */\n  lt\n    /* \"#utility.yul\":1572:1619   */\n  iszero\n  tag_168\n  jumpi\n  pop\n    /* \"#utility.yul\":1613:1617   */\n  dup1\n    /* \"#utility.yul\":1572:1619   */\ntag_168:\n    /* \"#utility.yul\":1668:1670   */\n  0x1f\n    /* \"#utility.yul\":1663:1666   */\n  dup5\n    /* \"#utility.yul\":1659:1671   */\n  add\n    /* \"#utility.yul\":1656:1657   */\n  0x05\n    /* \"#utility.yul\":1652:1672   */\n  shr\n    /* \"#utility.yul\":1646:1650   */\n  dup3\n    /* \"#utility.yul\":1642:1673   */\n  add\n    /* \"#utility.yul\":1632:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1723:1804   */\ntag_169:\n    /* \"#utility.yul\":1741:1743   */\n  dup2\n    /* \"#utility.yul\":1734:1739   */\n  dup2\n    /* \"#utility.yul\":1731:1744   */\n  lt\n    /* \"#utility.yul\":1723:1804   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  0x00\n    /* \"#utility.yul\":1786:1802   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1767:1768   */\n  0x01\n    /* \"#utility.yul\":1756:1769   */\n  add\n    /* \"#utility.yul\":1723:1804   */\n  jump(tag_169)\n    /* \"#utility.yul\":1996:3295   */\ntag_9:\n    /* \"#utility.yul\":2116:2126   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2138:2168   */\n  dup2\n  gt\n    /* \"#utility.yul\":2135:2191   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":2171:2189   */\n  tag_175\n  tag_148\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":2200:2297   */\n  tag_176\n    /* \"#utility.yul\":2290:2296   */\n  dup2\n    /* \"#utility.yul\":2250:2288   */\n  tag_177\n    /* \"#utility.yul\":2282:2286   */\n  dup5\n    /* \"#utility.yul\":2276:2287   */\n  sload\n    /* \"#utility.yul\":2250:2288   */\n  tag_149\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":2244:2248   */\n  dup5\n    /* \"#utility.yul\":2200:2297   */\n  tag_151\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2377:2379   */\n  0x1f\n    /* \"#utility.yul\":2366:2380   */\n  dup3\n  gt\n    /* \"#utility.yul\":2394:2395   */\n  0x01\n    /* \"#utility.yul\":2389:3038   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":3082:3083   */\n  0x00\n    /* \"#utility.yul\":3099:3105   */\n  dup4\n    /* \"#utility.yul\":3096:3185   */\n  iszero\n  tag_180\n  jumpi\n  pop\n    /* \"#utility.yul\":3151:3170   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3145:3171   */\n  mload\n    /* \"#utility.yul\":3096:3185   */\ntag_180:\n  not(0x00)\n    /* \"#utility.yul\":1953:1954   */\n  0x03\n    /* \"#utility.yul\":1949:1960   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1945:1969   */\n  shr\n    /* \"#utility.yul\":1941:1970   */\n  not\n    /* \"#utility.yul\":1931:1971   */\n  and\n    /* \"#utility.yul\":1977:1978   */\n  0x01\n    /* \"#utility.yul\":1973:1984   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1928:1985   */\n  or\n    /* \"#utility.yul\":3198:3279   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2359:3289   */\n  jump(tag_99)\n    /* \"#utility.yul\":2389:3038   */\ntag_179:\n    /* \"#utility.yul\":1249:1250   */\n  0x00\n    /* \"#utility.yul\":1242:1256   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1286:1290   */\n  0x20\n    /* \"#utility.yul\":1273:1291   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2425:2445   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2543:2765   */\ntag_183:\n    /* \"#utility.yul\":2557:2564   */\n  dup3\n    /* \"#utility.yul\":2554:2555   */\n  dup2\n    /* \"#utility.yul\":2551:2565   */\n  lt\n    /* \"#utility.yul\":2543:2765   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":2639:2658   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2633:2659   */\n  mload\n    /* \"#utility.yul\":2618:2660   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2746:2750   */\n  0x20\n    /* \"#utility.yul\":2731:2751   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2699:2700   */\n  0x01\n    /* \"#utility.yul\":2687:2701   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2573:2585   */\n  add\n    /* \"#utility.yul\":2543:2765   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":2547:2550   */\n  pop\n    /* \"#utility.yul\":2793:2799   */\n  dup5\n    /* \"#utility.yul\":2784:2791   */\n  dup3\n    /* \"#utility.yul\":2781:2800   */\n  lt\n    /* \"#utility.yul\":2778:2979   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":2854:2873   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2848:2874   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2937:2938   */\n  0x03\n    /* \"#utility.yul\":2933:2947   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2949:2952   */\n  0xf8\n    /* \"#utility.yul\":2929:2953   */\n  and\n    /* \"#utility.yul\":2925:2962   */\n  shr\n    /* \"#utility.yul\":2921:2963   */\n  not\n    /* \"#utility.yul\":2906:2964   */\n  and\n    /* \"#utility.yul\":2891:2965   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2778:2979   */\ntag_186:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3025:3026   */\n  0x01\n    /* \"#utility.yul\":3009:3023   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3005:3027   */\n  add\n    /* \"#utility.yul\":2992:3028   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1996:3295   */\n  jump\t// out\n    /* \"#utility.yul\":3508:3740   */\ntag_39:\n    /* \"#utility.yul\":3547:3550   */\n  0x00\n    /* \"#utility.yul\":3568:3585   */\n  0x01\n  dup3\n  add\n    /* \"#utility.yul\":3565:3705   */\n  tag_189\n  jumpi\n    /* \"#utility.yul\":3627:3637   */\n  0x4e487b71\n    /* \"#utility.yul\":3622:3625   */\n  0xe0\n    /* \"#utility.yul\":3618:3638   */\n  shl\n    /* \"#utility.yul\":3615:3616   */\n  0x00\n    /* \"#utility.yul\":3608:3639   */\n  mstore\n    /* \"#utility.yul\":3662:3666   */\n  0x11\n    /* \"#utility.yul\":3659:3660   */\n  0x04\n    /* \"#utility.yul\":3652:3667   */\n  mstore\n    /* \"#utility.yul\":3690:3694   */\n  0x24\n    /* \"#utility.yul\":3687:3688   */\n  0x00\n    /* \"#utility.yul\":3680:3695   */\n  revert\n    /* \"#utility.yul\":3565:3705   */\ntag_189:\n  pop\n    /* \"#utility.yul\":3732:3733   */\n  0x01\n    /* \"#utility.yul\":3721:3734   */\n  add\n  swap1\n    /* \"#utility.yul\":3508:3740   */\n  jump\t// out\n    /* \"#utility.yul\":4214:4900   */\ntag_85:\n    /* \"#utility.yul\":4474:4475   */\n  0x01\n    /* \"#utility.yul\":4470:4471   */\n  dup1\n    /* \"#utility.yul\":4465:4468   */\n  0xa0\n    /* \"#utility.yul\":4461:4472   */\n  shl\n    /* \"#utility.yul\":4457:4476   */\n  sub\n    /* \"#utility.yul\":4449:4455   */\n  dup6\n    /* \"#utility.yul\":4445:4477   */\n  and\n    /* \"#utility.yul\":4434:4443   */\n  dup2\n    /* \"#utility.yul\":4427:4478   */\n  mstore\n    /* \"#utility.yul\":4543:4544   */\n  0x01\n    /* \"#utility.yul\":4539:4540   */\n  dup1\n    /* \"#utility.yul\":4534:4537   */\n  0xa0\n    /* \"#utility.yul\":4530:4541   */\n  shl\n    /* \"#utility.yul\":4526:4545   */\n  sub\n    /* \"#utility.yul\":4518:4524   */\n  dup5\n    /* \"#utility.yul\":4514:4546   */\n  and\n    /* \"#utility.yul\":4509:4511   */\n  0x20\n    /* \"#utility.yul\":4498:4507   */\n  dup3\n    /* \"#utility.yul\":4494:4512   */\n  add\n    /* \"#utility.yul\":4487:4547   */\n  mstore\n    /* \"#utility.yul\":4583:4589   */\n  dup3\n    /* \"#utility.yul\":4578:4580   */\n  0x40\n    /* \"#utility.yul\":4567:4576   */\n  dup3\n    /* \"#utility.yul\":4563:4581   */\n  add\n    /* \"#utility.yul\":4556:4590   */\n  mstore\n    /* \"#utility.yul\":4626:4629   */\n  0x80\n    /* \"#utility.yul\":4621:4623   */\n  0x60\n    /* \"#utility.yul\":4610:4619   */\n  dup3\n    /* \"#utility.yul\":4606:4624   */\n  add\n    /* \"#utility.yul\":4599:4630   */\n  mstore\n    /* \"#utility.yul\":4408:4412   */\n  0x00\n    /* \"#utility.yul\":4659:4665   */\n  dup3\n    /* \"#utility.yul\":4653:4666   */\n  mload\n    /* \"#utility.yul\":4703:4709   */\n  dup1\n    /* \"#utility.yul\":4697:4700   */\n  0x80\n    /* \"#utility.yul\":4686:4695   */\n  dup5\n    /* \"#utility.yul\":4682:4701   */\n  add\n    /* \"#utility.yul\":4675:4710   */\n  mstore\n    /* \"#utility.yul\":4763:4769   */\n  dup1\n    /* \"#utility.yul\":4758:4760   */\n  0x20\n    /* \"#utility.yul\":4750:4756   */\n  dup6\n    /* \"#utility.yul\":4746:4761   */\n  add\n    /* \"#utility.yul\":4740:4743   */\n  0xa0\n    /* \"#utility.yul\":4729:4738   */\n  dup6\n    /* \"#utility.yul\":4725:4744   */\n  add\n    /* \"#utility.yul\":4719:4770   */\n  mcopy\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4814:4817   */\n  0xa0\n    /* \"#utility.yul\":4805:4811   */\n  dup3\n    /* \"#utility.yul\":4794:4803   */\n  dup6\n    /* \"#utility.yul\":4790:4812   */\n  add\n    /* \"#utility.yul\":4786:4818   */\n  add\n    /* \"#utility.yul\":4779:4822   */\n  mstore\n    /* \"#utility.yul\":4890:4893   */\n  0xa0\n    /* \"#utility.yul\":4883:4885   */\n  0x1f\n    /* \"#utility.yul\":4879:4886   */\n  not\n    /* \"#utility.yul\":4874:4876   */\n  0x1f\n    /* \"#utility.yul\":4866:4872   */\n  dup4\n    /* \"#utility.yul\":4862:4877   */\n  add\n    /* \"#utility.yul\":4858:4887   */\n  and\n    /* \"#utility.yul\":4847:4856   */\n  dup5\n    /* \"#utility.yul\":4843:4888   */\n  add\n    /* \"#utility.yul\":4839:4894   */\n  add\n    /* \"#utility.yul\":4831:4894   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":4214:4900   */\n  swap6\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4905:5195   */\ntag_88:\n    /* \"#utility.yul\":4974:4980   */\n  0x00\n    /* \"#utility.yul\":5027:5029   */\n  0x20\n    /* \"#utility.yul\":5015:5024   */\n  dup3\n    /* \"#utility.yul\":5006:5013   */\n  dup5\n    /* \"#utility.yul\":5002:5025   */\n  sub\n    /* \"#utility.yul\":4998:5030   */\n  slt\n    /* \"#utility.yul\":4995:5047   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":5043:5044   */\n  0x00\n    /* \"#utility.yul\":5040:5041   */\n  dup1\n    /* \"#utility.yul\":5033:5045   */\n  revert\n    /* \"#utility.yul\":4995:5047   */\ntag_194:\n    /* \"#utility.yul\":5069:5085   */\n  dup2\n  mload\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"#utility.yul\":5114:5146   */\n  dup2\n  and\n    /* \"#utility.yul\":5104:5147   */\n  dup2\n  eq\n    /* \"#utility.yul\":5094:5165   */\n  tag_195\n  jumpi\n    /* \"#utility.yul\":5161:5162   */\n  0x00\n    /* \"#utility.yul\":5158:5159   */\n  dup1\n    /* \"#utility.yul\":5151:5163   */\n  revert\n    /* \"#utility.yul\":5094:5165   */\ntag_195:\n    /* \"#utility.yul\":5184:5189   */\n  swap4\n    /* \"#utility.yul\":4905:5195   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5382:5656   */\ntag_153:\n    /* \"totalEclipseNFT.sol\":236:2526  contract totalEclipseNFT is ERC721, Ownable, ERC2981 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"totalEclipseNFT.sol\":236:2526  contract totalEclipseNFT is ERC721, Ownable, ERC2981 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x6352211e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02fa7c47\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2a55205a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"totalEclipseNFT.sol\":2320:2523  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"totalEclipseNFT.sol\":2320:2523  function supportsInterface(bytes4 interfaceId)... */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"totalEclipseNFT.sol\":2134:2312  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_30\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"totalEclipseNFT.sol\":1934:2072  function totalSupply() public view returns (uint256) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":2572:2597   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2545:2563   */\n      add\n        /* \"totalEclipseNFT.sol\":1934:2072  function totalSupply() public view returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_30\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n    tag_10:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3530:3562   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3512:3563   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3579:3597   */\n      dup4\n      add\n        /* \"#utility.yul\":3572:3606   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3485:3503   */\n      add\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n      tag_28\n        /* \"#utility.yul\":3338:3612   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_11:\n      tag_30\n      tag_63\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_12:\n      tag_38\n      tag_66\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_48\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_30\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_38)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_34\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_30\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_30\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_19:\n      tag_34\n      tag_91\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_24\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_30\n      tag_100\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n        /* \"totalEclipseNFT.sol\":2320:2523  function supportsInterface(bytes4 interfaceId)... */\n    tag_27:\n        /* \"totalEclipseNFT.sol\":2450:2454  bool */\n      0x00\n        /* \"totalEclipseNFT.sol\":2479:2515  super.supportsInterface(interfaceId) */\n      tag_103\n        /* \"totalEclipseNFT.sol\":2503:2514  interfaceId */\n      dup3\n        /* \"totalEclipseNFT.sol\":2479:2502  super.supportsInterface */\n      tag_104\n        /* \"totalEclipseNFT.sol\":2479:2515  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_103:\n        /* \"totalEclipseNFT.sol\":2472:2515  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"totalEclipseNFT.sol\":2320:2523  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"totalEclipseNFT.sol\":2134:2312  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"totalEclipseNFT.sol\":2255:2304  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n      tag_109\n        /* \"totalEclipseNFT.sol\":2274:2283  _receiver */\n      dup3\n        /* \"totalEclipseNFT.sol\":2285:2303  _royaltyFeesInBips */\n      dup3\n        /* \"totalEclipseNFT.sol\":2255:2273  _setDefaultRoyalty */\n      tag_110\n        /* \"totalEclipseNFT.sol\":2255:2304  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n      jump\t// in\n    tag_109:\n        /* \"totalEclipseNFT.sol\":2134:2312  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_113\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n        /* \"totalEclipseNFT.sol\":1934:2072  function totalSupply() public view returns (uint256) {... */\n    tag_49:\n        /* \"totalEclipseNFT.sol\":1978:1985  uint256 */\n      0x00\n        /* \"totalEclipseNFT.sol\":2020:2021  1 */\n      0x01\n        /* \"totalEclipseNFT.sol\":2005:2017  _nextTokenId */\n      sload(0x09)\n        /* \"totalEclipseNFT.sol\":2005:2021  _nextTokenId - 1 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"totalEclipseNFT.sol\":1998:2021  return _nextTokenId - 1 */\n      swap1\n      pop\n        /* \"totalEclipseNFT.sol\":1934:2072  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6639:6671   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6621:6672   */\n      mstore\n        /* \"#utility.yul\":6688:6706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6681:6715   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6751:6783   */\n      dup3\n      and\n        /* \"#utility.yul\":6731:6749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6724:6784   */\n      mstore\n        /* \"#utility.yul\":6594:6612   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_133\n        /* \"#utility.yul\":6419:6790   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2465:2472  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2548  _tokenRoyaltyInfo[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2539  _tokenRoyaltyInfo */\n      0x08\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2548  _tokenRoyaltyInfo[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2493:2548  RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2465:2472  address */\n      dup3\n      swap2\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2559:2649  if (royalty.receiver == address(0)) {... */\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2609:2638  royalty = _defaultRoyaltyInfo */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2619:2638  _defaultRoyaltyInfo */\n      0x07\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2609:2638  royalty = _defaultRoyaltyInfo */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2559:2649  if (royalty.receiver == address(0)) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2696:2719  royalty.royaltyFraction */\n      0x20\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2659:2680  uint256 royaltyAmount */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n      0x2710\n      swap1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2719  salePrice * royalty.royaltyFraction */\n      tag_144\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2693  salePrice */\n      dup8\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2719  salePrice * royalty.royaltyFraction */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2683:2740  (salePrice * royalty.royaltyFraction) / _feeDenominator() */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2759:2775  royalty.receiver */\n      swap2\n      mload\n      swap7\n      swap2\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_153:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_176:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_179\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_180)\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2116:2329  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2218:2222  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2241:2282  interfaceId == type(IERC2981).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x152a902d)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2241:2322  interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId) */\n      tag_103\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2322  super.supportsInterface(interfaceId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2310:2321  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2309  super.supportsInterface */\n      tag_195\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2322  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n      0x2710\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3576:3602  feeNumerator > denominator */\n      dup3\n      and\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      mload(0x40)\n      shl(0xe0, 0x6f483d09)\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":8002:8041   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8042   */\n      mstore\n        /* \"#utility.yul\":8058:8076   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8051:8085   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":7957:7975   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      tag_133\n        /* \"#utility.yul\":7811:8091   */\n      jump\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3758:3780  receiver == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3848:3849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x5b6cc805)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n    tag_207:\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3894:3929  RoyaltyInfo(receiver, feeNumerator) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup1\n      dup4\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      0x20\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      mstore\n      shl(0xa0, 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n      swap1\n      swap2\n      mul\n      or\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3891  _defaultRoyaltyInfo */\n      0x07\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n      sstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2572:2597   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2545:2563   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_133\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_226\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_236\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_237\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_239\n      swap2\n      dup2\n      add\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      0x01\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_241\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_246\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_245)\n    tag_246:\n      0x60\n      swap2\n      pop\n    tag_245:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_241:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"totalEclipseNFT.sol\":1343:1562  function _baseURI() internal pure override returns (string memory) {... */\n    tag_178:\n        /* \"totalEclipseNFT.sol\":1395:1408  string memory */\n      0x60\n        /* \"totalEclipseNFT.sol\":1421:1520  return... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x4d\n      dup2\n      mstore\n      0x20\n      add\n      data_528dd67e901864c021e91bc02682ccaf0f079aa4e76798fe2da7da838db9c5cf\n      0x4d\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"totalEclipseNFT.sol\":1343:1562  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_255\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_258\n      jumpi\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_261:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_268\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_103\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_103\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_274\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_277\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_278\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_275:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_149\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2572:2597   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2545:2563   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_133\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3530:3562   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3512:3563   */\n      mstore\n        /* \"#utility.yul\":3579:3597   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3572:3606   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3485:3503   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_133\n        /* \"#utility.yul\":3338:3612   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_292\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_318:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_26:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_327:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_180\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":592:765   */\n    tag_319:\n        /* \"#utility.yul\":660:680   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":709:740   */\n      dup2\n      and\n        /* \"#utility.yul\":699:741   */\n      dup2\n      eq\n        /* \"#utility.yul\":689:759   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":689:759   */\n    tag_331:\n        /* \"#utility.yul\":592:765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":770:1136   */\n    tag_32:\n        /* \"#utility.yul\":837:843   */\n      0x00\n        /* \"#utility.yul\":845:851   */\n      dup1\n        /* \"#utility.yul\":898:900   */\n      0x40\n        /* \"#utility.yul\":886:895   */\n      dup4\n        /* \"#utility.yul\":877:884   */\n      dup6\n        /* \"#utility.yul\":873:896   */\n      sub\n        /* \"#utility.yul\":869:901   */\n      slt\n        /* \"#utility.yul\":866:918   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":911:912   */\n      dup1\n        /* \"#utility.yul\":904:916   */\n      revert\n        /* \"#utility.yul\":866:918   */\n    tag_333:\n        /* \"#utility.yul\":937:966   */\n      tag_334\n        /* \"#utility.yul\":956:965   */\n      dup4\n        /* \"#utility.yul\":937:966   */\n      tag_319\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":927:966   */\n      swap2\n      pop\n        /* \"#utility.yul\":1016:1018   */\n      0x20\n        /* \"#utility.yul\":1005:1014   */\n      dup4\n        /* \"#utility.yul\":1001:1019   */\n      add\n        /* \"#utility.yul\":988:1020   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1053:1058   */\n      dup2\n        /* \"#utility.yul\":1049:1087   */\n      and\n        /* \"#utility.yul\":1042:1047   */\n      dup2\n        /* \"#utility.yul\":1039:1088   */\n      eq\n        /* \"#utility.yul\":1029:1106   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1102:1103   */\n      0x00\n        /* \"#utility.yul\":1099:1100   */\n      dup1\n        /* \"#utility.yul\":1092:1104   */\n      revert\n        /* \"#utility.yul\":1029:1106   */\n    tag_335:\n        /* \"#utility.yul\":1125:1130   */\n      dup1\n        /* \"#utility.yul\":1115:1130   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":770:1136   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1441   */\n    tag_320:\n        /* \"#utility.yul\":1194:1197   */\n      0x00\n        /* \"#utility.yul\":1232:1237   */\n      dup2\n        /* \"#utility.yul\":1226:1238   */\n      mload\n        /* \"#utility.yul\":1259:1265   */\n      dup1\n        /* \"#utility.yul\":1254:1257   */\n      dup5\n        /* \"#utility.yul\":1247:1266   */\n      mstore\n        /* \"#utility.yul\":1315:1321   */\n      dup1\n        /* \"#utility.yul\":1308:1312   */\n      0x20\n        /* \"#utility.yul\":1301:1306   */\n      dup5\n        /* \"#utility.yul\":1297:1313   */\n      add\n        /* \"#utility.yul\":1290:1294   */\n      0x20\n        /* \"#utility.yul\":1285:1288   */\n      dup7\n        /* \"#utility.yul\":1281:1295   */\n      add\n        /* \"#utility.yul\":1275:1322   */\n      mcopy\n        /* \"#utility.yul\":1367:1368   */\n      0x00\n        /* \"#utility.yul\":1360:1364   */\n      0x20\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1346:1349   */\n      dup7\n        /* \"#utility.yul\":1342:1358   */\n      add\n        /* \"#utility.yul\":1338:1365   */\n      add\n        /* \"#utility.yul\":1331:1369   */\n      mstore\n        /* \"#utility.yul\":1430:1434   */\n      0x20\n        /* \"#utility.yul\":1423:1425   */\n      0x1f\n        /* \"#utility.yul\":1419:1426   */\n      not\n        /* \"#utility.yul\":1414:1416   */\n      0x1f\n        /* \"#utility.yul\":1406:1412   */\n      dup4\n        /* \"#utility.yul\":1402:1417   */\n      add\n        /* \"#utility.yul\":1398:1427   */\n      and\n        /* \"#utility.yul\":1393:1396   */\n      dup6\n        /* \"#utility.yul\":1389:1428   */\n      add\n        /* \"#utility.yul\":1385:1435   */\n      add\n        /* \"#utility.yul\":1378:1435   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1141:1441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1446:1677   */\n    tag_37:\n        /* \"#utility.yul\":1595:1597   */\n      0x20\n        /* \"#utility.yul\":1584:1593   */\n      dup2\n        /* \"#utility.yul\":1577:1598   */\n      mstore\n        /* \"#utility.yul\":1558:1562   */\n      0x00\n        /* \"#utility.yul\":1615:1671   */\n      tag_180\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1656:1665   */\n      dup4\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1615:1671   */\n      tag_320\n      jump\t// in\n        /* \"#utility.yul\":1682:1908   */\n    tag_40:\n        /* \"#utility.yul\":1741:1747   */\n      0x00\n        /* \"#utility.yul\":1794:1796   */\n      0x20\n        /* \"#utility.yul\":1782:1791   */\n      dup3\n        /* \"#utility.yul\":1773:1780   */\n      dup5\n        /* \"#utility.yul\":1769:1792   */\n      sub\n        /* \"#utility.yul\":1765:1797   */\n      slt\n        /* \"#utility.yul\":1762:1814   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1762:1814   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":1855:1878   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1682:1908   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2116   */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2077:2109   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2059:2110   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2047:2049   */\n      0x20\n        /* \"#utility.yul\":2032:2050   */\n      add\n      swap1\n        /* \"#utility.yul\":1913:2116   */\n      jump\t// out\n        /* \"#utility.yul\":2121:2421   */\n    tag_46:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_343:\n        /* \"#utility.yul\":2289:2318   */\n      tag_344\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_319\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2279:2318   */\n      swap5\n        /* \"#utility.yul\":2387:2389   */\n      0x20\n        /* \"#utility.yul\":2372:2390   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2359:2391   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2121:2421   */\n      jump\t// out\n        /* \"#utility.yul\":2608:2982   */\n    tag_54:\n        /* \"#utility.yul\":2685:2691   */\n      0x00\n        /* \"#utility.yul\":2693:2699   */\n      dup1\n        /* \"#utility.yul\":2701:2707   */\n      0x00\n        /* \"#utility.yul\":2754:2756   */\n      0x60\n        /* \"#utility.yul\":2742:2751   */\n      dup5\n        /* \"#utility.yul\":2733:2740   */\n      dup7\n        /* \"#utility.yul\":2729:2752   */\n      sub\n        /* \"#utility.yul\":2725:2757   */\n      slt\n        /* \"#utility.yul\":2722:2774   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2767:2768   */\n      dup1\n        /* \"#utility.yul\":2760:2772   */\n      revert\n        /* \"#utility.yul\":2722:2774   */\n    tag_347:\n        /* \"#utility.yul\":2793:2822   */\n      tag_348\n        /* \"#utility.yul\":2812:2821   */\n      dup5\n        /* \"#utility.yul\":2793:2822   */\n      tag_319\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2783:2822   */\n      swap3\n      pop\n        /* \"#utility.yul\":2841:2879   */\n      tag_349\n        /* \"#utility.yul\":2875:2877   */\n      0x20\n        /* \"#utility.yul\":2864:2873   */\n      dup6\n        /* \"#utility.yul\":2860:2878   */\n      add\n        /* \"#utility.yul\":2841:2879   */\n      tag_319\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2608:2982   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2831:2879   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2948:2950   */\n      0x40\n        /* \"#utility.yul\":2933:2951   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2920:2952   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2608:2982   */\n      jump\t// out\n        /* \"#utility.yul\":2987:3333   */\n    tag_58:\n        /* \"#utility.yul\":3055:3061   */\n      0x00\n        /* \"#utility.yul\":3063:3069   */\n      dup1\n        /* \"#utility.yul\":3116:3118   */\n      0x40\n        /* \"#utility.yul\":3104:3113   */\n      dup4\n        /* \"#utility.yul\":3095:3102   */\n      dup6\n        /* \"#utility.yul\":3091:3114   */\n      sub\n        /* \"#utility.yul\":3087:3119   */\n      slt\n        /* \"#utility.yul\":3084:3136   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3132:3133   */\n      0x00\n        /* \"#utility.yul\":3129:3130   */\n      dup1\n        /* \"#utility.yul\":3122:3134   */\n      revert\n        /* \"#utility.yul\":3084:3136   */\n    tag_351:\n      pop\n      pop\n        /* \"#utility.yul\":3177:3200   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3297:3299   */\n      0x20\n        /* \"#utility.yul\":3282:3300   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3269:3301   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2987:3333   */\n      jump\t// out\n        /* \"#utility.yul\":3617:3803   */\n    tag_71:\n        /* \"#utility.yul\":3676:3682   */\n      0x00\n        /* \"#utility.yul\":3729:3731   */\n      0x20\n        /* \"#utility.yul\":3717:3726   */\n      dup3\n        /* \"#utility.yul\":3708:3715   */\n      dup5\n        /* \"#utility.yul\":3704:3727   */\n      sub\n        /* \"#utility.yul\":3700:3732   */\n      slt\n        /* \"#utility.yul\":3697:3749   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3745:3746   */\n      0x00\n        /* \"#utility.yul\":3742:3743   */\n      dup1\n        /* \"#utility.yul\":3735:3747   */\n      revert\n        /* \"#utility.yul\":3697:3749   */\n    tag_354:\n        /* \"#utility.yul\":3768:3797   */\n      tag_180\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3768:3797   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":3808:4155   */\n    tag_84:\n        /* \"#utility.yul\":3873:3879   */\n      0x00\n        /* \"#utility.yul\":3881:3887   */\n      dup1\n        /* \"#utility.yul\":3934:3936   */\n      0x40\n        /* \"#utility.yul\":3922:3931   */\n      dup4\n        /* \"#utility.yul\":3913:3920   */\n      dup6\n        /* \"#utility.yul\":3909:3932   */\n      sub\n        /* \"#utility.yul\":3905:3937   */\n      slt\n        /* \"#utility.yul\":3902:3954   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3950:3951   */\n      0x00\n        /* \"#utility.yul\":3947:3948   */\n      dup1\n        /* \"#utility.yul\":3940:3952   */\n      revert\n        /* \"#utility.yul\":3902:3954   */\n    tag_357:\n        /* \"#utility.yul\":3973:4002   */\n      tag_358\n        /* \"#utility.yul\":3992:4001   */\n      dup4\n        /* \"#utility.yul\":3973:4002   */\n      tag_319\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3963:4002   */\n      swap2\n      pop\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4041:4050   */\n      dup4\n        /* \"#utility.yul\":4037:4055   */\n      add\n        /* \"#utility.yul\":4024:4056   */\n      calldataload\n        /* \"#utility.yul\":4099:4104   */\n      dup1\n        /* \"#utility.yul\":4092:4105   */\n      iszero\n        /* \"#utility.yul\":4085:4106   */\n      iszero\n        /* \"#utility.yul\":4078:4083   */\n      dup2\n        /* \"#utility.yul\":4075:4107   */\n      eq\n        /* \"#utility.yul\":4065:4125   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4118:4119   */\n      dup1\n        /* \"#utility.yul\":4111:4123   */\n      revert\n        /* \"#utility.yul\":4160:4287   */\n    tag_259:\n        /* \"#utility.yul\":4221:4231   */\n      0x4e487b71\n        /* \"#utility.yul\":4216:4219   */\n      0xe0\n        /* \"#utility.yul\":4212:4232   */\n      shl\n        /* \"#utility.yul\":4209:4210   */\n      0x00\n        /* \"#utility.yul\":4202:4233   */\n      mstore\n        /* \"#utility.yul\":4252:4256   */\n      0x41\n        /* \"#utility.yul\":4249:4250   */\n      0x04\n        /* \"#utility.yul\":4242:4257   */\n      mstore\n        /* \"#utility.yul\":4276:4280   */\n      0x24\n        /* \"#utility.yul\":4273:4274   */\n      0x00\n        /* \"#utility.yul\":4266:4281   */\n      revert\n        /* \"#utility.yul\":4292:5499   */\n    tag_88:\n        /* \"#utility.yul\":4387:4393   */\n      0x00\n        /* \"#utility.yul\":4395:4401   */\n      dup1\n        /* \"#utility.yul\":4403:4409   */\n      0x00\n        /* \"#utility.yul\":4411:4417   */\n      dup1\n        /* \"#utility.yul\":4464:4467   */\n      0x80\n        /* \"#utility.yul\":4452:4461   */\n      dup6\n        /* \"#utility.yul\":4443:4450   */\n      dup8\n        /* \"#utility.yul\":4439:4462   */\n      sub\n        /* \"#utility.yul\":4435:4468   */\n      slt\n        /* \"#utility.yul\":4432:4485   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":4481:4482   */\n      0x00\n        /* \"#utility.yul\":4478:4479   */\n      dup1\n        /* \"#utility.yul\":4471:4483   */\n      revert\n        /* \"#utility.yul\":4432:4485   */\n    tag_362:\n        /* \"#utility.yul\":4504:4533   */\n      tag_363\n        /* \"#utility.yul\":4523:4532   */\n      dup6\n        /* \"#utility.yul\":4504:4533   */\n      tag_319\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4494:4533   */\n      swap4\n      pop\n        /* \"#utility.yul\":4552:4590   */\n      tag_364\n        /* \"#utility.yul\":4586:4588   */\n      0x20\n        /* \"#utility.yul\":4575:4584   */\n      dup7\n        /* \"#utility.yul\":4571:4589   */\n      add\n        /* \"#utility.yul\":4552:4590   */\n      tag_319\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4542:4590   */\n      swap3\n      pop\n        /* \"#utility.yul\":4659:4661   */\n      0x40\n        /* \"#utility.yul\":4644:4662   */\n      dup6\n      add\n        /* \"#utility.yul\":4631:4663   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4738:4740   */\n      0x60\n        /* \"#utility.yul\":4723:4741   */\n      dup6\n      add\n        /* \"#utility.yul\":4710:4742   */\n      calldataload\n        /* \"#utility.yul\":4765:4783   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4754:4784   */\n      dup2\n      gt\n        /* \"#utility.yul\":4751:4801   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4794:4795   */\n      dup1\n        /* \"#utility.yul\":4787:4799   */\n      revert\n        /* \"#utility.yul\":4751:4801   */\n    tag_365:\n        /* \"#utility.yul\":4820:4842   */\n      dup6\n      add\n        /* \"#utility.yul\":4873:4877   */\n      0x1f\n        /* \"#utility.yul\":4865:4878   */\n      dup2\n      add\n        /* \"#utility.yul\":4861:4888   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4851:4906   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4899:4900   */\n      dup1\n        /* \"#utility.yul\":4892:4904   */\n      revert\n        /* \"#utility.yul\":4851:4906   */\n    tag_366:\n        /* \"#utility.yul\":4942:4944   */\n      dup1\n        /* \"#utility.yul\":4929:4945   */\n      calldataload\n        /* \"#utility.yul\":4968:4986   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4960:4966   */\n      dup2\n        /* \"#utility.yul\":4957:4987   */\n      gt\n        /* \"#utility.yul\":4954:5010   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":4990:5008   */\n      tag_368\n      tag_259\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5033:5042   */\n      mload\n        /* \"#utility.yul\":5131:5133   */\n      0x1f\n        /* \"#utility.yul\":5093:5110   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5089:5120   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5122:5124   */\n      0x3f\n        /* \"#utility.yul\":5085:5125   */\n      add\n        /* \"#utility.yul\":5081:5135   */\n      and\n        /* \"#utility.yul\":5069:5136   */\n      dup2\n      add\n        /* \"#utility.yul\":5166:5184   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5151:5185   */\n      dup2\n      gt\n        /* \"#utility.yul\":5187:5209   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":5148:5210   */\n      or\n        /* \"#utility.yul\":5145:5233   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5213:5231   */\n      tag_370\n      tag_259\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5249:5251   */\n      0x40\n        /* \"#utility.yul\":5242:5264   */\n      mstore\n        /* \"#utility.yul\":5273:5295   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5314:5329   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5331:5333   */\n      0x20\n        /* \"#utility.yul\":5310:5334   */\n      add\n        /* \"#utility.yul\":5307:5344   */\n      dup10\n      lt\n        /* \"#utility.yul\":5304:5361   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":5357:5358   */\n      0x00\n        /* \"#utility.yul\":5354:5355   */\n      dup1\n        /* \"#utility.yul\":5347:5359   */\n      revert\n        /* \"#utility.yul\":5304:5361   */\n    tag_371:\n        /* \"#utility.yul\":5413:5419   */\n      dup2\n        /* \"#utility.yul\":5408:5410   */\n      0x20\n        /* \"#utility.yul\":5404:5406   */\n      dup5\n        /* \"#utility.yul\":5400:5411   */\n      add\n        /* \"#utility.yul\":5395:5397   */\n      0x20\n        /* \"#utility.yul\":5387:5393   */\n      dup4\n        /* \"#utility.yul\":5383:5398   */\n      add\n        /* \"#utility.yul\":5370:5420   */\n      calldatacopy\n        /* \"#utility.yul\":5466:5467   */\n      0x00\n        /* \"#utility.yul\":5461:5463   */\n      0x20\n        /* \"#utility.yul\":5452:5458   */\n      dup4\n        /* \"#utility.yul\":5444:5450   */\n      dup4\n        /* \"#utility.yul\":5440:5459   */\n      add\n        /* \"#utility.yul\":5436:5464   */\n      add\n        /* \"#utility.yul\":5429:5468   */\n      mstore\n        /* \"#utility.yul\":5487:5493   */\n      dup1\n        /* \"#utility.yul\":5477:5493   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4292:5499   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5504:5764   */\n    tag_96:\n        /* \"#utility.yul\":5572:5578   */\n      0x00\n        /* \"#utility.yul\":5580:5586   */\n      dup1\n        /* \"#utility.yul\":5633:5635   */\n      0x40\n        /* \"#utility.yul\":5621:5630   */\n      dup4\n        /* \"#utility.yul\":5612:5619   */\n      dup6\n        /* \"#utility.yul\":5608:5631   */\n      sub\n        /* \"#utility.yul\":5604:5636   */\n      slt\n        /* \"#utility.yul\":5601:5653   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":5649:5650   */\n      0x00\n        /* \"#utility.yul\":5646:5647   */\n      dup1\n        /* \"#utility.yul\":5639:5651   */\n      revert\n        /* \"#utility.yul\":5601:5653   */\n    tag_373:\n        /* \"#utility.yul\":5672:5701   */\n      tag_374\n        /* \"#utility.yul\":5691:5700   */\n      dup4\n        /* \"#utility.yul\":5672:5701   */\n      tag_319\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5662:5701   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5758   */\n      tag_375\n        /* \"#utility.yul\":5754:5756   */\n      0x20\n        /* \"#utility.yul\":5743:5752   */\n      dup5\n        /* \"#utility.yul\":5739:5757   */\n      add\n        /* \"#utility.yul\":5720:5758   */\n      tag_319\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5710:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5504:5764   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5769:6149   */\n    tag_113:\n        /* \"#utility.yul\":5848:5849   */\n      0x01\n        /* \"#utility.yul\":5844:5856   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5891:5903   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5912:5973   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5966:5970   */\n      0x7f\n        /* \"#utility.yul\":5958:5964   */\n      dup3\n        /* \"#utility.yul\":5954:5971   */\n      and\n        /* \"#utility.yul\":5944:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5912:5973   */\n    tag_377:\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6011:6017   */\n      dup3\n        /* \"#utility.yul\":6008:6022   */\n      lt\n        /* \"#utility.yul\":5988:6006   */\n      dup2\n        /* \"#utility.yul\":5985:6023   */\n      sub\n        /* \"#utility.yul\":5982:6143   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":6065:6075   */\n      0x4e487b71\n        /* \"#utility.yul\":6060:6063   */\n      0xe0\n        /* \"#utility.yul\":6056:6076   */\n      shl\n        /* \"#utility.yul\":6053:6054   */\n      0x00\n        /* \"#utility.yul\":6046:6077   */\n      mstore\n        /* \"#utility.yul\":6100:6104   */\n      0x22\n        /* \"#utility.yul\":6097:6098   */\n      0x04\n        /* \"#utility.yul\":6090:6105   */\n      mstore\n        /* \"#utility.yul\":6128:6132   */\n      0x24\n        /* \"#utility.yul\":6125:6126   */\n      0x00\n        /* \"#utility.yul\":6118:6133   */\n      revert\n        /* \"#utility.yul\":5982:6143   */\n    tag_378:\n      pop\n        /* \"#utility.yul\":5769:6149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6154:6281   */\n    tag_321:\n        /* \"#utility.yul\":6215:6225   */\n      0x4e487b71\n        /* \"#utility.yul\":6210:6213   */\n      0xe0\n        /* \"#utility.yul\":6206:6226   */\n      shl\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6196:6227   */\n      mstore\n        /* \"#utility.yul\":6246:6250   */\n      0x11\n        /* \"#utility.yul\":6243:6244   */\n      0x04\n        /* \"#utility.yul\":6236:6251   */\n      mstore\n        /* \"#utility.yul\":6270:6274   */\n      0x24\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6260:6275   */\n      revert\n        /* \"#utility.yul\":6286:6414   */\n    tag_130:\n        /* \"#utility.yul\":6353:6362   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6374:6385   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6371:6408   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":6388:6406   */\n      tag_103\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":6795:6963   */\n    tag_145:\n        /* \"#utility.yul\":6868:6877   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6899:6908   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6916:6931   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6910:6932   */\n      dup5\n      eq\n        /* \"#utility.yul\":6896:6933   */\n      or\n        /* \"#utility.yul\":6886:6957   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":6937:6955   */\n      tag_103\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":7100:7317   */\n    tag_147:\n        /* \"#utility.yul\":7140:7141   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup3\n        /* \"#utility.yul\":7156:7288   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7210:7220   */\n      0x4e487b71\n        /* \"#utility.yul\":7205:7208   */\n      0xe0\n        /* \"#utility.yul\":7201:7221   */\n      shl\n        /* \"#utility.yul\":7198:7199   */\n      0x00\n        /* \"#utility.yul\":7191:7222   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x12\n        /* \"#utility.yul\":7242:7243   */\n      0x04\n        /* \"#utility.yul\":7235:7250   */\n      mstore\n        /* \"#utility.yul\":7273:7277   */\n      0x24\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7263:7278   */\n      revert\n        /* \"#utility.yul\":7156:7288   */\n    tag_389:\n      pop\n        /* \"#utility.yul\":7302:7311   */\n      div\n      swap1\n        /* \"#utility.yul\":7100:7317   */\n      jump\t// out\n        /* \"#utility.yul\":7322:7534   */\n    tag_322:\n        /* \"#utility.yul\":7364:7367   */\n      0x00\n        /* \"#utility.yul\":7402:7407   */\n      dup2\n        /* \"#utility.yul\":7396:7408   */\n      mload\n        /* \"#utility.yul\":7446:7452   */\n      dup1\n        /* \"#utility.yul\":7439:7443   */\n      0x20\n        /* \"#utility.yul\":7432:7437   */\n      dup5\n        /* \"#utility.yul\":7428:7444   */\n      add\n        /* \"#utility.yul\":7423:7426   */\n      dup6\n        /* \"#utility.yul\":7417:7453   */\n      mcopy\n        /* \"#utility.yul\":7508:7509   */\n      0x00\n        /* \"#utility.yul\":7472:7488   */\n      swap4\n      add\n        /* \"#utility.yul\":7497:7510   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":7472:7488   */\n      swap1\n      swap2\n        /* \"#utility.yul\":7322:7534   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7806   */\n    tag_184:\n        /* \"#utility.yul\":7718:7721   */\n      0x00\n        /* \"#utility.yul\":7743:7800   */\n      tag_316\n        /* \"#utility.yul\":7769:7799   */\n      tag_393\n        /* \"#utility.yul\":7795:7798   */\n      dup4\n        /* \"#utility.yul\":7787:7793   */\n      dup7\n        /* \"#utility.yul\":7769:7799   */\n      tag_322\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7761:7767   */\n      dup5\n        /* \"#utility.yul\":7743:7800   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":8096:8592   */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8327:8359   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":8309:8360   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8396:8428   */\n      dup5\n      and\n        /* \"#utility.yul\":8391:8393   */\n      0x20\n        /* \"#utility.yul\":8376:8394   */\n      dup3\n      add\n        /* \"#utility.yul\":8369:8429   */\n      mstore\n        /* \"#utility.yul\":8460:8462   */\n      0x40\n        /* \"#utility.yul\":8445:8463   */\n      dup2\n      add\n        /* \"#utility.yul\":8438:8472   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8508:8511   */\n      0x80\n        /* \"#utility.yul\":8503:8505   */\n      0x60\n        /* \"#utility.yul\":8488:8506   */\n      dup3\n      add\n        /* \"#utility.yul\":8481:8512   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":8529:8586   */\n      tag_396\n      swap1\n        /* \"#utility.yul\":8566:8585   */\n      dup4\n      add\n        /* \"#utility.yul\":8558:8564   */\n      dup5\n        /* \"#utility.yul\":8529:8586   */\n      tag_320\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8521:8586   */\n      swap7\n        /* \"#utility.yul\":8096:8592   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8597:8846   */\n    tag_240:\n        /* \"#utility.yul\":8666:8672   */\n      0x00\n        /* \"#utility.yul\":8719:8721   */\n      0x20\n        /* \"#utility.yul\":8707:8716   */\n      dup3\n        /* \"#utility.yul\":8698:8705   */\n      dup5\n        /* \"#utility.yul\":8694:8717   */\n      sub\n        /* \"#utility.yul\":8690:8722   */\n      slt\n        /* \"#utility.yul\":8687:8739   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":8735:8736   */\n      0x00\n        /* \"#utility.yul\":8732:8733   */\n      dup1\n        /* \"#utility.yul\":8725:8737   */\n      revert\n        /* \"#utility.yul\":8687:8739   */\n    tag_398:\n        /* \"#utility.yul\":8767:8776   */\n      dup2\n        /* \"#utility.yul\":8761:8777   */\n      mload\n        /* \"#utility.yul\":8786:8816   */\n      tag_180\n        /* \"#utility.yul\":8810:8815   */\n      dup2\n        /* \"#utility.yul\":8786:8816   */\n      tag_318\n      jump\t// in\n    stop\n    data_528dd67e901864c021e91bc02682ccaf0f079aa4e76798fe2da7da838db9c5cf 68747470733a2f2f697066732e66696c65626173652e696f2f697066732f516d586341317245656f5576634d6e4c5165464a76334c7655456558696a66426b714a6745354c434761394d41502f\n\n    auxdata: 0xa26469706673582212207565ff58153e7c7baee26d2076128fe672fa88556d2419c5e79891dc7efa8a4064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3259": {
									"entryPoint": null,
									"id": 3259,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1182": {
									"entryPoint": 1566,
									"id": 1182,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAuthorized_764": {
									"entryPoint": 1466,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1312": {
									"entryPoint": 929,
									"id": 1312,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 570,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_feeDenominator_1611": {
									"entryPoint": null,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getApproved_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_727": {
									"entryPoint": 1856,
									"id": 727,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_920": {
									"entryPoint": 832,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1742": {
									"entryPoint": null,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1248": {
									"entryPoint": 1987,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_935": {
									"entryPoint": 779,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_961": {
									"entryPoint": 810,
									"id": 961,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1219": {
									"entryPoint": 412,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setDefaultRoyalty_1657": {
									"entryPoint": 617,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 245,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_870": {
									"entryPoint": 1224,
									"id": 870,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@collectiveMinting_3300": {
									"entryPoint": 348,
									"id": 3300,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isApprovedForAll_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setRoyaltyInfo_3325": {
									"entryPoint": 326,
									"id": 3325,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 2609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint96t_addresst_address_fromMemory": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5658:15",
										"nodeType": "YulBlock",
										"src": "0:5658:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:15",
													"nodeType": "YulBlock",
													"src": "74:117:15",
													"statements": [
														{
															"nativeSrc": "84:22:15",
															"nodeType": "YulAssignment",
															"src": "84:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:15"
																},
																"nativeSrc": "93:13:15",
																"nodeType": "YulFunctionCall",
																"src": "93:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:15",
																"nodeType": "YulBlock",
																"src": "169:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:15",
																					"nodeType": "YulLiteral",
																					"src": "178:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:15",
																					"nodeType": "YulLiteral",
																					"src": "181:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:15"
																			},
																			"nativeSrc": "171:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:15"
																		},
																		"nativeSrc": "171:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:15",
																										"nodeType": "YulLiteral",
																										"src": "154:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:15",
																										"nodeType": "YulLiteral",
																										"src": "159:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:15"
																								},
																								"nativeSrc": "150:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:15",
																								"nodeType": "YulLiteral",
																								"src": "163:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:15"
																						},
																						"nativeSrc": "146:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:15"
																				},
																				"nativeSrc": "135:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:15"
																		},
																		"nativeSrc": "125:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:15"
																},
																"nativeSrc": "118:50:15",
																"nodeType": "YulFunctionCall",
																"src": "118:50:15"
															},
															"nativeSrc": "115:70:15",
															"nodeType": "YulIf",
															"src": "115:70:15"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:15",
														"nodeType": "YulTypedName",
														"src": "53:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:15",
														"nodeType": "YulTypedName",
														"src": "64:5:15",
														"type": ""
													}
												],
												"src": "14:177:15"
											},
											{
												"body": {
													"nativeSrc": "310:344:15",
													"nodeType": "YulBlock",
													"src": "310:344:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "356:16:15",
																"nodeType": "YulBlock",
																"src": "356:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "365:1:15",
																					"nodeType": "YulLiteral",
																					"src": "365:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "368:1:15",
																					"nodeType": "YulLiteral",
																					"src": "368:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "358:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:15"
																			},
																			"nativeSrc": "358:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "358:12:15"
																		},
																		"nativeSrc": "358:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "331:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "331:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "340:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "340:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "327:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "327:3:15"
																		},
																		"nativeSrc": "327:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "327:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:15",
																		"nodeType": "YulLiteral",
																		"src": "352:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "323:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "323:3:15"
																},
																"nativeSrc": "323:32:15",
																"nodeType": "YulFunctionCall",
																"src": "323:32:15"
															},
															"nativeSrc": "320:52:15",
															"nodeType": "YulIf",
															"src": "320:52:15"
														},
														{
															"nativeSrc": "381:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "381:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "400:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "394:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "394:5:15"
																},
																"nativeSrc": "394:16:15",
																"nodeType": "YulFunctionCall",
																"src": "394:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "385:5:15",
																	"nodeType": "YulTypedName",
																	"src": "385:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "472:16:15",
																"nodeType": "YulBlock",
																"src": "472:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "481:1:15",
																					"nodeType": "YulLiteral",
																					"src": "481:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "484:1:15",
																					"nodeType": "YulLiteral",
																					"src": "484:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "474:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "474:6:15"
																			},
																			"nativeSrc": "474:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "474:12:15"
																		},
																		"nativeSrc": "474:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "474:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "432:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "432:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "443:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "443:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "458:2:15",
																										"nodeType": "YulLiteral",
																										"src": "458:2:15",
																										"type": "",
																										"value": "96"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "462:1:15",
																										"nodeType": "YulLiteral",
																										"src": "462:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "454:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "454:3:15"
																								},
																								"nativeSrc": "454:10:15",
																								"nodeType": "YulFunctionCall",
																								"src": "454:10:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "466:1:15",
																								"nodeType": "YulLiteral",
																								"src": "466:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "450:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "450:3:15"
																						},
																						"nativeSrc": "450:18:15",
																						"nodeType": "YulFunctionCall",
																						"src": "450:18:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "439:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "439:3:15"
																				},
																				"nativeSrc": "439:30:15",
																				"nodeType": "YulFunctionCall",
																				"src": "439:30:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "429:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "429:2:15"
																		},
																		"nativeSrc": "429:41:15",
																		"nodeType": "YulFunctionCall",
																		"src": "429:41:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "422:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "422:6:15"
																},
																"nativeSrc": "422:49:15",
																"nodeType": "YulFunctionCall",
																"src": "422:49:15"
															},
															"nativeSrc": "419:69:15",
															"nodeType": "YulIf",
															"src": "419:69:15"
														},
														{
															"nativeSrc": "497:15:15",
															"nodeType": "YulAssignment",
															"src": "497:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "507:5:15",
																"nodeType": "YulIdentifier",
																"src": "507:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "497:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:15"
																}
															]
														},
														{
															"nativeSrc": "521:59:15",
															"nodeType": "YulAssignment",
															"src": "521:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:15",
																				"nodeType": "YulLiteral",
																				"src": "576:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:15"
																		},
																		"nativeSrc": "561:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "531:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "531:29:15"
																},
																"nativeSrc": "531:49:15",
																"nodeType": "YulFunctionCall",
																"src": "531:49:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "521:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:15"
																}
															]
														},
														{
															"nativeSrc": "589:59:15",
															"nodeType": "YulAssignment",
															"src": "589:59:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "633:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "633:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "644:2:15",
																				"nodeType": "YulLiteral",
																				"src": "644:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "629:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:15"
																		},
																		"nativeSrc": "629:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "629:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "599:29:15",
																	"nodeType": "YulIdentifier",
																	"src": "599:29:15"
																},
																"nativeSrc": "599:49:15",
																"nodeType": "YulFunctionCall",
																"src": "599:49:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_address_fromMemory",
												"nativeSrc": "196:458:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "260:9:15",
														"nodeType": "YulTypedName",
														"src": "260:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "271:7:15",
														"nodeType": "YulTypedName",
														"src": "271:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "283:6:15",
														"nodeType": "YulTypedName",
														"src": "283:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "291:6:15",
														"nodeType": "YulTypedName",
														"src": "291:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "299:6:15",
														"nodeType": "YulTypedName",
														"src": "299:6:15",
														"type": ""
													}
												],
												"src": "196:458:15"
											},
											{
												"body": {
													"nativeSrc": "691:95:15",
													"nodeType": "YulBlock",
													"src": "691:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "708:1:15",
																		"nodeType": "YulLiteral",
																		"src": "708:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "715:3:15",
																				"nodeType": "YulLiteral",
																				"src": "715:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "720:10:15",
																				"nodeType": "YulLiteral",
																				"src": "720:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "711:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "711:3:15"
																		},
																		"nativeSrc": "711:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "711:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "701:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:15"
																},
																"nativeSrc": "701:31:15",
																"nodeType": "YulFunctionCall",
																"src": "701:31:15"
															},
															"nativeSrc": "701:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "701:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "748:1:15",
																		"nodeType": "YulLiteral",
																		"src": "748:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:4:15",
																		"nodeType": "YulLiteral",
																		"src": "751:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "741:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "741:6:15"
																},
																"nativeSrc": "741:15:15",
																"nodeType": "YulFunctionCall",
																"src": "741:15:15"
															},
															"nativeSrc": "741:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "741:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "772:1:15",
																		"nodeType": "YulLiteral",
																		"src": "772:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "775:4:15",
																		"nodeType": "YulLiteral",
																		"src": "775:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "765:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:15"
																},
																"nativeSrc": "765:15:15",
																"nodeType": "YulFunctionCall",
																"src": "765:15:15"
															},
															"nativeSrc": "765:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "765:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "659:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "659:127:15"
											},
											{
												"body": {
													"nativeSrc": "846:325:15",
													"nodeType": "YulBlock",
													"src": "846:325:15",
													"statements": [
														{
															"nativeSrc": "856:22:15",
															"nodeType": "YulAssignment",
															"src": "856:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "870:1:15",
																		"nodeType": "YulLiteral",
																		"src": "870:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "873:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "873:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "866:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:15"
																},
																"nativeSrc": "866:12:15",
																"nodeType": "YulFunctionCall",
																"src": "866:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "856:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:15"
																}
															]
														},
														{
															"nativeSrc": "887:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "887:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "917:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "917:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "923:1:15",
																		"nodeType": "YulLiteral",
																		"src": "923:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "913:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "913:3:15"
																},
																"nativeSrc": "913:12:15",
																"nodeType": "YulFunctionCall",
																"src": "913:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "891:18:15",
																	"nodeType": "YulTypedName",
																	"src": "891:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "964:31:15",
																"nodeType": "YulBlock",
																"src": "964:31:15",
																"statements": [
																	{
																		"nativeSrc": "966:27:15",
																		"nodeType": "YulAssignment",
																		"src": "966:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "980:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "980:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "988:4:15",
																					"nodeType": "YulLiteral",
																					"src": "988:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "976:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "976:3:15"
																			},
																			"nativeSrc": "976:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "976:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "966:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "966:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "944:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "944:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "937:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:15"
																},
																"nativeSrc": "937:26:15",
																"nodeType": "YulFunctionCall",
																"src": "937:26:15"
															},
															"nativeSrc": "934:61:15",
															"nodeType": "YulIf",
															"src": "934:61:15"
														},
														{
															"body": {
																"nativeSrc": "1054:111:15",
																"nodeType": "YulBlock",
																"src": "1054:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1075:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1075:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1082:3:15",
																							"nodeType": "YulLiteral",
																							"src": "1082:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1087:10:15",
																							"nodeType": "YulLiteral",
																							"src": "1087:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1078:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1078:3:15"
																					},
																					"nativeSrc": "1078:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1078:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1068:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1068:6:15"
																			},
																			"nativeSrc": "1068:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1068:31:15"
																		},
																		"nativeSrc": "1068:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1068:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1119:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1119:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1122:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1122:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1112:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1112:6:15"
																			},
																			"nativeSrc": "1112:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1112:15:15"
																		},
																		"nativeSrc": "1112:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1112:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1147:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1147:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1150:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1150:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1140:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:15"
																			},
																			"nativeSrc": "1140:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1140:15:15"
																		},
																		"nativeSrc": "1140:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1140:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1010:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "1010:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1033:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1033:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1041:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1041:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1030:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1030:2:15"
																		},
																		"nativeSrc": "1030:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1030:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1007:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1007:2:15"
																},
																"nativeSrc": "1007:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1007:38:15"
															},
															"nativeSrc": "1004:161:15",
															"nodeType": "YulIf",
															"src": "1004:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "791:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "826:4:15",
														"nodeType": "YulTypedName",
														"src": "826:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "835:6:15",
														"nodeType": "YulTypedName",
														"src": "835:6:15",
														"type": ""
													}
												],
												"src": "791:380:15"
											},
											{
												"body": {
													"nativeSrc": "1232:65:15",
													"nodeType": "YulBlock",
													"src": "1232:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1252:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1252:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:15"
																},
																"nativeSrc": "1242:14:15",
																"nodeType": "YulFunctionCall",
																"src": "1242:14:15"
															},
															"nativeSrc": "1242:14:15",
															"nodeType": "YulExpressionStatement",
															"src": "1242:14:15"
														},
														{
															"nativeSrc": "1265:26:15",
															"nodeType": "YulAssignment",
															"src": "1265:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1283:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1286:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1286:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1273:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1273:9:15"
																},
																"nativeSrc": "1273:18:15",
																"nodeType": "YulFunctionCall",
																"src": "1273:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1265:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1265:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1176:121:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1215:3:15",
														"nodeType": "YulTypedName",
														"src": "1215:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1223:4:15",
														"nodeType": "YulTypedName",
														"src": "1223:4:15",
														"type": ""
													}
												],
												"src": "1176:121:15"
											},
											{
												"body": {
													"nativeSrc": "1383:437:15",
													"nodeType": "YulBlock",
													"src": "1383:437:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1416:398:15",
																"nodeType": "YulBlock",
																"src": "1416:398:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1437:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1437:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1440:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1440:5:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1430:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1430:6:15"
																			},
																			"nativeSrc": "1430:16:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1430:16:15"
																		},
																		"nativeSrc": "1430:16:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1430:16:15"
																	},
																	{
																		"nativeSrc": "1459:30:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1459:30:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1481:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1481:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1484:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1484:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1471:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1471:9:15"
																			},
																			"nativeSrc": "1471:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1471:18:15"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1463:4:15",
																				"nodeType": "YulTypedName",
																				"src": "1463:4:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1502:57:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1502:57:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1525:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1525:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1535:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1535:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1542:10:15",
																									"nodeType": "YulIdentifier",
																									"src": "1542:10:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1554:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1554:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1538:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1538:3:15"
																							},
																							"nativeSrc": "1538:19:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1538:19:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1531:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1531:3:15"
																					},
																					"nativeSrc": "1531:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1531:27:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1521:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1521:3:15"
																			},
																			"nativeSrc": "1521:38:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1521:38:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1506:11:15",
																				"nodeType": "YulTypedName",
																				"src": "1506:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1596:23:15",
																			"nodeType": "YulBlock",
																			"src": "1596:23:15",
																			"statements": [
																				{
																					"nativeSrc": "1598:19:15",
																					"nodeType": "YulAssignment",
																					"src": "1598:19:15",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1613:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "1613:4:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1598:11:15",
																							"nodeType": "YulIdentifier",
																							"src": "1598:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1578:10:15",
																					"nodeType": "YulIdentifier",
																					"src": "1578:10:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1590:4:15",
																					"nodeType": "YulLiteral",
																					"src": "1590:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1575:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1575:2:15"
																			},
																			"nativeSrc": "1575:20:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1575:20:15"
																		},
																		"nativeSrc": "1572:47:15",
																		"nodeType": "YulIf",
																		"src": "1572:47:15"
																	},
																	{
																		"nativeSrc": "1632:41:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1632:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1646:4:15",
																					"nodeType": "YulIdentifier",
																					"src": "1646:4:15"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1656:1:15",
																							"nodeType": "YulLiteral",
																							"src": "1656:1:15",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1663:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1663:3:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1668:2:15",
																									"nodeType": "YulLiteral",
																									"src": "1668:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1659:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "1659:3:15"
																							},
																							"nativeSrc": "1659:12:15",
																							"nodeType": "YulFunctionCall",
																							"src": "1659:12:15"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1652:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1652:3:15"
																					},
																					"nativeSrc": "1652:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "1652:20:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1642:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1642:3:15"
																			},
																			"nativeSrc": "1642:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1642:31:15"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1636:2:15",
																				"nodeType": "YulTypedName",
																				"src": "1636:2:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1686:24:15",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1686:24:15",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1699:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "1699:11:15"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1690:5:15",
																				"nodeType": "YulTypedName",
																				"src": "1690:5:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1784:20:15",
																			"nodeType": "YulBlock",
																			"src": "1784:20:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1793:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1793:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1800:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1800:1:15",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1786:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "1786:6:15"
																						},
																						"nativeSrc": "1786:16:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1786:16:15"
																					},
																					"nativeSrc": "1786:16:15",
																					"nodeType": "YulExpressionStatement",
																					"src": "1786:16:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1734:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "1734:5:15"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1741:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "1741:2:15"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1731:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "1731:2:15"
																			},
																			"nativeSrc": "1731:13:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1731:13:15"
																		},
																		"nativeSrc": "1723:81:15",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1745:26:15",
																			"nodeType": "YulBlock",
																			"src": "1745:26:15",
																			"statements": [
																				{
																					"nativeSrc": "1747:22:15",
																					"nodeType": "YulAssignment",
																					"src": "1747:22:15",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1760:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "1760:5:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1767:1:15",
																								"nodeType": "YulLiteral",
																								"src": "1767:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1756:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1756:3:15"
																						},
																						"nativeSrc": "1756:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1756:13:15"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1747:5:15",
																							"nodeType": "YulIdentifier",
																							"src": "1747:5:15"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1727:3:15",
																			"nodeType": "YulBlock",
																			"src": "1727:3:15",
																			"statements": []
																		},
																		"src": "1723:81:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1399:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1399:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1396:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1396:2:15"
																},
																"nativeSrc": "1396:11:15",
																"nodeType": "YulFunctionCall",
																"src": "1396:11:15"
															},
															"nativeSrc": "1393:421:15",
															"nodeType": "YulIf",
															"src": "1393:421:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1302:518:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1355:5:15",
														"nodeType": "YulTypedName",
														"src": "1355:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1362:3:15",
														"nodeType": "YulTypedName",
														"src": "1362:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1367:10:15",
														"nodeType": "YulTypedName",
														"src": "1367:10:15",
														"type": ""
													}
												],
												"src": "1302:518:15"
											},
											{
												"body": {
													"nativeSrc": "1910:81:15",
													"nodeType": "YulBlock",
													"src": "1910:81:15",
													"statements": [
														{
															"nativeSrc": "1920:65:15",
															"nodeType": "YulAssignment",
															"src": "1920:65:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1935:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1935:4:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1953:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1953:1:15",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1956:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "1956:3:15"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1949:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1949:3:15"
																								},
																								"nativeSrc": "1949:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1949:11:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1966:1:15",
																										"nodeType": "YulLiteral",
																										"src": "1966:1:15",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1962:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "1962:3:15"
																								},
																								"nativeSrc": "1962:6:15",
																								"nodeType": "YulFunctionCall",
																								"src": "1962:6:15"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1945:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1945:3:15"
																						},
																						"nativeSrc": "1945:24:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1945:24:15"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1941:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1941:3:15"
																				},
																				"nativeSrc": "1941:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1941:29:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1931:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1931:3:15"
																		},
																		"nativeSrc": "1931:40:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1931:40:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1977:1:15",
																				"nodeType": "YulLiteral",
																				"src": "1977:1:15",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1980:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1980:3:15"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1973:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1973:3:15"
																		},
																		"nativeSrc": "1973:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1928:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1928:2:15"
																},
																"nativeSrc": "1928:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1928:57:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1920:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1920:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1825:166:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1887:4:15",
														"nodeType": "YulTypedName",
														"src": "1887:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1893:3:15",
														"nodeType": "YulTypedName",
														"src": "1893:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1901:4:15",
														"nodeType": "YulTypedName",
														"src": "1901:4:15",
														"type": ""
													}
												],
												"src": "1825:166:15"
											},
											{
												"body": {
													"nativeSrc": "2092:1203:15",
													"nodeType": "YulBlock",
													"src": "2092:1203:15",
													"statements": [
														{
															"nativeSrc": "2102:24:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2102:24:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2122:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2122:3:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2116:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2116:5:15"
																},
																"nativeSrc": "2116:10:15",
																"nodeType": "YulFunctionCall",
																"src": "2116:10:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2106:6:15",
																	"nodeType": "YulTypedName",
																	"src": "2106:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2169:22:15",
																"nodeType": "YulBlock",
																"src": "2169:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2171:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "2171:16:15"
																			},
																			"nativeSrc": "2171:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:18:15"
																		},
																		"nativeSrc": "2171:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2141:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2141:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2157:2:15",
																						"nodeType": "YulLiteral",
																						"src": "2157:2:15",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2161:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2161:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2153:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2153:3:15"
																				},
																				"nativeSrc": "2153:10:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2153:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2165:1:15",
																				"nodeType": "YulLiteral",
																				"src": "2165:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2149:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:15"
																		},
																		"nativeSrc": "2149:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:18:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2138:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2138:2:15"
																},
																"nativeSrc": "2138:30:15",
																"nodeType": "YulFunctionCall",
																"src": "2138:30:15"
															},
															"nativeSrc": "2135:56:15",
															"nodeType": "YulIf",
															"src": "2135:56:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2244:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "2244:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2282:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "2282:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2276:5:15",
																					"nodeType": "YulIdentifier",
																					"src": "2276:5:15"
																				},
																				"nativeSrc": "2276:11:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2276:11:15"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2250:25:15",
																			"nodeType": "YulIdentifier",
																			"src": "2250:25:15"
																		},
																		"nativeSrc": "2250:38:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:38:15"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2290:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2200:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "2200:43:15"
																},
																"nativeSrc": "2200:97:15",
																"nodeType": "YulFunctionCall",
																"src": "2200:97:15"
															},
															"nativeSrc": "2200:97:15",
															"nodeType": "YulExpressionStatement",
															"src": "2200:97:15"
														},
														{
															"nativeSrc": "2306:18:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2306:18:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2323:1:15",
																"nodeType": "YulLiteral",
																"src": "2323:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2310:9:15",
																	"nodeType": "YulTypedName",
																	"src": "2310:9:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2333:17:15",
															"nodeType": "YulAssignment",
															"src": "2333:17:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2346:4:15",
																"nodeType": "YulLiteral",
																"src": "2346:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2333:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "2333:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2396:642:15",
																		"nodeType": "YulBlock",
																		"src": "2396:642:15",
																		"statements": [
																			{
																				"nativeSrc": "2410:35:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2410:35:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2429:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2429:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2441:2:15",
																									"nodeType": "YulLiteral",
																									"src": "2441:2:15",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2437:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2437:3:15"
																							},
																							"nativeSrc": "2437:7:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2437:7:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2425:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2425:3:15"
																					},
																					"nativeSrc": "2425:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2425:20:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2414:7:15",
																						"nodeType": "YulTypedName",
																						"src": "2414:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2458:49:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2458:49:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2502:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2502:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2472:29:15",
																						"nodeType": "YulIdentifier",
																						"src": "2472:29:15"
																					},
																					"nativeSrc": "2472:35:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2472:35:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2462:6:15",
																						"nodeType": "YulTypedName",
																						"src": "2462:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2520:10:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2520:10:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2529:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2524:1:15",
																						"nodeType": "YulTypedName",
																						"src": "2524:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2600:165:15",
																					"nodeType": "YulBlock",
																					"src": "2600:165:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2625:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2625:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2643:3:15",
																														"nodeType": "YulIdentifier",
																														"src": "2643:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2648:9:15",
																														"nodeType": "YulIdentifier",
																														"src": "2648:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2639:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2639:3:15"
																												},
																												"nativeSrc": "2639:19:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2639:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2633:5:15",
																											"nodeType": "YulIdentifier",
																											"src": "2633:5:15"
																										},
																										"nativeSrc": "2633:26:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2633:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2618:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2618:6:15"
																								},
																								"nativeSrc": "2618:42:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2618:42:15"
																							},
																							"nativeSrc": "2618:42:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2618:42:15"
																						},
																						{
																							"nativeSrc": "2677:24:15",
																							"nodeType": "YulAssignment",
																							"src": "2677:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2691:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2691:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2699:1:15",
																										"nodeType": "YulLiteral",
																										"src": "2699:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2687:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2687:3:15"
																								},
																								"nativeSrc": "2687:14:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2687:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2677:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2677:6:15"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2718:33:15",
																							"nodeType": "YulAssignment",
																							"src": "2718:33:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2735:9:15",
																										"nodeType": "YulIdentifier",
																										"src": "2735:9:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2746:4:15",
																										"nodeType": "YulLiteral",
																										"src": "2746:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2731:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2731:3:15"
																								},
																								"nativeSrc": "2731:20:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2731:20:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2718:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2718:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2554:1:15",
																							"nodeType": "YulIdentifier",
																							"src": "2554:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2557:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2557:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2551:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2551:2:15"
																					},
																					"nativeSrc": "2551:14:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2551:14:15"
																				},
																				"nativeSrc": "2543:222:15",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2566:21:15",
																					"nodeType": "YulBlock",
																					"src": "2566:21:15",
																					"statements": [
																						{
																							"nativeSrc": "2568:17:15",
																							"nodeType": "YulAssignment",
																							"src": "2568:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2577:1:15",
																										"nodeType": "YulIdentifier",
																										"src": "2577:1:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2580:4:15",
																										"nodeType": "YulLiteral",
																										"src": "2580:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2573:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "2573:3:15"
																								},
																								"nativeSrc": "2573:12:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2573:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2568:1:15",
																									"nodeType": "YulIdentifier",
																									"src": "2568:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2547:3:15",
																					"nodeType": "YulBlock",
																					"src": "2547:3:15",
																					"statements": []
																				},
																				"src": "2543:222:15"
																			},
																			{
																				"body": {
																					"nativeSrc": "2813:166:15",
																					"nodeType": "YulBlock",
																					"src": "2813:166:15",
																					"statements": [
																						{
																							"nativeSrc": "2831:43:15",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2831:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2858:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "2858:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2863:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2863:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2854:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2854:3:15"
																										},
																										"nativeSrc": "2854:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2854:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2848:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "2848:5:15"
																								},
																								"nativeSrc": "2848:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2848:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2835:9:15",
																									"nodeType": "YulTypedName",
																									"src": "2835:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2898:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "2898:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2910:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "2910:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2937:1:15",
																																				"nodeType": "YulLiteral",
																																				"src": "2937:1:15",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2940:6:15",
																																				"nodeType": "YulIdentifier",
																																				"src": "2940:6:15"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2933:3:15",
																																			"nodeType": "YulIdentifier",
																																			"src": "2933:3:15"
																																		},
																																		"nativeSrc": "2933:14:15",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2933:14:15"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2949:3:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2949:3:15",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2929:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2929:3:15"
																																},
																																"nativeSrc": "2929:24:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2929:24:15"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2959:1:15",
																																		"nodeType": "YulLiteral",
																																		"src": "2959:1:15",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2955:3:15",
																																	"nodeType": "YulIdentifier",
																																	"src": "2955:3:15"
																																},
																																"nativeSrc": "2955:6:15",
																																"nodeType": "YulFunctionCall",
																																"src": "2955:6:15"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2925:3:15",
																															"nodeType": "YulIdentifier",
																															"src": "2925:3:15"
																														},
																														"nativeSrc": "2925:37:15",
																														"nodeType": "YulFunctionCall",
																														"src": "2925:37:15"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2921:3:15",
																													"nodeType": "YulIdentifier",
																													"src": "2921:3:15"
																												},
																												"nativeSrc": "2921:42:15",
																												"nodeType": "YulFunctionCall",
																												"src": "2921:42:15"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2906:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "2906:3:15"
																										},
																										"nativeSrc": "2906:58:15",
																										"nodeType": "YulFunctionCall",
																										"src": "2906:58:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2891:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "2891:6:15"
																								},
																								"nativeSrc": "2891:74:15",
																								"nodeType": "YulFunctionCall",
																								"src": "2891:74:15"
																							},
																							"nativeSrc": "2891:74:15",
																							"nodeType": "YulExpressionStatement",
																							"src": "2891:74:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2784:7:15",
																							"nodeType": "YulIdentifier",
																							"src": "2784:7:15"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2793:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "2793:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2781:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "2781:2:15"
																					},
																					"nativeSrc": "2781:19:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2781:19:15"
																				},
																				"nativeSrc": "2778:201:15",
																				"nodeType": "YulIf",
																				"src": "2778:201:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2999:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "2999:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3013:1:15",
																											"nodeType": "YulLiteral",
																											"src": "3013:1:15",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3016:6:15",
																											"nodeType": "YulIdentifier",
																											"src": "3016:6:15"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3009:3:15",
																										"nodeType": "YulIdentifier",
																										"src": "3009:3:15"
																									},
																									"nativeSrc": "3009:14:15",
																									"nodeType": "YulFunctionCall",
																									"src": "3009:14:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3025:1:15",
																									"nodeType": "YulLiteral",
																									"src": "3025:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3005:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "3005:3:15"
																							},
																							"nativeSrc": "3005:22:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3005:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2992:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "2992:6:15"
																					},
																					"nativeSrc": "2992:36:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2992:36:15"
																				},
																				"nativeSrc": "2992:36:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "2992:36:15"
																			}
																		]
																	},
																	"nativeSrc": "2389:649:15",
																	"nodeType": "YulCase",
																	"src": "2389:649:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2394:1:15",
																		"nodeType": "YulLiteral",
																		"src": "2394:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3055:234:15",
																		"nodeType": "YulBlock",
																		"src": "3055:234:15",
																		"statements": [
																			{
																				"nativeSrc": "3069:14:15",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3069:14:15",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3082:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3073:5:15",
																						"nodeType": "YulTypedName",
																						"src": "3073:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3118:67:15",
																					"nodeType": "YulBlock",
																					"src": "3118:67:15",
																					"statements": [
																						{
																							"nativeSrc": "3136:35:15",
																							"nodeType": "YulAssignment",
																							"src": "3136:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3155:3:15",
																												"nodeType": "YulIdentifier",
																												"src": "3155:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3160:9:15",
																												"nodeType": "YulIdentifier",
																												"src": "3160:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3151:3:15",
																											"nodeType": "YulIdentifier",
																											"src": "3151:3:15"
																										},
																										"nativeSrc": "3151:19:15",
																										"nodeType": "YulFunctionCall",
																										"src": "3151:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3145:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3145:5:15"
																								},
																								"nativeSrc": "3145:26:15",
																								"nodeType": "YulFunctionCall",
																								"src": "3145:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3136:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3136:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3099:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3099:6:15"
																				},
																				"nativeSrc": "3096:89:15",
																				"nodeType": "YulIf",
																				"src": "3096:89:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3205:4:15",
																							"nodeType": "YulIdentifier",
																							"src": "3205:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3264:5:15",
																									"nodeType": "YulIdentifier",
																									"src": "3264:5:15"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3271:6:15",
																									"nodeType": "YulIdentifier",
																									"src": "3271:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3211:52:15",
																								"nodeType": "YulIdentifier",
																								"src": "3211:52:15"
																							},
																							"nativeSrc": "3211:67:15",
																							"nodeType": "YulFunctionCall",
																							"src": "3211:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3198:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3198:6:15"
																					},
																					"nativeSrc": "3198:81:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3198:81:15"
																				},
																				"nativeSrc": "3198:81:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "3198:81:15"
																			}
																		]
																	},
																	"nativeSrc": "3047:242:15",
																	"nodeType": "YulCase",
																	"src": "3047:242:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2369:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2369:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2377:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2377:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2366:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "2366:2:15"
																},
																"nativeSrc": "2366:14:15",
																"nodeType": "YulFunctionCall",
																"src": "2366:14:15"
															},
															"nativeSrc": "2359:930:15",
															"nodeType": "YulSwitch",
															"src": "2359:930:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1996:1299:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2077:4:15",
														"nodeType": "YulTypedName",
														"src": "2077:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2083:3:15",
														"nodeType": "YulTypedName",
														"src": "2083:3:15",
														"type": ""
													}
												],
												"src": "1996:1299:15"
											},
											{
												"body": {
													"nativeSrc": "3401:102:15",
													"nodeType": "YulBlock",
													"src": "3401:102:15",
													"statements": [
														{
															"nativeSrc": "3411:26:15",
															"nodeType": "YulAssignment",
															"src": "3411:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3423:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3423:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3419:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3419:3:15"
																},
																"nativeSrc": "3419:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3419:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3411:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3411:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3453:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3453:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3468:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3468:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3484:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3484:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3489:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3489:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3480:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3480:3:15"
																						},
																						"nativeSrc": "3480:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3480:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3493:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3493:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3476:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:15"
																				},
																				"nativeSrc": "3476:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3476:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3464:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3464:3:15"
																		},
																		"nativeSrc": "3464:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3464:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3446:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:15"
																},
																"nativeSrc": "3446:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3446:51:15"
															},
															"nativeSrc": "3446:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3446:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3300:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3370:9:15",
														"nodeType": "YulTypedName",
														"src": "3370:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3381:6:15",
														"nodeType": "YulTypedName",
														"src": "3381:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3392:4:15",
														"nodeType": "YulTypedName",
														"src": "3392:4:15",
														"type": ""
													}
												],
												"src": "3300:203:15"
											},
											{
												"body": {
													"nativeSrc": "3555:185:15",
													"nodeType": "YulBlock",
													"src": "3555:185:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3594:111:15",
																"nodeType": "YulBlock",
																"src": "3594:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3615:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3615:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3622:3:15",
																							"nodeType": "YulLiteral",
																							"src": "3622:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3627:10:15",
																							"nodeType": "YulLiteral",
																							"src": "3627:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3618:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3618:3:15"
																					},
																					"nativeSrc": "3618:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "3618:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3608:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3608:6:15"
																			},
																			"nativeSrc": "3608:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3608:31:15"
																		},
																		"nativeSrc": "3608:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3608:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3659:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3659:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3662:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3662:4:15",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3652:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3652:6:15"
																			},
																			"nativeSrc": "3652:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3652:15:15"
																		},
																		"nativeSrc": "3652:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3652:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3687:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3687:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3690:4:15",
																					"nodeType": "YulLiteral",
																					"src": "3690:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3680:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3680:6:15"
																			},
																			"nativeSrc": "3680:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3680:15:15"
																		},
																		"nativeSrc": "3680:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3680:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3571:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3571:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3582:1:15",
																				"nodeType": "YulLiteral",
																				"src": "3582:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3578:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3578:3:15"
																		},
																		"nativeSrc": "3578:6:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3578:6:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3568:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "3568:2:15"
																},
																"nativeSrc": "3568:17:15",
																"nodeType": "YulFunctionCall",
																"src": "3568:17:15"
															},
															"nativeSrc": "3565:140:15",
															"nodeType": "YulIf",
															"src": "3565:140:15"
														},
														{
															"nativeSrc": "3714:20:15",
															"nodeType": "YulAssignment",
															"src": "3714:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3725:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3725:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3732:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3732:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3721:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3721:3:15"
																},
																"nativeSrc": "3721:13:15",
																"nodeType": "YulFunctionCall",
																"src": "3721:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3714:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3714:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3508:232:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3537:5:15",
														"nodeType": "YulTypedName",
														"src": "3537:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3547:3:15",
														"nodeType": "YulTypedName",
														"src": "3547:3:15",
														"type": ""
													}
												],
												"src": "3508:232:15"
											},
											{
												"body": {
													"nativeSrc": "3840:92:15",
													"nodeType": "YulBlock",
													"src": "3840:92:15",
													"statements": [
														{
															"nativeSrc": "3850:26:15",
															"nodeType": "YulAssignment",
															"src": "3850:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3862:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3862:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3873:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3873:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3858:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:15"
																},
																"nativeSrc": "3858:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3858:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3850:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3850:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3892:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3892:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "3917:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3910:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "3910:6:15"
																				},
																				"nativeSrc": "3910:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3910:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3903:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3903:6:15"
																		},
																		"nativeSrc": "3903:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3885:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3885:6:15"
																},
																"nativeSrc": "3885:41:15",
																"nodeType": "YulFunctionCall",
																"src": "3885:41:15"
															},
															"nativeSrc": "3885:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "3885:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3745:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3809:9:15",
														"nodeType": "YulTypedName",
														"src": "3809:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3820:6:15",
														"nodeType": "YulTypedName",
														"src": "3820:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3831:4:15",
														"nodeType": "YulTypedName",
														"src": "3831:4:15",
														"type": ""
													}
												],
												"src": "3745:187:15"
											},
											{
												"body": {
													"nativeSrc": "4065:144:15",
													"nodeType": "YulBlock",
													"src": "4065:144:15",
													"statements": [
														{
															"nativeSrc": "4075:26:15",
															"nodeType": "YulAssignment",
															"src": "4075:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4087:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4087:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:2:15",
																		"nodeType": "YulLiteral",
																		"src": "4098:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4083:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4083:3:15"
																},
																"nativeSrc": "4083:18:15",
																"nodeType": "YulFunctionCall",
																"src": "4083:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4075:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4075:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4117:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4117:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4132:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4148:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4148:2:15",
																								"type": "",
																								"value": "96"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4152:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4152:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4144:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4144:3:15"
																						},
																						"nativeSrc": "4144:10:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4144:10:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4156:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4156:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4140:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4140:3:15"
																				},
																				"nativeSrc": "4140:18:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4140:18:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4128:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4128:3:15"
																		},
																		"nativeSrc": "4128:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4128:31:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4110:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:15"
																},
																"nativeSrc": "4110:50:15",
																"nodeType": "YulFunctionCall",
																"src": "4110:50:15"
															},
															"nativeSrc": "4110:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "4110:50:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4180:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4191:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4191:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:15"
																		},
																		"nativeSrc": "4176:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4196:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4196:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4169:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4169:6:15"
																},
																"nativeSrc": "4169:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4169:34:15"
															},
															"nativeSrc": "4169:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4169:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3937:272:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4026:9:15",
														"nodeType": "YulTypedName",
														"src": "4026:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4037:6:15",
														"nodeType": "YulTypedName",
														"src": "4037:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4045:6:15",
														"nodeType": "YulTypedName",
														"src": "4045:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4056:4:15",
														"nodeType": "YulTypedName",
														"src": "4056:4:15",
														"type": ""
													}
												],
												"src": "3937:272:15"
											},
											{
												"body": {
													"nativeSrc": "4417:483:15",
													"nodeType": "YulBlock",
													"src": "4417:483:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4434:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4434:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4449:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4449:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4465:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4465:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4470:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4470:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4461:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4461:3:15"
																						},
																						"nativeSrc": "4461:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4461:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4474:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4474:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4457:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4457:3:15"
																				},
																				"nativeSrc": "4457:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4457:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4445:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4445:3:15"
																		},
																		"nativeSrc": "4445:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4445:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4427:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:15"
																},
																"nativeSrc": "4427:51:15",
																"nodeType": "YulFunctionCall",
																"src": "4427:51:15"
															},
															"nativeSrc": "4427:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "4427:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4498:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4509:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4494:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:15"
																		},
																		"nativeSrc": "4494:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4518:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4518:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4534:3:15",
																								"nodeType": "YulLiteral",
																								"src": "4534:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4539:1:15",
																								"nodeType": "YulLiteral",
																								"src": "4539:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4530:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4530:3:15"
																						},
																						"nativeSrc": "4530:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4530:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4543:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4543:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4526:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4526:3:15"
																				},
																				"nativeSrc": "4526:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4526:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4514:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4514:3:15"
																		},
																		"nativeSrc": "4514:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4514:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4487:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:15"
																},
																"nativeSrc": "4487:60:15",
																"nodeType": "YulFunctionCall",
																"src": "4487:60:15"
															},
															"nativeSrc": "4487:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "4487:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4567:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4567:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4578:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4578:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4563:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4563:3:15"
																		},
																		"nativeSrc": "4563:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4563:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4583:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4583:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4556:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:15"
																},
																"nativeSrc": "4556:34:15",
																"nodeType": "YulFunctionCall",
																"src": "4556:34:15"
															},
															"nativeSrc": "4556:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "4556:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4610:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4610:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4621:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4621:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4606:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4606:3:15"
																		},
																		"nativeSrc": "4606:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4606:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4626:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4626:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4599:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:15"
																},
																"nativeSrc": "4599:31:15",
																"nodeType": "YulFunctionCall",
																"src": "4599:31:15"
															},
															"nativeSrc": "4599:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "4599:31:15"
														},
														{
															"nativeSrc": "4639:27:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4639:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4659:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4659:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4653:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4653:5:15"
																},
																"nativeSrc": "4653:13:15",
																"nodeType": "YulFunctionCall",
																"src": "4653:13:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4643:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4643:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4686:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4686:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4697:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4697:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4682:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:15"
																		},
																		"nativeSrc": "4682:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:19:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4703:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4703:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4675:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:15"
																},
																"nativeSrc": "4675:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4675:35:15"
															},
															"nativeSrc": "4675:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "4675:35:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4729:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4729:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4740:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4740:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4725:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:15"
																		},
																		"nativeSrc": "4725:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "4750:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4750:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4758:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4758:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:15"
																		},
																		"nativeSrc": "4746:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:15:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4763:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4763:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4719:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4719:5:15"
																},
																"nativeSrc": "4719:51:15",
																"nodeType": "YulFunctionCall",
																"src": "4719:51:15"
															},
															"nativeSrc": "4719:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "4719:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4794:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "4794:9:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4805:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "4805:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4790:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4790:3:15"
																				},
																				"nativeSrc": "4790:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4790:22:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4814:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4814:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4786:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:15"
																		},
																		"nativeSrc": "4786:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4786:32:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4820:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4820:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4779:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4779:6:15"
																},
																"nativeSrc": "4779:43:15",
																"nodeType": "YulFunctionCall",
																"src": "4779:43:15"
															},
															"nativeSrc": "4779:43:15",
															"nodeType": "YulExpressionStatement",
															"src": "4779:43:15"
														},
														{
															"nativeSrc": "4831:63:15",
															"nodeType": "YulAssignment",
															"src": "4831:63:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4847:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4847:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4866:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4866:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4874:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4874:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4862:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4862:3:15"
																						},
																						"nativeSrc": "4862:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4862:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4883:2:15",
																								"nodeType": "YulLiteral",
																								"src": "4883:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4879:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4879:3:15"
																						},
																						"nativeSrc": "4879:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4879:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4858:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4858:3:15"
																				},
																				"nativeSrc": "4858:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4858:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4843:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4843:3:15"
																		},
																		"nativeSrc": "4843:45:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:45:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4890:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4890:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4839:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:15"
																},
																"nativeSrc": "4839:55:15",
																"nodeType": "YulFunctionCall",
																"src": "4839:55:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4831:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "4214:686:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4362:9:15",
														"nodeType": "YulTypedName",
														"src": "4362:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4373:6:15",
														"nodeType": "YulTypedName",
														"src": "4373:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4381:6:15",
														"nodeType": "YulTypedName",
														"src": "4381:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4389:6:15",
														"nodeType": "YulTypedName",
														"src": "4389:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4397:6:15",
														"nodeType": "YulTypedName",
														"src": "4397:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4408:4:15",
														"nodeType": "YulTypedName",
														"src": "4408:4:15",
														"type": ""
													}
												],
												"src": "4214:686:15"
											},
											{
												"body": {
													"nativeSrc": "4985:210:15",
													"nodeType": "YulBlock",
													"src": "4985:210:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5031:16:15",
																"nodeType": "YulBlock",
																"src": "5031:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5040:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5040:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5043:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5043:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5033:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5033:6:15"
																			},
																			"nativeSrc": "5033:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5033:12:15"
																		},
																		"nativeSrc": "5033:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5033:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5006:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5006:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5015:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5015:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5002:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5002:3:15"
																		},
																		"nativeSrc": "5002:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5002:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5027:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5027:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4998:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4998:3:15"
																},
																"nativeSrc": "4998:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4998:32:15"
															},
															"nativeSrc": "4995:52:15",
															"nodeType": "YulIf",
															"src": "4995:52:15"
														},
														{
															"nativeSrc": "5056:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5056:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5075:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5075:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5069:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5069:5:15"
																},
																"nativeSrc": "5069:16:15",
																"nodeType": "YulFunctionCall",
																"src": "5069:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5060:5:15",
																	"nodeType": "YulTypedName",
																	"src": "5060:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5149:16:15",
																"nodeType": "YulBlock",
																"src": "5149:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5158:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5158:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5161:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5161:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5151:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5151:6:15"
																			},
																			"nativeSrc": "5151:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5151:12:15"
																		},
																		"nativeSrc": "5151:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5151:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5107:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5107:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5118:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "5118:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5129:3:15",
																								"nodeType": "YulLiteral",
																								"src": "5129:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5134:10:15",
																								"nodeType": "YulLiteral",
																								"src": "5134:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5125:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5125:3:15"
																						},
																						"nativeSrc": "5125:20:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5125:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5114:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5114:3:15"
																				},
																				"nativeSrc": "5114:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5114:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5104:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5104:2:15"
																		},
																		"nativeSrc": "5104:43:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5097:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5097:6:15"
																},
																"nativeSrc": "5097:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5097:51:15"
															},
															"nativeSrc": "5094:71:15",
															"nodeType": "YulIf",
															"src": "5094:71:15"
														},
														{
															"nativeSrc": "5174:15:15",
															"nodeType": "YulAssignment",
															"src": "5174:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "5184:5:15",
																"nodeType": "YulIdentifier",
																"src": "5184:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5174:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "4905:290:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4951:9:15",
														"nodeType": "YulTypedName",
														"src": "4951:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4962:7:15",
														"nodeType": "YulTypedName",
														"src": "4962:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4974:6:15",
														"nodeType": "YulTypedName",
														"src": "4974:6:15",
														"type": ""
													}
												],
												"src": "4905:290:15"
											},
											{
												"body": {
													"nativeSrc": "5301:76:15",
													"nodeType": "YulBlock",
													"src": "5301:76:15",
													"statements": [
														{
															"nativeSrc": "5311:26:15",
															"nodeType": "YulAssignment",
															"src": "5311:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5323:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5323:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5334:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5334:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5319:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5319:3:15"
																},
																"nativeSrc": "5319:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5319:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5311:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5311:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5353:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5353:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5364:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5364:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5346:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:15"
																},
																"nativeSrc": "5346:25:15",
																"nodeType": "YulFunctionCall",
																"src": "5346:25:15"
															},
															"nativeSrc": "5346:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "5346:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5200:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5270:9:15",
														"nodeType": "YulTypedName",
														"src": "5270:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5281:6:15",
														"nodeType": "YulTypedName",
														"src": "5281:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5292:4:15",
														"nodeType": "YulTypedName",
														"src": "5292:4:15",
														"type": ""
													}
												],
												"src": "5200:177:15"
											},
											{
												"body": {
													"nativeSrc": "5511:145:15",
													"nodeType": "YulBlock",
													"src": "5511:145:15",
													"statements": [
														{
															"nativeSrc": "5521:26:15",
															"nodeType": "YulAssignment",
															"src": "5521:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5533:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5533:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5544:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5529:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:15"
																},
																"nativeSrc": "5529:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5529:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5521:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5521:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5563:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5563:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5578:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5578:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5594:3:15",
																								"nodeType": "YulLiteral",
																								"src": "5594:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5599:1:15",
																								"nodeType": "YulLiteral",
																								"src": "5599:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5590:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5590:3:15"
																						},
																						"nativeSrc": "5590:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5590:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5603:1:15",
																						"nodeType": "YulLiteral",
																						"src": "5603:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5586:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5586:3:15"
																				},
																				"nativeSrc": "5586:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5586:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5574:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:15"
																		},
																		"nativeSrc": "5574:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5556:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5556:6:15"
																},
																"nativeSrc": "5556:51:15",
																"nodeType": "YulFunctionCall",
																"src": "5556:51:15"
															},
															"nativeSrc": "5556:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "5556:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5627:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5638:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5623:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:15"
																		},
																		"nativeSrc": "5623:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5643:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5643:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5616:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:15"
																},
																"nativeSrc": "5616:34:15",
																"nodeType": "YulFunctionCall",
																"src": "5616:34:15"
															},
															"nativeSrc": "5616:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "5616:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5382:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5472:9:15",
														"nodeType": "YulTypedName",
														"src": "5472:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5483:6:15",
														"nodeType": "YulTypedName",
														"src": "5483:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5491:6:15",
														"nodeType": "YulTypedName",
														"src": "5491:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5502:4:15",
														"nodeType": "YulTypedName",
														"src": "5502:4:15",
														"type": ""
													}
												],
												"src": "5382:274:15"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint96t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(96, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        let length := mload(value3)\n        mstore(add(headStart, 128), length)\n        mcopy(add(headStart, 160), add(value3, 32), length)\n        mstore(add(add(headStart, length), 160), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526001600955348015610014575f80fd5b50604051611d07380380611d078339810160408190526100339161081c565b336040518060400160405280600d81526020016c546f74616c2045636c6970736560981b8152506040518060400160405280600381526020016254454160e81b815250815f908161008491906108f9565b50600161009182826108f9565b5050506001600160a01b0381166100c257604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100cb816100f5565b506100d68284610146565b6100e182600a61015c565b6100ed8282600161019c565b505050610a5f565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61014e61023a565b6101588282610269565b5050565b61016461023a565b5f5b8181101561019757600980545f918261017e836109b3565b90915550905061018e848261030b565b50600101610166565b505050565b6001600160a01b0382166101ce57604051630b61174360e31b81526001600160a01b03831660048201526024016100b9565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6006546001600160a01b031633146102675760405163118cdaa760e01b81523360048201526024016100b9565b565b6127106001600160601b0382168110156102a857604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016100b9565b6001600160a01b0383166102d157604051635b6cc80560e11b81525f60048201526024016100b9565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b610158828260405180602001604052805f81525061032a60201b60201c565b6103348383610340565b6101975f8484846103a1565b6001600160a01b03821661036957604051633250574960e11b81525f60048201526024016100b9565b5f6103758383836104c8565b90506001600160a01b03811615610197576040516339e3563760e11b81525f60048201526024016100b9565b6001600160a01b0383163b156104c257604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906103e39033908890879087906004016109d7565b6020604051808303815f875af192505050801561041d575060408051601f3d908101601f1916820190925261041a91810190610a31565b60015b610484573d80801561044a576040519150601f19603f3d011682016040523d82523d5f602084013e61044f565b606091505b5080515f0361047c57604051633250574960e11b81526001600160a01b03851660048201526024016100b9565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146104c057604051633250574960e11b81526001600160a01b03851660048201526024016100b9565b505b50505050565b5f828152600260205260408120546001600160a01b03908116908316156104f4576104f48184866105ba565b6001600160a01b0381161561052e5761050f5f85818061061e565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b0385161561055c576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6105c5838383610740565b610197576001600160a01b0383166105f357604051637e27328960e01b8152600481018290526024016100b9565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016100b9565b808061063257506001600160a01b03821615155b15610711575f610641846107c3565b90506001600160a01b0383161580159061066d5750826001600160a01b0316816001600160a01b031614155b801561069e57506001600160a01b038082165f9081526005602090815260408083209387168352929052205460ff16155b156106c75760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016100b9565b811561070f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f6001600160a01b038316158015906107bb5750826001600160a01b0316846001600160a01b0316148061079857506001600160a01b038085165f9081526005602090815260408083209387168352929052205460ff165b806107bb57505f828152600460205260409020546001600160a01b038481169116145b949350505050565b5f818152600260205260408120546001600160a01b0316806107fb57604051637e27328960e01b8152600481018490526024016100b9565b92915050565b80516001600160a01b0381168114610817575f80fd5b919050565b5f805f6060848603121561082e575f80fd5b83516001600160601b0381168114610844575f80fd5b925061085260208501610801565b915061086060408501610801565b90509250925092565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061089157607f821691505b6020821081036108af57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561019757805f5260205f20601f840160051c810160208510156108da5750805b601f840160051c820191505b818110156104c0575f81556001016108e6565b81516001600160401b0381111561091257610912610869565b61092681610920845461087d565b846108b5565b6020601f821160018114610958575f83156109415750848201515b5f19600385901b1c1916600184901b1784556104c0565b5f84815260208120601f198516915b828110156109875787850151825560209485019460019092019101610967565b50848210156109a457868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b5f600182016109d057634e487b7160e01b5f52601160045260245ffd5b5060010190565b60018060a01b038516815260018060a01b0384166020820152826040820152608060608201525f8251806080840152806020850160a085015e5f60a0828501015260a0601f19601f83011684010191505095945050505050565b5f60208284031215610a41575f80fd5b81516001600160e01b031981168114610a58575f80fd5b9392505050565b61129b80610a6c5f395ff3fe608060405234801561000f575f80fd5b506004361061010d575f3560e01c80636352211e116100a9578063a22cb4651161006e578063a22cb4651461024b578063b88d4fde1461025e578063c87b56dd14610271578063e985e9c514610284578063f2fde38b14610297575f80fd5b80636352211e1461020457806370a0823114610217578063715018a61461022a5780638da5cb5b1461023257806395d89b4114610243575f80fd5b806301ffc9a71461011157806302fa7c471461013957806306fdde031461014e578063081812fc14610163578063095ea7b31461018357806318160ddd1461019657806323b872dd146101ac5780632a55205a146101bf57806342842e0e146101f1575b5f80fd5b61012461011f366004610e35565b6102aa565b60405190151581526020015b60405180910390f35b61014c610147366004610e6b565b6102ba565b005b6101566102d0565b6040516101309190610ed9565b610176610171366004610eeb565b61035f565b6040516101309190610f02565b61014c610191366004610f16565b610386565b61019e610391565b604051908152602001610130565b61014c6101ba366004610f3e565b6103a6565b6101d26101cd366004610f78565b610438565b604080516001600160a01b039093168352602083019190915201610130565b61014c6101ff366004610f3e565b6104e2565b610176610212366004610eeb565b610501565b61019e610225366004610f98565b61050b565b61014c610550565b6006546001600160a01b0316610176565b610156610563565b61014c610259366004610fb1565b610572565b61014c61026c366004610ff3565b61057d565b61015661027f366004610eeb565b610594565b6101246102923660046110d0565b6105f9565b61014c6102a5366004610f98565b610626565b5f6102b482610663565b92915050565b6102c2610687565b6102cc82826106b4565b5050565b60605f80546102de90611101565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611101565b80156103555780601f1061032c57610100808354040283529160200191610355565b820191905f5260205f20905b81548152906001019060200180831161033857829003601f168201915b5050505050905090565b5f61036982610756565b505f828152600460205260409020546001600160a01b03166102b4565b6102cc82823361078e565b5f60016009546103a1919061114d565b905090565b6001600160a01b0382166103d8575f604051633250574960e11b81526004016103cf9190610f02565b60405180910390fd5b5f6103e483833361079b565b9050836001600160a01b0316816001600160a01b031614610432576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103cf565b50505050565b5f8281526008602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916104ac5750604080518082019091526007546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906104ca906001600160601b031687611160565b6104d49190611177565b915196919550909350505050565b6104fc83838360405180602001604052805f81525061057d565b505050565b5f6102b482610756565b5f6001600160a01b038216610535575f6040516322718ad960e21b81526004016103cf9190610f02565b506001600160a01b03165f9081526003602052604090205490565b610558610687565b6105615f61088d565b565b6060600180546102de90611101565b6102cc3383836108de565b6105888484846103a6565b61043284848484610973565b606061059f82610756565b505f6105a9610a87565b90505f8151116105c75760405180602001604052805f8152506105f2565b806105d184610aa7565b6040516020016105e29291906111ad565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b61062e610687565b6001600160a01b038116610657575f604051631e4fbdf760e01b81526004016103cf9190610f02565b6106608161088d565b50565b5f6001600160e01b0319821663152a902d60e11b14806102b457506102b482610b37565b6006546001600160a01b03163314610561573360405163118cdaa760e01b81526004016103cf9190610f02565b6127106001600160601b0382168110156106f357604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016103cf565b6001600160a01b03831661071c575f604051635b6cc80560e11b81526004016103cf9190610f02565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b5f818152600260205260408120546001600160a01b0316806102b457604051637e27328960e01b8152600481018490526024016103cf565b6104fc8383836001610b86565b5f828152600260205260408120546001600160a01b03908116908316156107c7576107c7818486610c81565b6001600160a01b03811615610801576107e25f855f80610b86565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b0385161561082f576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166109075781604051630b61174360e31b81526004016103cf9190610f02565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561043257604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906109b59033908890879087906004016111c1565b6020604051808303815f875af19250505080156109ef575060408051601f3d908101601f191682019092526109ec918101906111fd565b60015b610a4d573d808015610a1c576040519150601f19603f3d011682016040523d82523d5f602084013e610a21565b606091505b5080515f03610a455783604051633250574960e11b81526004016103cf9190610f02565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610a805783604051633250574960e11b81526004016103cf9190610f02565b5050505050565b60606040518060800160405280604d8152602001611219604d9139905090565b60605f610ab383610ce5565b60010190505f8167ffffffffffffffff811115610ad257610ad2610fdf565b6040519080825280601f01601f191660200182016040528015610afc576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610b0657509392505050565b5f6001600160e01b031982166380ac58cd60e01b1480610b6757506001600160e01b03198216635b5e139f60e01b145b806102b457506301ffc9a760e01b6001600160e01b03198316146102b4565b8080610b9a57506001600160a01b03821615155b15610c52575f610ba984610756565b90506001600160a01b03831615801590610bd55750826001600160a01b0316816001600160a01b031614155b8015610be85750610be681846105f9565b155b15610c08578260405163a9fbf51f60e01b81526004016103cf9190610f02565b8115610c505783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610c8c838383610dbc565b6104fc576001600160a01b038316610cba57604051637e27328960e01b8152600481018290526024016103cf565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103cf565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610d235772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610d4f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d6d57662386f26fc10000830492506010015b6305f5e1008310610d85576305f5e100830492506008015b6127108310610d9957612710830492506004015b60648310610dab576064830492506002015b600a83106102b45760010192915050565b5f6001600160a01b03831615801590610e185750826001600160a01b0316846001600160a01b03161480610df55750610df584846105f9565b80610e1857505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b031981168114610660575f80fd5b5f60208284031215610e45575f80fd5b81356105f281610e20565b80356001600160a01b0381168114610e66575f80fd5b919050565b5f8060408385031215610e7c575f80fd5b610e8583610e50565b915060208301356001600160601b0381168114610ea0575f80fd5b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105f26020830184610eab565b5f60208284031215610efb575f80fd5b5035919050565b6001600160a01b0391909116815260200190565b5f8060408385031215610f27575f80fd5b610f3083610e50565b946020939093013593505050565b5f805f60608486031215610f50575f80fd5b610f5984610e50565b9250610f6760208501610e50565b929592945050506040919091013590565b5f8060408385031215610f89575f80fd5b50508035926020909101359150565b5f60208284031215610fa8575f80fd5b6105f282610e50565b5f8060408385031215610fc2575f80fd5b610fcb83610e50565b915060208301358015158114610ea0575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215611006575f80fd5b61100f85610e50565b935061101d60208601610e50565b925060408501359150606085013567ffffffffffffffff81111561103f575f80fd5b8501601f8101871361104f575f80fd5b803567ffffffffffffffff81111561106957611069610fdf565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561109857611098610fdf565b6040528181528282016020018910156110af575f80fd5b816020840160208301375f6020838301015280935050505092959194509250565b5f80604083850312156110e1575f80fd5b6110ea83610e50565b91506110f860208401610e50565b90509250929050565b600181811c9082168061111557607f821691505b60208210810361113357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102b4576102b4611139565b80820281158282048414176102b4576102b4611139565b5f8261119157634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b5f610e186111bb8386611196565b84611196565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906111f390830184610eab565b9695505050505050565b5f6020828403121561120d575f80fd5b81516105f281610e2056fe68747470733a2f2f697066732e66696c65626173652e696f2f697066732f516d586341317245656f5576634d6e4c5165464a76334c7655456558696a66426b714a6745354c434761394d41502fa26469706673582212207565ff58153e7c7baee26d2076128fe672fa88556d2419c5e79891dc7efa8a4064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D07 CODESIZE SUB DUP1 PUSH2 0x1D07 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x33 SWAP2 PUSH2 0x81C JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x546F74616C2045636C69707365 PUSH1 0x98 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x544541 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x8F9 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x91 DUP3 DUP3 PUSH2 0x8F9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB DUP2 PUSH2 0xF5 JUMP JUMPDEST POP PUSH2 0xD6 DUP3 DUP5 PUSH2 0x146 JUMP JUMPDEST PUSH2 0xE1 DUP3 PUSH1 0xA PUSH2 0x15C JUMP JUMPDEST PUSH2 0xED DUP3 DUP3 PUSH1 0x1 PUSH2 0x19C JUMP JUMPDEST POP POP POP PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14E PUSH2 0x23A JUMP JUMPDEST PUSH2 0x158 DUP3 DUP3 PUSH2 0x269 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x164 PUSH2 0x23A JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x197 JUMPI PUSH1 0x9 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x17E DUP4 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP SWAP1 POP PUSH2 0x18E DUP5 DUP3 PUSH2 0x30B JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x166 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH2 0x158 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x32A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x334 DUP4 DUP4 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x197 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x369 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH0 PUSH2 0x375 DUP4 DUP4 DUP4 PUSH2 0x4C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x197 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x3E3 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x41D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x41A SWAP2 DUP2 ADD SWAP1 PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x484 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x44F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x4F4 JUMPI PUSH2 0x4F4 DUP2 DUP5 DUP7 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x52E JUMPI PUSH2 0x50F PUSH0 DUP6 DUP2 DUP1 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x55C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5C5 DUP4 DUP4 DUP4 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x197 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x632 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x711 JUMPI PUSH0 PUSH2 0x641 DUP5 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x66D JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x69E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x70F JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7BB JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x798 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x7BB JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x817 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x82E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x844 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH2 0x852 PUSH1 0x20 DUP6 ADD PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x860 PUSH1 0x40 DUP6 ADD PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x891 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x197 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8DA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x8E6 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x912 JUMPI PUSH2 0x912 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x926 DUP2 PUSH2 0x920 DUP5 SLOAD PUSH2 0x87D JUMP JUMPDEST DUP5 PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x958 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x941 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x4C0 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x987 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x967 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x9A4 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x9D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0xA0 DUP6 ADD MCOPY PUSH0 PUSH1 0xA0 DUP3 DUP6 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA58 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x129B DUP1 PUSH2 0xA6C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x243 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x14C PUSH2 0x550 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x176 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x563 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH0 PUSH2 0x2B4 DUP3 PUSH2 0x663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2CC DUP3 DUP3 PUSH2 0x6B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x1101 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30A SWAP1 PUSH2 0x1101 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x355 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x338 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x369 DUP3 PUSH2 0x756 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x2CC DUP3 DUP3 CALLER PUSH2 0x78E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E4 DUP4 DUP4 CALLER PUSH2 0x79B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x4AC JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x57D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4 DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0x88D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x2CC CALLER DUP4 DUP4 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x588 DUP5 DUP5 DUP5 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x432 DUP5 DUP5 DUP5 DUP5 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x59F DUP3 PUSH2 0x756 JUMP JUMPDEST POP PUSH0 PUSH2 0x5A9 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5F2 JUMP JUMPDEST DUP1 PUSH2 0x5D1 DUP5 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E2 SWAP3 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x62E PUSH2 0x687 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x657 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x88D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2B4 JUMPI POP PUSH2 0x2B4 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x71C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x7C7 JUMPI PUSH2 0x7C7 DUP2 DUP5 DUP7 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x801 JUMPI PUSH2 0x7E2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x82F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x907 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9B5 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9EF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9EC SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA4D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA45 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA80 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1219 PUSH1 0x4D SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xAB3 DUP4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD2 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB06 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xB67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2B4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2B4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xC52 JUMPI PUSH0 PUSH2 0xBA9 DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBD5 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH2 0xBE6 DUP2 DUP5 PUSH2 0x5F9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC08 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC50 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC8C DUP4 DUP4 DUP4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xD23 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xD4F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD6D JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD85 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD99 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xDAB JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2B4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE18 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDF5 JUMPI POP PUSH2 0xDF5 DUP5 DUP5 PUSH2 0x5F9 JUMP JUMPDEST DUP1 PUSH2 0xE18 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x660 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5F2 DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE66 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE85 DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5F2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF59 DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP PUSH2 0xF67 PUSH1 0x20 DUP6 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F2 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x100F DUP6 PUSH2 0xE50 JUMP JUMPDEST SWAP4 POP PUSH2 0x101D PUSH1 0x20 DUP7 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1098 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x10AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10EA DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F8 PUSH1 0x20 DUP5 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1115 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1133 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH2 0x2B4 PUSH2 0x1139 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2B4 JUMPI PUSH2 0x2B4 PUSH2 0x1139 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1191 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE18 PUSH2 0x11BB DUP4 DUP7 PUSH2 0x1196 JUMP JUMPDEST DUP5 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x11F3 SWAP1 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5F2 DUP2 PUSH2 0xE20 JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E66696C6562 PUSH2 0x7365 0x2E PUSH10 0x6F2F697066732F516D58 PUSH4 0x41317245 PUSH6 0x6F5576634D6E 0x4C MLOAD PUSH6 0x464A76334C76 SSTORE GASLIMIT PUSH6 0x58696A66426B PUSH18 0x4A6745354C434761394D41502FA264697066 PUSH20 0x582212207565FF58153E7C7BAEE26D2076128FE6 PUSH19 0xFA88556D2419C5E79891DC7EFA8A4064736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "236:2290:14:-:0;;;327:1;296:32;;680:592;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:10;1381:113:3;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:3;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3446:51:15;3419:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;881:59:14::2;896:23:::0;921:18;881:14:::2;:59::i;:::-;975:46;993:23:::0;1018:2:::2;975:17;:46::i;:::-;1066:124;1099:23:::0;1137;1175:4:::2;1066:18;:124::i;:::-;680:592:::0;;;236:2290;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2134:178:14:-;1531:13:0;:11;:13::i;:::-;2255:49:14::1;2274:9:::0;2285:18;2255::::1;:49::i;:::-;2134:178:::0;;:::o;1636:259::-;1531:13:0;:11;:13::i;:::-;1754:9:14::1;1749:139;1773:11;1769:1;:15;1749:139;;;1824:12;:14:::0;;1806:15:::1;::::0;;1824:14:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;1806:32:14;-1:-1:-1;1853:23:14::1;1863:3:::0;1806:32;1853:9:::1;:23::i;:::-;-1:-1:-1::0;1786:3:14::1;;1749:139;;;;1636:259:::0;;:::o;15591:312:3:-;-1:-1:-1;;;;;15698:22:3;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:3;;-1:-1:-1;;;;;3464:32:15;;15743:31:3;;;3446:51:15;3419:18;;15743:31:3;3300:203:15;15694:91:3;-1:-1:-1;;;;;15794:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:3;;;;;;;;;;15855:41;;3885::15;;;15855::3;;3858:18:15;15855:41:3;;;;;;;15591:312;;;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;3446:51:15;3419:18;;1901:40:0;3300:203:15;1851:101:0;1796:162::o;3429:507:7:-;3156:5;-1:-1:-1;;;;;3576:26:7;;;-1:-1:-1;3572:173:7;;;3679:55;;-1:-1:-1;;;3679:55:7;;-1:-1:-1;;;;;4128:31:15;;3679:55:7;;;4110:50:15;4176:18;;;4169:34;;;4083:18;;3679:55:7;3937:272:15;3572:173:7;-1:-1:-1;;;;;3758:22:7;;3754:108;;3803:48;;-1:-1:-1;;;3803:48:7;;3848:1;3803:48;;;3446:51:15;3419:18;;3803:48:7;3300:203:15;3754:108:7;-1:-1:-1;3894:35:7;;;;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;;;;;-1:-1:-1;;;3872:57:7;;;;:19;:57;3429:507::o;10633:100:3:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;;;:26;;:::i;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;9955:327::-;-1:-1:-1;;;;;10022:16:3;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:3;;10091:1;10061:33;;;3446:51:15;3419:18;;10061:33:3;3300:203:15;10018:87:3;10114:21;10138:32;10146:2;10150:7;10114:21;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:3;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:3;;10262:1;10234:31;;;3446:51:15;3419:18;;10234:31:3;3300:203:15;16918:782:3;-1:-1:-1;;;;;17034:14:3;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:3;;-1:-1:-1;;;;;17072:36:3;;;;;:71;;735:10:8;;17123:4:3;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:3;;;;;;;;-1:-1:-1;;17072:71:3;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:3;;-1:-1:-1;;;;;3464:32:15;;17430:25:3;;;3446:51:15;3419:18;;17430:25:3;3300:203:15;17377:293:3;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:3;;-1:-1:-1;;;17190:51:3;17186:130;;17272:25;;-1:-1:-1;;;17272:25:3;;-1:-1:-1;;;;;3464:32:15;;17272:25:3;;;3446:51:15;3419:18;;17272:25:3;3300:203:15;17186:130:3;17144:186;17068:616;16918:782;;;;:::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:3;;;9157:256;;9277:48;9294:1;9298:7;9294:1;;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:3;;;9157:256;-1:-1:-1;;;;;9427:16:3;;;9423:107;;-1:-1:-1;;;;;9487:13:3;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:3;-1:-1:-1;;;;;9540:21:3;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:3:o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:3;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:3;;;;;5346:25:15;;;5319:18;;7298:31:3;5200:177:15;7248:186:3;7375:44;;-1:-1:-1;;;7375:44:3;;-1:-1:-1;;;;;5574:32:15;;7375:44:3;;;5556:51:15;5623:18;;;5616:34;;;5529:18;;7375:44:3;5382:274:15;14720:662:3;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:3;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:3;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:3;:5;-1:-1:-1;;;;;15115:13:3;;;15093:35;:69;;;;-1:-1:-1;;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:3;;-1:-1:-1;;;;;3464:32:15;;15189:27:3;;;3446:51:15;3419:18;;15189:27:3;3300:203:15;15089:142:3;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:3;15292:5;-1:-1:-1;;;;;15283:28:3;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:3;-1:-1:-1;;;;;15346:29:3;;;;;;;;;;14720:662::o;6376:272::-;6479:4;-1:-1:-1;;;;;6514:21:3;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:3;:5;-1:-1:-1;;;;;6552:16:3;;:52;;;-1:-1:-1;;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;6572:32;6552:88;;;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6608:32:3;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:3:o;16138:241::-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:3;;;;;5346:25:15;;;5319:18;;16309:31:3;5200:177:15;16263:88:3;16367:5;16138:241;-1:-1:-1;;16138:241:3:o;14:177:15:-;93:13;;-1:-1:-1;;;;;135:31:15;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:458::-;283:6;291;299;352:2;340:9;331:7;327:23;323:32;320:52;;;368:1;365;358:12;320:52;394:16;;-1:-1:-1;;;;;439:30:15;;429:41;;419:69;;484:1;481;474:12;419:69;507:5;-1:-1:-1;531:49:15;576:2;561:18;;531:49;:::i;:::-;521:59;;599:49;644:2;633:9;629:18;599:49;:::i;:::-;589:59;;196:458;;;;;:::o;659:127::-;720:10;715:3;711:20;708:1;701:31;751:4;748:1;741:15;775:4;772:1;765:15;791:380;870:1;866:12;;;;913;;;934:61;;988:4;980:6;976:17;966:27;;934:61;1041:2;1033:6;1030:14;1010:18;1007:38;1004:161;;1087:10;1082:3;1078:20;1075:1;1068:31;1122:4;1119:1;1112:15;1150:4;1147:1;1140:15;1004:161;;791:380;;;:::o;1302:518::-;1404:2;1399:3;1396:11;1393:421;;;1440:5;1437:1;1430:16;1484:4;1481:1;1471:18;1554:2;1542:10;1538:19;1535:1;1531:27;1525:4;1521:38;1590:4;1578:10;1575:20;1572:47;;;-1:-1:-1;1613:4:15;1572:47;1668:2;1663:3;1659:12;1656:1;1652:20;1646:4;1642:31;1632:41;;1723:81;1741:2;1734:5;1731:13;1723:81;;;1800:1;1786:16;;1767:1;1756:13;1723:81;;1996:1299;2116:10;;-1:-1:-1;;;;;2138:30:15;;2135:56;;;2171:18;;:::i;:::-;2200:97;2290:6;2250:38;2282:4;2276:11;2250:38;:::i;:::-;2244:4;2200:97;:::i;:::-;2346:4;2377:2;2366:14;;2394:1;2389:649;;;;3082:1;3099:6;3096:89;;;-1:-1:-1;3151:19:15;;;3145:26;3096:89;-1:-1:-1;;1953:1:15;1949:11;;;1945:24;1941:29;1931:40;1977:1;1973:11;;;1928:57;3198:81;;2359:930;;2389:649;1249:1;1242:14;;;1286:4;1273:18;;-1:-1:-1;;2425:20:15;;;2543:222;2557:7;2554:1;2551:14;2543:222;;;2639:19;;;2633:26;2618:42;;2746:4;2731:20;;;;2699:1;2687:14;;;;2573:12;2543:222;;;2547:3;2793:6;2784:7;2781:19;2778:201;;;2854:19;;;2848:26;-1:-1:-1;;2937:1:15;2933:14;;;2949:3;2929:24;2925:37;2921:42;2906:58;2891:74;;2778:201;-1:-1:-1;;;;3025:1:15;3009:14;;;3005:22;2992:36;;-1:-1:-1;1996:1299:15:o;3508:232::-;3547:3;3568:17;;;3565:140;;3627:10;3622:3;3618:20;3615:1;3608:31;3662:4;3659:1;3652:15;3690:4;3687:1;3680:15;3565:140;-1:-1:-1;3732:1:15;3721:13;;3508:232::o;4214:686::-;4474:1;4470;4465:3;4461:11;4457:19;4449:6;4445:32;4434:9;4427:51;4543:1;4539;4534:3;4530:11;4526:19;4518:6;4514:32;4509:2;4498:9;4494:18;4487:60;4583:6;4578:2;4567:9;4563:18;4556:34;4626:3;4621:2;4610:9;4606:18;4599:31;4408:4;4659:6;4653:13;4703:6;4697:3;4686:9;4682:19;4675:35;4763:6;4758:2;4750:6;4746:15;4740:3;4729:9;4725:19;4719:51;4820:1;4814:3;4805:6;4794:9;4790:22;4786:32;4779:43;4890:3;4883:2;4879:7;4874:2;4866:6;4862:15;4858:29;4847:9;4843:45;4839:55;4831:63;;;4214:686;;;;;;;:::o;4905:290::-;4974:6;5027:2;5015:9;5006:7;5002:23;4998:32;4995:52;;;5043:1;5040;5033:12;4995:52;5069:16;;-1:-1:-1;;;;;;5114:32:15;;5104:43;;5094:71;;5161:1;5158;5151:12;5094:71;5184:5;4905:290;-1:-1:-1;;;4905:290:15:o;5382:274::-;236:2290:14;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1116": {
									"entryPoint": 1934,
									"id": 1116,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1182": {
									"entryPoint": 2950,
									"id": 1182,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3268": {
									"entryPoint": 2695,
									"id": 3268,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_764": {
									"entryPoint": 3201,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1312": {
									"entryPoint": 2419,
									"id": 1312,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1671,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_feeDenominator_1611": {
									"entryPoint": null,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getApproved_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_727": {
									"entryPoint": 3516,
									"id": 727,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1742": {
									"entryPoint": null,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1248": {
									"entryPoint": 1878,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1219": {
									"entryPoint": 2270,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setDefaultRoyalty_1657": {
									"entryPoint": 1716,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2189,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_870": {
									"entryPoint": 1947,
									"id": 870,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_525": {
									"entryPoint": 902,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_433": {
									"entryPoint": 1291,
									"id": 433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_542": {
									"entryPoint": 863,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_575": {
									"entryPoint": 1529,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2925": {
									"entryPoint": 3301,
									"id": 2925,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_455": {
									"entryPoint": 720,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_446": {
									"entryPoint": 1281,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1360,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_1602": {
									"entryPoint": 1080,
									"id": 1602,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@safeTransferFrom_639": {
									"entryPoint": 1250,
									"id": 639,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_665": {
									"entryPoint": 1405,
									"id": 665,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_558": {
									"entryPoint": 1394,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRoyaltyInfo_3325": {
									"entryPoint": 698,
									"id": 3325,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1553": {
									"entryPoint": 1635,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2038": {
									"entryPoint": null,
									"id": 2038,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3341": {
									"entryPoint": 682,
									"id": 3341,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_405": {
									"entryPoint": 2871,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_464": {
									"entryPoint": 1379,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1828": {
									"entryPoint": 2727,
									"id": 1828,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_500": {
									"entryPoint": 1428,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_3310": {
									"entryPoint": 913,
									"id": 3310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_621": {
									"entryPoint": 934,
									"id": 621,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1574,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint96": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4545,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8848:15",
										"nodeType": "YulBlock",
										"src": "0:8848:15",
										"statements": [
											{
												"nativeSrc": "6:3:15",
												"nodeType": "YulBlock",
												"src": "6:3:15",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:15",
													"nodeType": "YulBlock",
													"src": "58:87:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:15",
																"nodeType": "YulBlock",
																"src": "123:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:15",
																					"nodeType": "YulLiteral",
																					"src": "132:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:15",
																					"nodeType": "YulLiteral",
																					"src": "135:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:15"
																			},
																			"nativeSrc": "125:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:15"
																		},
																		"nativeSrc": "125:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:15",
																								"nodeType": "YulLiteral",
																								"src": "103:3:15",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:15",
																								"nodeType": "YulLiteral",
																								"src": "108:10:15",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:15"
																						},
																						"nativeSrc": "99:20:15",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:15"
																				},
																				"nativeSrc": "88:32:15",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:15"
																		},
																		"nativeSrc": "78:43:15",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:15"
																},
																"nativeSrc": "71:51:15",
																"nodeType": "YulFunctionCall",
																"src": "71:51:15"
															},
															"nativeSrc": "68:71:15",
															"nodeType": "YulIf",
															"src": "68:71:15"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:15",
														"nodeType": "YulTypedName",
														"src": "47:5:15",
														"type": ""
													}
												],
												"src": "14:131:15"
											},
											{
												"body": {
													"nativeSrc": "219:176:15",
													"nodeType": "YulBlock",
													"src": "219:176:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:15",
																"nodeType": "YulBlock",
																"src": "265:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:15",
																					"nodeType": "YulLiteral",
																					"src": "274:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:15",
																					"nodeType": "YulLiteral",
																					"src": "277:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:15"
																			},
																			"nativeSrc": "267:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:15"
																		},
																		"nativeSrc": "267:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:15"
																		},
																		"nativeSrc": "236:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:15",
																		"nodeType": "YulLiteral",
																		"src": "261:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:15"
																},
																"nativeSrc": "232:32:15",
																"nodeType": "YulFunctionCall",
																"src": "232:32:15"
															},
															"nativeSrc": "229:52:15",
															"nodeType": "YulIf",
															"src": "229:52:15"
														},
														{
															"nativeSrc": "290:36:15",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:15"
																},
																"nativeSrc": "303:23:15",
																"nodeType": "YulFunctionCall",
																"src": "303:23:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:15",
																	"nodeType": "YulTypedName",
																	"src": "294:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:15"
																},
																"nativeSrc": "335:30:15",
																"nodeType": "YulFunctionCall",
																"src": "335:30:15"
															},
															"nativeSrc": "335:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:15"
														},
														{
															"nativeSrc": "374:15:15",
															"nodeType": "YulAssignment",
															"src": "374:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:15",
																"nodeType": "YulIdentifier",
																"src": "384:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:15",
														"nodeType": "YulTypedName",
														"src": "185:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:15",
														"nodeType": "YulTypedName",
														"src": "196:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:15",
														"nodeType": "YulTypedName",
														"src": "208:6:15",
														"type": ""
													}
												],
												"src": "150:245:15"
											},
											{
												"body": {
													"nativeSrc": "495:92:15",
													"nodeType": "YulBlock",
													"src": "495:92:15",
													"statements": [
														{
															"nativeSrc": "505:26:15",
															"nodeType": "YulAssignment",
															"src": "505:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:15",
																		"nodeType": "YulLiteral",
																		"src": "528:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:15"
																},
																"nativeSrc": "513:18:15",
																"nodeType": "YulFunctionCall",
																"src": "513:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:15"
																				},
																				"nativeSrc": "565:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:15"
																		},
																		"nativeSrc": "558:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:15"
																},
																"nativeSrc": "540:41:15",
																"nodeType": "YulFunctionCall",
																"src": "540:41:15"
															},
															"nativeSrc": "540:41:15",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:15",
														"nodeType": "YulTypedName",
														"src": "464:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:15",
														"nodeType": "YulTypedName",
														"src": "475:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:15",
														"nodeType": "YulTypedName",
														"src": "486:4:15",
														"type": ""
													}
												],
												"src": "400:187:15"
											},
											{
												"body": {
													"nativeSrc": "641:124:15",
													"nodeType": "YulBlock",
													"src": "641:124:15",
													"statements": [
														{
															"nativeSrc": "651:29:15",
															"nodeType": "YulAssignment",
															"src": "651:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "673:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "660:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "660:12:15"
																},
																"nativeSrc": "660:20:15",
																"nodeType": "YulFunctionCall",
																"src": "660:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "651:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "651:5:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "743:16:15",
																"nodeType": "YulBlock",
																"src": "743:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "752:1:15",
																					"nodeType": "YulLiteral",
																					"src": "752:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:15",
																					"nodeType": "YulLiteral",
																					"src": "755:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "745:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:15"
																			},
																			"nativeSrc": "745:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "745:12:15"
																		},
																		"nativeSrc": "745:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "745:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "702:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "702:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "713:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "713:5:15"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "728:3:15",
																										"nodeType": "YulLiteral",
																										"src": "728:3:15",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "733:1:15",
																										"nodeType": "YulLiteral",
																										"src": "733:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "724:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "724:3:15"
																								},
																								"nativeSrc": "724:11:15",
																								"nodeType": "YulFunctionCall",
																								"src": "724:11:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "737:1:15",
																								"nodeType": "YulLiteral",
																								"src": "737:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "720:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "720:3:15"
																						},
																						"nativeSrc": "720:19:15",
																						"nodeType": "YulFunctionCall",
																						"src": "720:19:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "709:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:15"
																				},
																				"nativeSrc": "709:31:15",
																				"nodeType": "YulFunctionCall",
																				"src": "709:31:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "699:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:15"
																		},
																		"nativeSrc": "699:42:15",
																		"nodeType": "YulFunctionCall",
																		"src": "699:42:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "692:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:15"
																},
																"nativeSrc": "692:50:15",
																"nodeType": "YulFunctionCall",
																"src": "692:50:15"
															},
															"nativeSrc": "689:70:15",
															"nodeType": "YulIf",
															"src": "689:70:15"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "592:173:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "620:6:15",
														"nodeType": "YulTypedName",
														"src": "620:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "631:5:15",
														"nodeType": "YulTypedName",
														"src": "631:5:15",
														"type": ""
													}
												],
												"src": "592:173:15"
											},
											{
												"body": {
													"nativeSrc": "856:280:15",
													"nodeType": "YulBlock",
													"src": "856:280:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "902:16:15",
																"nodeType": "YulBlock",
																"src": "902:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "911:1:15",
																					"nodeType": "YulLiteral",
																					"src": "911:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "914:1:15",
																					"nodeType": "YulLiteral",
																					"src": "914:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "904:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "904:6:15"
																			},
																			"nativeSrc": "904:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "904:12:15"
																		},
																		"nativeSrc": "904:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "904:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "877:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "886:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "886:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "873:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:15"
																		},
																		"nativeSrc": "873:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "873:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "898:2:15",
																		"nodeType": "YulLiteral",
																		"src": "898:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "869:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "869:3:15"
																},
																"nativeSrc": "869:32:15",
																"nodeType": "YulFunctionCall",
																"src": "869:32:15"
															},
															"nativeSrc": "866:52:15",
															"nodeType": "YulIf",
															"src": "866:52:15"
														},
														{
															"nativeSrc": "927:39:15",
															"nodeType": "YulAssignment",
															"src": "927:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "956:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "956:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "937:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "937:18:15"
																},
																"nativeSrc": "937:29:15",
																"nodeType": "YulFunctionCall",
																"src": "937:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "927:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:15"
																}
															]
														},
														{
															"nativeSrc": "975:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "975:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1005:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1005:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1016:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1001:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1001:3:15"
																		},
																		"nativeSrc": "1001:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1001:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "988:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:15"
																},
																"nativeSrc": "988:32:15",
																"nodeType": "YulFunctionCall",
																"src": "988:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:15",
																	"nodeType": "YulTypedName",
																	"src": "979:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1090:16:15",
																"nodeType": "YulBlock",
																"src": "1090:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1099:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1099:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1102:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1102:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1092:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1092:6:15"
																			},
																			"nativeSrc": "1092:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1092:12:15"
																		},
																		"nativeSrc": "1092:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1092:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1042:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1042:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1053:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1053:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1060:26:15",
																						"nodeType": "YulLiteral",
																						"src": "1060:26:15",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1049:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1049:3:15"
																				},
																				"nativeSrc": "1049:38:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1049:38:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1039:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1039:2:15"
																		},
																		"nativeSrc": "1039:49:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1039:49:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1032:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:15"
																},
																"nativeSrc": "1032:57:15",
																"nodeType": "YulFunctionCall",
																"src": "1032:57:15"
															},
															"nativeSrc": "1029:77:15",
															"nodeType": "YulIf",
															"src": "1029:77:15"
														},
														{
															"nativeSrc": "1115:15:15",
															"nodeType": "YulAssignment",
															"src": "1115:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1125:5:15",
																"nodeType": "YulIdentifier",
																"src": "1125:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1115:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint96",
												"nativeSrc": "770:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "814:9:15",
														"nodeType": "YulTypedName",
														"src": "814:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "825:7:15",
														"nodeType": "YulTypedName",
														"src": "825:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "837:6:15",
														"nodeType": "YulTypedName",
														"src": "837:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "845:6:15",
														"nodeType": "YulTypedName",
														"src": "845:6:15",
														"type": ""
													}
												],
												"src": "770:366:15"
											},
											{
												"body": {
													"nativeSrc": "1202:239:15",
													"nodeType": "YulBlock",
													"src": "1202:239:15",
													"statements": [
														{
															"nativeSrc": "1212:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1212:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1232:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1232:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1226:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1226:5:15"
																},
																"nativeSrc": "1226:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1226:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1216:6:15",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1254:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1254:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1259:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1247:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:15"
																},
																"nativeSrc": "1247:19:15",
																"nodeType": "YulFunctionCall",
																"src": "1247:19:15"
															},
															"nativeSrc": "1247:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "1247:19:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1285:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1285:3:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1290:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1290:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1281:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:15"
																		},
																		"nativeSrc": "1281:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1281:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1301:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1301:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1308:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1308:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1297:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:15"
																		},
																		"nativeSrc": "1297:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1315:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1275:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1275:5:15"
																},
																"nativeSrc": "1275:47:15",
																"nodeType": "YulFunctionCall",
																"src": "1275:47:15"
															},
															"nativeSrc": "1275:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "1275:47:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1346:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "1346:3:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1351:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1342:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1342:3:15"
																				},
																				"nativeSrc": "1342:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1342:16:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1360:4:15",
																				"nodeType": "YulLiteral",
																				"src": "1360:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:15"
																		},
																		"nativeSrc": "1338:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:27:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1367:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1367:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1331:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:15"
																},
																"nativeSrc": "1331:38:15",
																"nodeType": "YulFunctionCall",
																"src": "1331:38:15"
															},
															"nativeSrc": "1331:38:15",
															"nodeType": "YulExpressionStatement",
															"src": "1331:38:15"
														},
														{
															"nativeSrc": "1378:57:15",
															"nodeType": "YulAssignment",
															"src": "1378:57:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1393:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "1393:3:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1406:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "1406:6:15"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1414:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1414:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1402:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:15"
																						},
																						"nativeSrc": "1402:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1402:15:15"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1423:2:15",
																								"nodeType": "YulLiteral",
																								"src": "1423:2:15",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1419:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "1419:3:15"
																						},
																						"nativeSrc": "1419:7:15",
																						"nodeType": "YulFunctionCall",
																						"src": "1419:7:15"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1398:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:15"
																				},
																				"nativeSrc": "1398:29:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1398:29:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:15"
																		},
																		"nativeSrc": "1389:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:39:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1430:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1430:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1385:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1385:3:15"
																},
																"nativeSrc": "1385:50:15",
																"nodeType": "YulFunctionCall",
																"src": "1385:50:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1378:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1378:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "1141:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:15",
														"nodeType": "YulTypedName",
														"src": "1179:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1186:3:15",
														"nodeType": "YulTypedName",
														"src": "1186:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1194:3:15",
														"nodeType": "YulTypedName",
														"src": "1194:3:15",
														"type": ""
													}
												],
												"src": "1141:300:15"
											},
											{
												"body": {
													"nativeSrc": "1567:110:15",
													"nodeType": "YulBlock",
													"src": "1567:110:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1584:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1584:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1577:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:15"
																},
																"nativeSrc": "1577:21:15",
																"nodeType": "YulFunctionCall",
																"src": "1577:21:15"
															},
															"nativeSrc": "1577:21:15",
															"nodeType": "YulExpressionStatement",
															"src": "1577:21:15"
														},
														{
															"nativeSrc": "1607:64:15",
															"nodeType": "YulAssignment",
															"src": "1607:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1644:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1656:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1667:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1667:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1652:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:15"
																		},
																		"nativeSrc": "1652:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1615:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "1615:28:15"
																},
																"nativeSrc": "1615:56:15",
																"nodeType": "YulFunctionCall",
																"src": "1615:56:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1607:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "1607:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1446:231:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1536:9:15",
														"nodeType": "YulTypedName",
														"src": "1536:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1547:6:15",
														"nodeType": "YulTypedName",
														"src": "1547:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1558:4:15",
														"nodeType": "YulTypedName",
														"src": "1558:4:15",
														"type": ""
													}
												],
												"src": "1446:231:15"
											},
											{
												"body": {
													"nativeSrc": "1752:156:15",
													"nodeType": "YulBlock",
													"src": "1752:156:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1798:16:15",
																"nodeType": "YulBlock",
																"src": "1798:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1807:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1810:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1800:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:15"
																			},
																			"nativeSrc": "1800:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:15"
																		},
																		"nativeSrc": "1800:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1773:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "1773:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1782:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "1782:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1769:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:15"
																		},
																		"nativeSrc": "1769:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1794:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1765:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1765:3:15"
																},
																"nativeSrc": "1765:32:15",
																"nodeType": "YulFunctionCall",
																"src": "1765:32:15"
															},
															"nativeSrc": "1762:52:15",
															"nodeType": "YulIf",
															"src": "1762:52:15"
														},
														{
															"nativeSrc": "1823:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1823:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "1836:1:15",
																"nodeType": "YulLiteral",
																"src": "1836:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1827:5:15",
																	"nodeType": "YulTypedName",
																	"src": "1827:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1846:32:15",
															"nodeType": "YulAssignment",
															"src": "1846:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1868:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "1868:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1855:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "1855:12:15"
																},
																"nativeSrc": "1855:23:15",
																"nodeType": "YulFunctionCall",
																"src": "1855:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1846:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "1846:5:15"
																}
															]
														},
														{
															"nativeSrc": "1887:15:15",
															"nodeType": "YulAssignment",
															"src": "1887:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "1897:5:15",
																"nodeType": "YulIdentifier",
																"src": "1897:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1887:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1682:226:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1718:9:15",
														"nodeType": "YulTypedName",
														"src": "1718:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1729:7:15",
														"nodeType": "YulTypedName",
														"src": "1729:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1741:6:15",
														"nodeType": "YulTypedName",
														"src": "1741:6:15",
														"type": ""
													}
												],
												"src": "1682:226:15"
											},
											{
												"body": {
													"nativeSrc": "2014:102:15",
													"nodeType": "YulBlock",
													"src": "2014:102:15",
													"statements": [
														{
															"nativeSrc": "2024:26:15",
															"nodeType": "YulAssignment",
															"src": "2024:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2036:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2032:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:15"
																},
																"nativeSrc": "2032:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2032:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2024:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2066:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2081:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2081:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2097:3:15",
																								"nodeType": "YulLiteral",
																								"src": "2097:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2102:1:15",
																								"nodeType": "YulLiteral",
																								"src": "2102:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2093:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "2093:3:15"
																						},
																						"nativeSrc": "2093:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "2093:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2106:1:15",
																						"nodeType": "YulLiteral",
																						"src": "2106:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2089:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "2089:3:15"
																				},
																				"nativeSrc": "2089:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2077:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:15"
																		},
																		"nativeSrc": "2077:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2077:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:15"
																},
																"nativeSrc": "2059:51:15",
																"nodeType": "YulFunctionCall",
																"src": "2059:51:15"
															},
															"nativeSrc": "2059:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "2059:51:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1913:203:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1983:9:15",
														"nodeType": "YulTypedName",
														"src": "1983:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1994:6:15",
														"nodeType": "YulTypedName",
														"src": "1994:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2005:4:15",
														"nodeType": "YulTypedName",
														"src": "2005:4:15",
														"type": ""
													}
												],
												"src": "1913:203:15"
											},
											{
												"body": {
													"nativeSrc": "2208:213:15",
													"nodeType": "YulBlock",
													"src": "2208:213:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2254:16:15",
																"nodeType": "YulBlock",
																"src": "2254:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2263:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2266:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2256:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:15"
																			},
																			"nativeSrc": "2256:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:15"
																		},
																		"nativeSrc": "2256:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2229:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2238:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2225:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:15"
																		},
																		"nativeSrc": "2225:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2250:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2221:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:15"
																},
																"nativeSrc": "2221:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2221:32:15"
															},
															"nativeSrc": "2218:52:15",
															"nodeType": "YulIf",
															"src": "2218:52:15"
														},
														{
															"nativeSrc": "2279:39:15",
															"nodeType": "YulAssignment",
															"src": "2279:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2308:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2289:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:15"
																},
																"nativeSrc": "2289:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2289:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2279:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:15"
																}
															]
														},
														{
															"nativeSrc": "2327:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2327:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2340:1:15",
																"nodeType": "YulLiteral",
																"src": "2340:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2331:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2350:41:15",
															"nodeType": "YulAssignment",
															"src": "2350:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2376:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2376:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2372:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:15"
																		},
																		"nativeSrc": "2372:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2372:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2359:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2359:12:15"
																},
																"nativeSrc": "2359:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2359:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2350:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2350:5:15"
																}
															]
														},
														{
															"nativeSrc": "2400:15:15",
															"nodeType": "YulAssignment",
															"src": "2400:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2410:5:15",
																"nodeType": "YulIdentifier",
																"src": "2410:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2400:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2121:300:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2166:9:15",
														"nodeType": "YulTypedName",
														"src": "2166:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2177:7:15",
														"nodeType": "YulTypedName",
														"src": "2177:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2189:6:15",
														"nodeType": "YulTypedName",
														"src": "2189:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2197:6:15",
														"nodeType": "YulTypedName",
														"src": "2197:6:15",
														"type": ""
													}
												],
												"src": "2121:300:15"
											},
											{
												"body": {
													"nativeSrc": "2527:76:15",
													"nodeType": "YulBlock",
													"src": "2527:76:15",
													"statements": [
														{
															"nativeSrc": "2537:26:15",
															"nodeType": "YulAssignment",
															"src": "2537:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2549:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2549:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2545:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2545:3:15"
																},
																"nativeSrc": "2545:18:15",
																"nodeType": "YulFunctionCall",
																"src": "2545:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2537:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "2537:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2579:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2579:9:15"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2590:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2572:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:15"
																},
																"nativeSrc": "2572:25:15",
																"nodeType": "YulFunctionCall",
																"src": "2572:25:15"
															},
															"nativeSrc": "2572:25:15",
															"nodeType": "YulExpressionStatement",
															"src": "2572:25:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2426:177:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2496:9:15",
														"nodeType": "YulTypedName",
														"src": "2496:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2507:6:15",
														"nodeType": "YulTypedName",
														"src": "2507:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2518:4:15",
														"nodeType": "YulTypedName",
														"src": "2518:4:15",
														"type": ""
													}
												],
												"src": "2426:177:15"
											},
											{
												"body": {
													"nativeSrc": "2712:270:15",
													"nodeType": "YulBlock",
													"src": "2712:270:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:15",
																"nodeType": "YulBlock",
																"src": "2758:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:15"
																			},
																			"nativeSrc": "2760:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:15"
																		},
																		"nativeSrc": "2760:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2733:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "2733:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2742:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2742:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2729:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:15"
																		},
																		"nativeSrc": "2729:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:2:15",
																		"nodeType": "YulLiteral",
																		"src": "2754:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2725:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:15"
																},
																"nativeSrc": "2725:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2725:32:15"
															},
															"nativeSrc": "2722:52:15",
															"nodeType": "YulIf",
															"src": "2722:52:15"
														},
														{
															"nativeSrc": "2783:39:15",
															"nodeType": "YulAssignment",
															"src": "2783:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2812:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "2812:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2793:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2793:18:15"
																},
																"nativeSrc": "2793:29:15",
																"nodeType": "YulFunctionCall",
																"src": "2793:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2783:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:15"
																}
															]
														},
														{
															"nativeSrc": "2831:48:15",
															"nodeType": "YulAssignment",
															"src": "2831:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2864:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2864:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2875:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2875:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2860:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2860:3:15"
																		},
																		"nativeSrc": "2860:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2841:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "2841:18:15"
																},
																"nativeSrc": "2841:38:15",
																"nodeType": "YulFunctionCall",
																"src": "2841:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2831:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:15"
																}
															]
														},
														{
															"nativeSrc": "2888:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "2888:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "2901:1:15",
																"nodeType": "YulLiteral",
																"src": "2901:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2892:5:15",
																	"nodeType": "YulTypedName",
																	"src": "2892:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2911:41:15",
															"nodeType": "YulAssignment",
															"src": "2911:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2937:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2948:2:15",
																				"nodeType": "YulLiteral",
																				"src": "2948:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2933:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:15"
																		},
																		"nativeSrc": "2933:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2933:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2920:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "2920:12:15"
																},
																"nativeSrc": "2920:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2920:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2911:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2911:5:15"
																}
															]
														},
														{
															"nativeSrc": "2961:15:15",
															"nodeType": "YulAssignment",
															"src": "2961:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "2971:5:15",
																"nodeType": "YulIdentifier",
																"src": "2971:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2961:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2608:374:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2662:9:15",
														"nodeType": "YulTypedName",
														"src": "2662:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2673:7:15",
														"nodeType": "YulTypedName",
														"src": "2673:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2685:6:15",
														"nodeType": "YulTypedName",
														"src": "2685:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2693:6:15",
														"nodeType": "YulTypedName",
														"src": "2693:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2701:6:15",
														"nodeType": "YulTypedName",
														"src": "2701:6:15",
														"type": ""
													}
												],
												"src": "2608:374:15"
											},
											{
												"body": {
													"nativeSrc": "3074:259:15",
													"nodeType": "YulBlock",
													"src": "3074:259:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3120:16:15",
																"nodeType": "YulBlock",
																"src": "3120:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3129:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3129:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3132:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3132:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3122:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3122:6:15"
																			},
																			"nativeSrc": "3122:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3122:12:15"
																		},
																		"nativeSrc": "3122:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3122:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3095:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3095:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3104:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3104:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3091:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:15"
																		},
																		"nativeSrc": "3091:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3087:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:15"
																},
																"nativeSrc": "3087:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3087:32:15"
															},
															"nativeSrc": "3084:52:15",
															"nodeType": "YulIf",
															"src": "3084:52:15"
														},
														{
															"nativeSrc": "3145:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3145:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3158:1:15",
																"nodeType": "YulLiteral",
																"src": "3158:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:15",
																	"nodeType": "YulTypedName",
																	"src": "3149:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3168:32:15",
															"nodeType": "YulAssignment",
															"src": "3168:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3190:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3177:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3177:12:15"
																},
																"nativeSrc": "3177:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3177:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3168:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3168:5:15"
																}
															]
														},
														{
															"nativeSrc": "3209:15:15",
															"nodeType": "YulAssignment",
															"src": "3209:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "3219:5:15",
																"nodeType": "YulIdentifier",
																"src": "3219:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3209:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:15"
																}
															]
														},
														{
															"nativeSrc": "3233:16:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3233:16:15",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:15",
																"nodeType": "YulLiteral",
																"src": "3248:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3237:7:15",
																	"nodeType": "YulTypedName",
																	"src": "3237:7:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3258:43:15",
															"nodeType": "YulAssignment",
															"src": "3258:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3286:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3297:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3282:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:15"
																		},
																		"nativeSrc": "3282:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3269:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "3269:12:15"
																},
																"nativeSrc": "3269:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3269:32:15"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3258:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3258:7:15"
																}
															]
														},
														{
															"nativeSrc": "3310:17:15",
															"nodeType": "YulAssignment",
															"src": "3310:17:15",
															"value": {
																"name": "value_1",
																"nativeSrc": "3320:7:15",
																"nodeType": "YulIdentifier",
																"src": "3320:7:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2987:346:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3032:9:15",
														"nodeType": "YulTypedName",
														"src": "3032:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3043:7:15",
														"nodeType": "YulTypedName",
														"src": "3043:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3055:6:15",
														"nodeType": "YulTypedName",
														"src": "3055:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3063:6:15",
														"nodeType": "YulTypedName",
														"src": "3063:6:15",
														"type": ""
													}
												],
												"src": "2987:346:15"
											},
											{
												"body": {
													"nativeSrc": "3467:145:15",
													"nodeType": "YulBlock",
													"src": "3467:145:15",
													"statements": [
														{
															"nativeSrc": "3477:26:15",
															"nodeType": "YulAssignment",
															"src": "3477:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3489:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3485:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:15"
																},
																"nativeSrc": "3485:18:15",
																"nodeType": "YulFunctionCall",
																"src": "3485:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3477:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3519:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3519:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3534:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3534:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3550:3:15",
																								"nodeType": "YulLiteral",
																								"src": "3550:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3555:1:15",
																								"nodeType": "YulLiteral",
																								"src": "3555:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3546:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3546:3:15"
																						},
																						"nativeSrc": "3546:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3546:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3559:1:15",
																						"nodeType": "YulLiteral",
																						"src": "3559:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3542:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3542:3:15"
																				},
																				"nativeSrc": "3542:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3542:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3530:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:15"
																		},
																		"nativeSrc": "3530:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3512:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:15"
																},
																"nativeSrc": "3512:51:15",
																"nodeType": "YulFunctionCall",
																"src": "3512:51:15"
															},
															"nativeSrc": "3512:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "3512:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3583:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3594:2:15",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3579:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:15"
																		},
																		"nativeSrc": "3579:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3599:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:15"
																},
																"nativeSrc": "3572:34:15",
																"nodeType": "YulFunctionCall",
																"src": "3572:34:15"
															},
															"nativeSrc": "3572:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "3572:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3338:274:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3428:9:15",
														"nodeType": "YulTypedName",
														"src": "3428:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3439:6:15",
														"nodeType": "YulTypedName",
														"src": "3439:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3447:6:15",
														"nodeType": "YulTypedName",
														"src": "3447:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3458:4:15",
														"nodeType": "YulTypedName",
														"src": "3458:4:15",
														"type": ""
													}
												],
												"src": "3338:274:15"
											},
											{
												"body": {
													"nativeSrc": "3687:116:15",
													"nodeType": "YulBlock",
													"src": "3687:116:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3733:16:15",
																"nodeType": "YulBlock",
																"src": "3733:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3742:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3742:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3745:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3745:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3735:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3735:6:15"
																			},
																			"nativeSrc": "3735:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3735:12:15"
																		},
																		"nativeSrc": "3735:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3735:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3708:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3708:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3717:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3704:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:15"
																		},
																		"nativeSrc": "3704:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3704:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3729:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3729:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3700:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:15"
																},
																"nativeSrc": "3700:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3700:32:15"
															},
															"nativeSrc": "3697:52:15",
															"nodeType": "YulIf",
															"src": "3697:52:15"
														},
														{
															"nativeSrc": "3758:39:15",
															"nodeType": "YulAssignment",
															"src": "3758:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3787:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3787:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3768:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3768:18:15"
																},
																"nativeSrc": "3768:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3768:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3758:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3758:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3617:186:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3653:9:15",
														"nodeType": "YulTypedName",
														"src": "3653:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3664:7:15",
														"nodeType": "YulTypedName",
														"src": "3664:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3676:6:15",
														"nodeType": "YulTypedName",
														"src": "3676:6:15",
														"type": ""
													}
												],
												"src": "3617:186:15"
											},
											{
												"body": {
													"nativeSrc": "3892:263:15",
													"nodeType": "YulBlock",
													"src": "3892:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3938:16:15",
																"nodeType": "YulBlock",
																"src": "3938:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3947:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3947:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:15",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3940:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "3940:6:15"
																			},
																			"nativeSrc": "3940:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3940:12:15"
																		},
																		"nativeSrc": "3940:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3940:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3913:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "3913:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3922:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3922:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3909:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:15"
																		},
																		"nativeSrc": "3909:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3934:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3934:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3905:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:15"
																},
																"nativeSrc": "3905:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3905:32:15"
															},
															"nativeSrc": "3902:52:15",
															"nodeType": "YulIf",
															"src": "3902:52:15"
														},
														{
															"nativeSrc": "3963:39:15",
															"nodeType": "YulAssignment",
															"src": "3963:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3992:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "3992:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3973:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "3973:18:15"
																},
																"nativeSrc": "3973:29:15",
																"nodeType": "YulFunctionCall",
																"src": "3973:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3963:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:15"
																}
															]
														},
														{
															"nativeSrc": "4011:45:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4011:45:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4041:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4052:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4052:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4037:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:15"
																		},
																		"nativeSrc": "4037:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4037:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4024:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:15"
																},
																"nativeSrc": "4024:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4024:32:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4015:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4015:5:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4109:16:15",
																"nodeType": "YulBlock",
																"src": "4109:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4118:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4118:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4121:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4121:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4111:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4111:6:15"
																			},
																			"nativeSrc": "4111:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4111:12:15"
																		},
																		"nativeSrc": "4111:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4111:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4078:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "4078:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4099:5:15",
																								"nodeType": "YulIdentifier",
																								"src": "4099:5:15"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4092:6:15",
																							"nodeType": "YulIdentifier",
																							"src": "4092:6:15"
																						},
																						"nativeSrc": "4092:13:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4092:13:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4085:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "4085:6:15"
																				},
																				"nativeSrc": "4085:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4085:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4075:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "4075:2:15"
																		},
																		"nativeSrc": "4075:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4075:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4068:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4068:6:15"
																},
																"nativeSrc": "4068:40:15",
																"nodeType": "YulFunctionCall",
																"src": "4068:40:15"
															},
															"nativeSrc": "4065:60:15",
															"nodeType": "YulIf",
															"src": "4065:60:15"
														},
														{
															"nativeSrc": "4134:15:15",
															"nodeType": "YulAssignment",
															"src": "4134:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "4144:5:15",
																"nodeType": "YulIdentifier",
																"src": "4144:5:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4134:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3808:347:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3850:9:15",
														"nodeType": "YulTypedName",
														"src": "3850:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3861:7:15",
														"nodeType": "YulTypedName",
														"src": "3861:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3873:6:15",
														"nodeType": "YulTypedName",
														"src": "3873:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3881:6:15",
														"nodeType": "YulTypedName",
														"src": "3881:6:15",
														"type": ""
													}
												],
												"src": "3808:347:15"
											},
											{
												"body": {
													"nativeSrc": "4192:95:15",
													"nodeType": "YulBlock",
													"src": "4192:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4209:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4209:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4216:3:15",
																				"nodeType": "YulLiteral",
																				"src": "4216:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4221:10:15",
																				"nodeType": "YulLiteral",
																				"src": "4221:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4212:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4212:3:15"
																		},
																		"nativeSrc": "4212:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4212:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4202:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:15"
																},
																"nativeSrc": "4202:31:15",
																"nodeType": "YulFunctionCall",
																"src": "4202:31:15"
															},
															"nativeSrc": "4202:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "4202:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4249:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4249:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4252:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4252:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4242:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:15"
																},
																"nativeSrc": "4242:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4242:15:15"
															},
															"nativeSrc": "4242:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4242:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4273:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4273:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4276:4:15",
																		"nodeType": "YulLiteral",
																		"src": "4276:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4266:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:15"
																},
																"nativeSrc": "4266:15:15",
																"nodeType": "YulFunctionCall",
																"src": "4266:15:15"
															},
															"nativeSrc": "4266:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "4266:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4160:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "4160:127:15"
											},
											{
												"body": {
													"nativeSrc": "4422:1077:15",
													"nodeType": "YulBlock",
													"src": "4422:1077:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4469:16:15",
																"nodeType": "YulBlock",
																"src": "4469:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4478:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4478:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4481:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4481:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4471:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4471:6:15"
																			},
																			"nativeSrc": "4471:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4471:12:15"
																		},
																		"nativeSrc": "4471:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4471:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4452:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4452:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4439:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:15"
																		},
																		"nativeSrc": "4439:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4439:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4464:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4464:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4435:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:15"
																},
																"nativeSrc": "4435:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4435:33:15"
															},
															"nativeSrc": "4432:53:15",
															"nodeType": "YulIf",
															"src": "4432:53:15"
														},
														{
															"nativeSrc": "4494:39:15",
															"nodeType": "YulAssignment",
															"src": "4494:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4523:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4523:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4504:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4504:18:15"
																},
																"nativeSrc": "4504:29:15",
																"nodeType": "YulFunctionCall",
																"src": "4504:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4494:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4494:6:15"
																}
															]
														},
														{
															"nativeSrc": "4542:48:15",
															"nodeType": "YulAssignment",
															"src": "4542:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:15"
																		},
																		"nativeSrc": "4571:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4552:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "4552:18:15"
																},
																"nativeSrc": "4552:38:15",
																"nodeType": "YulFunctionCall",
																"src": "4552:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4542:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4542:6:15"
																}
															]
														},
														{
															"nativeSrc": "4599:14:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4599:14:15",
															"value": {
																"kind": "number",
																"nativeSrc": "4612:1:15",
																"nodeType": "YulLiteral",
																"src": "4612:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4603:5:15",
																	"nodeType": "YulTypedName",
																	"src": "4603:5:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4622:41:15",
															"nodeType": "YulAssignment",
															"src": "4622:41:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4648:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4648:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4659:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4659:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4644:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4644:3:15"
																		},
																		"nativeSrc": "4644:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4644:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4631:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4631:12:15"
																},
																"nativeSrc": "4631:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4631:32:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4622:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "4622:5:15"
																}
															]
														},
														{
															"nativeSrc": "4672:15:15",
															"nodeType": "YulAssignment",
															"src": "4672:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "4682:5:15",
																"nodeType": "YulIdentifier",
																"src": "4682:5:15"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4672:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4672:6:15"
																}
															]
														},
														{
															"nativeSrc": "4696:46:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4696:46:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:15",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:15"
																		},
																		"nativeSrc": "4723:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4710:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4710:12:15"
																},
																"nativeSrc": "4710:32:15",
																"nodeType": "YulFunctionCall",
																"src": "4710:32:15"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4700:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4700:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4785:16:15",
																"nodeType": "YulBlock",
																"src": "4785:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4794:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4794:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4797:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4797:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4787:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4787:6:15"
																			},
																			"nativeSrc": "4787:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4787:12:15"
																		},
																		"nativeSrc": "4787:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4787:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4757:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4757:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4765:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4765:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4754:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4754:2:15"
																},
																"nativeSrc": "4754:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4754:30:15"
															},
															"nativeSrc": "4751:50:15",
															"nodeType": "YulIf",
															"src": "4751:50:15"
														},
														{
															"nativeSrc": "4810:32:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4810:32:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4824:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "4824:9:15"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4835:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4835:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4820:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4820:3:15"
																},
																"nativeSrc": "4820:22:15",
																"nodeType": "YulFunctionCall",
																"src": "4820:22:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4814:2:15",
																	"nodeType": "YulTypedName",
																	"src": "4814:2:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4890:16:15",
																"nodeType": "YulBlock",
																"src": "4890:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4899:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4899:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4902:1:15",
																					"nodeType": "YulLiteral",
																					"src": "4902:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4892:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "4892:6:15"
																			},
																			"nativeSrc": "4892:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4892:12:15"
																		},
																		"nativeSrc": "4892:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4892:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4869:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4869:2:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4873:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4873:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4865:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4865:3:15"
																				},
																				"nativeSrc": "4865:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4865:13:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4880:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4880:7:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4861:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:15"
																		},
																		"nativeSrc": "4861:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4861:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4854:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:15"
																},
																"nativeSrc": "4854:35:15",
																"nodeType": "YulFunctionCall",
																"src": "4854:35:15"
															},
															"nativeSrc": "4851:55:15",
															"nodeType": "YulIf",
															"src": "4851:55:15"
														},
														{
															"nativeSrc": "4915:30:15",
															"nodeType": "YulVariableDeclaration",
															"src": "4915:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4942:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "4942:2:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4929:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "4929:12:15"
																},
																"nativeSrc": "4929:16:15",
																"nodeType": "YulFunctionCall",
																"src": "4929:16:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4919:6:15",
																	"nodeType": "YulTypedName",
																	"src": "4919:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4988:22:15",
																"nodeType": "YulBlock",
																"src": "4988:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4990:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "4990:16:15"
																			},
																			"nativeSrc": "4990:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4990:18:15"
																		},
																		"nativeSrc": "4990:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4990:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4960:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "4960:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4968:18:15",
																		"nodeType": "YulLiteral",
																		"src": "4968:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4957:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "4957:2:15"
																},
																"nativeSrc": "4957:30:15",
																"nodeType": "YulFunctionCall",
																"src": "4957:30:15"
															},
															"nativeSrc": "4954:56:15",
															"nodeType": "YulIf",
															"src": "4954:56:15"
														},
														{
															"nativeSrc": "5019:23:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5019:23:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5039:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5033:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "5033:5:15"
																},
																"nativeSrc": "5033:9:15",
																"nodeType": "YulFunctionCall",
																"src": "5033:9:15"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5023:6:15",
																	"nodeType": "YulTypedName",
																	"src": "5023:6:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5051:85:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:85:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5073:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5073:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "5097:6:15",
																										"nodeType": "YulIdentifier",
																										"src": "5097:6:15"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5105:4:15",
																										"nodeType": "YulLiteral",
																										"src": "5105:4:15",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5093:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "5093:3:15"
																								},
																								"nativeSrc": "5093:17:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5093:17:15"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "5116:2:15",
																										"nodeType": "YulLiteral",
																										"src": "5116:2:15",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "5112:3:15",
																									"nodeType": "YulIdentifier",
																									"src": "5112:3:15"
																								},
																								"nativeSrc": "5112:7:15",
																								"nodeType": "YulFunctionCall",
																								"src": "5112:7:15"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "5089:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "5089:3:15"
																						},
																						"nativeSrc": "5089:31:15",
																						"nodeType": "YulFunctionCall",
																						"src": "5089:31:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5122:2:15",
																						"nodeType": "YulLiteral",
																						"src": "5122:2:15",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5085:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5085:3:15"
																				},
																				"nativeSrc": "5085:40:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5085:40:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5131:2:15",
																						"nodeType": "YulLiteral",
																						"src": "5131:2:15",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5127:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5127:3:15"
																				},
																				"nativeSrc": "5127:7:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5127:7:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5081:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5081:3:15"
																		},
																		"nativeSrc": "5081:54:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:54:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5069:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:15"
																},
																"nativeSrc": "5069:67:15",
																"nodeType": "YulFunctionCall",
																"src": "5069:67:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5055:10:15",
																	"nodeType": "YulTypedName",
																	"src": "5055:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5211:22:15",
																"nodeType": "YulBlock",
																"src": "5211:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5213:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "5213:16:15"
																			},
																			"nativeSrc": "5213:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5213:18:15"
																		},
																		"nativeSrc": "5213:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5213:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5154:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "5154:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5166:18:15",
																				"nodeType": "YulLiteral",
																				"src": "5166:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5151:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5151:2:15"
																		},
																		"nativeSrc": "5151:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5190:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "5190:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5202:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5202:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5187:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "5187:2:15"
																		},
																		"nativeSrc": "5187:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5187:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5148:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5148:2:15"
																},
																"nativeSrc": "5148:62:15",
																"nodeType": "YulFunctionCall",
																"src": "5148:62:15"
															},
															"nativeSrc": "5145:88:15",
															"nodeType": "YulIf",
															"src": "5145:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5249:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5249:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5253:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "5253:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:15"
																},
																"nativeSrc": "5242:22:15",
																"nodeType": "YulFunctionCall",
																"src": "5242:22:15"
															},
															"nativeSrc": "5242:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "5242:22:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5280:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5280:6:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5288:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5288:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5273:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5273:6:15"
																},
																"nativeSrc": "5273:22:15",
																"nodeType": "YulFunctionCall",
																"src": "5273:22:15"
															},
															"nativeSrc": "5273:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "5273:22:15"
														},
														{
															"body": {
																"nativeSrc": "5345:16:15",
																"nodeType": "YulBlock",
																"src": "5345:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5354:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5354:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5357:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5357:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5347:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5347:6:15"
																			},
																			"nativeSrc": "5347:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5347:12:15"
																		},
																		"nativeSrc": "5347:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5347:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5318:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "5318:2:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5322:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5322:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5314:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5314:3:15"
																				},
																				"nativeSrc": "5314:15:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5314:15:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5331:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5331:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5310:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:15"
																		},
																		"nativeSrc": "5310:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:24:15"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5336:7:15",
																		"nodeType": "YulIdentifier",
																		"src": "5336:7:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5307:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5307:2:15"
																},
																"nativeSrc": "5307:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5307:37:15"
															},
															"nativeSrc": "5304:57:15",
															"nodeType": "YulIf",
															"src": "5304:57:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5387:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5387:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5395:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5383:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:15"
																		},
																		"nativeSrc": "5383:15:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5383:15:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5404:2:15",
																				"nodeType": "YulIdentifier",
																				"src": "5404:2:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5408:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5408:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5400:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:15"
																		},
																		"nativeSrc": "5400:11:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:11:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5413:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5413:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5370:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "5370:12:15"
																},
																"nativeSrc": "5370:50:15",
																"nodeType": "YulFunctionCall",
																"src": "5370:50:15"
															},
															"nativeSrc": "5370:50:15",
															"nodeType": "YulExpressionStatement",
															"src": "5370:50:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "5444:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5444:6:15"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5452:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5452:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5440:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5440:3:15"
																				},
																				"nativeSrc": "5440:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5440:19:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5461:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5461:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5436:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5436:3:15"
																		},
																		"nativeSrc": "5436:28:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5436:28:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5466:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5466:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5429:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5429:6:15"
																},
																"nativeSrc": "5429:39:15",
																"nodeType": "YulFunctionCall",
																"src": "5429:39:15"
															},
															"nativeSrc": "5429:39:15",
															"nodeType": "YulExpressionStatement",
															"src": "5429:39:15"
														},
														{
															"nativeSrc": "5477:16:15",
															"nodeType": "YulAssignment",
															"src": "5477:16:15",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5487:6:15",
																"nodeType": "YulIdentifier",
																"src": "5487:6:15"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5477:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5477:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "4292:1207:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4364:9:15",
														"nodeType": "YulTypedName",
														"src": "4364:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4375:7:15",
														"nodeType": "YulTypedName",
														"src": "4375:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4387:6:15",
														"nodeType": "YulTypedName",
														"src": "4387:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4395:6:15",
														"nodeType": "YulTypedName",
														"src": "4395:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4403:6:15",
														"nodeType": "YulTypedName",
														"src": "4403:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4411:6:15",
														"nodeType": "YulTypedName",
														"src": "4411:6:15",
														"type": ""
													}
												],
												"src": "4292:1207:15"
											},
											{
												"body": {
													"nativeSrc": "5591:173:15",
													"nodeType": "YulBlock",
													"src": "5591:173:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "5637:16:15",
																"nodeType": "YulBlock",
																"src": "5637:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5646:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5646:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5649:1:15",
																					"nodeType": "YulLiteral",
																					"src": "5649:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5639:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:15"
																			},
																			"nativeSrc": "5639:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5639:12:15"
																		},
																		"nativeSrc": "5639:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "5639:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5612:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5612:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5621:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5621:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5608:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:15"
																		},
																		"nativeSrc": "5608:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5633:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5604:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5604:3:15"
																},
																"nativeSrc": "5604:32:15",
																"nodeType": "YulFunctionCall",
																"src": "5604:32:15"
															},
															"nativeSrc": "5601:52:15",
															"nodeType": "YulIf",
															"src": "5601:52:15"
														},
														{
															"nativeSrc": "5662:39:15",
															"nodeType": "YulAssignment",
															"src": "5662:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5691:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5691:9:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5672:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5672:18:15"
																},
																"nativeSrc": "5672:29:15",
																"nodeType": "YulFunctionCall",
																"src": "5672:29:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5662:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5662:6:15"
																}
															]
														},
														{
															"nativeSrc": "5710:48:15",
															"nodeType": "YulAssignment",
															"src": "5710:48:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5743:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5743:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5754:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5754:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5739:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:15"
																		},
																		"nativeSrc": "5739:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5720:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "5720:18:15"
																},
																"nativeSrc": "5720:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5720:38:15"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5710:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5504:260:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5549:9:15",
														"nodeType": "YulTypedName",
														"src": "5549:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5560:7:15",
														"nodeType": "YulTypedName",
														"src": "5560:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5572:6:15",
														"nodeType": "YulTypedName",
														"src": "5572:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5580:6:15",
														"nodeType": "YulTypedName",
														"src": "5580:6:15",
														"type": ""
													}
												],
												"src": "5504:260:15"
											},
											{
												"body": {
													"nativeSrc": "5824:325:15",
													"nodeType": "YulBlock",
													"src": "5824:325:15",
													"statements": [
														{
															"nativeSrc": "5834:22:15",
															"nodeType": "YulAssignment",
															"src": "5834:22:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5848:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5848:1:15",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5851:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5851:4:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5844:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5844:3:15"
																},
																"nativeSrc": "5844:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5844:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5834:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:15"
																}
															]
														},
														{
															"nativeSrc": "5865:38:15",
															"nodeType": "YulVariableDeclaration",
															"src": "5865:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5895:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "5895:4:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5901:1:15",
																		"nodeType": "YulLiteral",
																		"src": "5901:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5891:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5891:3:15"
																},
																"nativeSrc": "5891:12:15",
																"nodeType": "YulFunctionCall",
																"src": "5891:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5869:18:15",
																	"nodeType": "YulTypedName",
																	"src": "5869:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5942:31:15",
																"nodeType": "YulBlock",
																"src": "5942:31:15",
																"statements": [
																	{
																		"nativeSrc": "5944:27:15",
																		"nodeType": "YulAssignment",
																		"src": "5944:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5958:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "5958:6:15"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5966:4:15",
																					"nodeType": "YulLiteral",
																					"src": "5966:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5954:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "5954:3:15"
																			},
																			"nativeSrc": "5954:17:15",
																			"nodeType": "YulFunctionCall",
																			"src": "5954:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5944:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "5944:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5922:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "5922:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5915:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:15"
																},
																"nativeSrc": "5915:26:15",
																"nodeType": "YulFunctionCall",
																"src": "5915:26:15"
															},
															"nativeSrc": "5912:61:15",
															"nodeType": "YulIf",
															"src": "5912:61:15"
														},
														{
															"body": {
																"nativeSrc": "6032:111:15",
																"nodeType": "YulBlock",
																"src": "6032:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6053:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6053:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6060:3:15",
																							"nodeType": "YulLiteral",
																							"src": "6060:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6065:10:15",
																							"nodeType": "YulLiteral",
																							"src": "6065:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6056:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "6056:3:15"
																					},
																					"nativeSrc": "6056:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "6056:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6046:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6046:6:15"
																			},
																			"nativeSrc": "6046:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6046:31:15"
																		},
																		"nativeSrc": "6046:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6046:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6097:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6097:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6100:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6100:4:15",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6090:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6090:6:15"
																			},
																			"nativeSrc": "6090:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6090:15:15"
																		},
																		"nativeSrc": "6090:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6090:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6125:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6125:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6128:4:15",
																					"nodeType": "YulLiteral",
																					"src": "6128:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6118:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6118:6:15"
																			},
																			"nativeSrc": "6118:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6118:15:15"
																		},
																		"nativeSrc": "6118:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6118:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5988:18:15",
																		"nodeType": "YulIdentifier",
																		"src": "5988:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6011:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6011:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6019:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6019:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6008:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6008:2:15"
																		},
																		"nativeSrc": "6008:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6008:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5985:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "5985:2:15"
																},
																"nativeSrc": "5985:38:15",
																"nodeType": "YulFunctionCall",
																"src": "5985:38:15"
															},
															"nativeSrc": "5982:161:15",
															"nodeType": "YulIf",
															"src": "5982:161:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5769:380:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5804:4:15",
														"nodeType": "YulTypedName",
														"src": "5804:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5813:6:15",
														"nodeType": "YulTypedName",
														"src": "5813:6:15",
														"type": ""
													}
												],
												"src": "5769:380:15"
											},
											{
												"body": {
													"nativeSrc": "6186:95:15",
													"nodeType": "YulBlock",
													"src": "6186:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6203:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6203:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6210:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6210:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6215:10:15",
																				"nodeType": "YulLiteral",
																				"src": "6215:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6206:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:15"
																		},
																		"nativeSrc": "6206:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6206:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6196:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6196:6:15"
																},
																"nativeSrc": "6196:31:15",
																"nodeType": "YulFunctionCall",
																"src": "6196:31:15"
															},
															"nativeSrc": "6196:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "6196:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6243:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6243:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6246:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6246:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6236:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:15"
																},
																"nativeSrc": "6236:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6236:15:15"
															},
															"nativeSrc": "6236:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6236:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6267:1:15",
																		"nodeType": "YulLiteral",
																		"src": "6267:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6270:4:15",
																		"nodeType": "YulLiteral",
																		"src": "6270:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6260:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:15"
																},
																"nativeSrc": "6260:15:15",
																"nodeType": "YulFunctionCall",
																"src": "6260:15:15"
															},
															"nativeSrc": "6260:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "6260:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6154:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6154:127:15"
											},
											{
												"body": {
													"nativeSrc": "6335:79:15",
													"nodeType": "YulBlock",
													"src": "6335:79:15",
													"statements": [
														{
															"nativeSrc": "6345:17:15",
															"nodeType": "YulAssignment",
															"src": "6345:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6357:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6357:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6360:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6360:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6353:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6353:3:15"
																},
																"nativeSrc": "6353:9:15",
																"nodeType": "YulFunctionCall",
																"src": "6353:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6345:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6345:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6386:22:15",
																"nodeType": "YulBlock",
																"src": "6386:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6388:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6388:16:15"
																			},
																			"nativeSrc": "6388:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6388:18:15"
																		},
																		"nativeSrc": "6388:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6388:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6377:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "6377:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6383:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6383:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6374:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "6374:2:15"
																},
																"nativeSrc": "6374:11:15",
																"nodeType": "YulFunctionCall",
																"src": "6374:11:15"
															},
															"nativeSrc": "6371:37:15",
															"nodeType": "YulIf",
															"src": "6371:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6286:128:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6317:1:15",
														"nodeType": "YulTypedName",
														"src": "6317:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6320:1:15",
														"nodeType": "YulTypedName",
														"src": "6320:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6326:4:15",
														"nodeType": "YulTypedName",
														"src": "6326:4:15",
														"type": ""
													}
												],
												"src": "6286:128:15"
											},
											{
												"body": {
													"nativeSrc": "6576:214:15",
													"nodeType": "YulBlock",
													"src": "6576:214:15",
													"statements": [
														{
															"nativeSrc": "6586:26:15",
															"nodeType": "YulAssignment",
															"src": "6586:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6594:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:15"
																},
																"nativeSrc": "6594:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6594:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6586:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6586:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6628:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6628:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6643:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6643:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6659:3:15",
																								"nodeType": "YulLiteral",
																								"src": "6659:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6664:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6664:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6655:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6655:3:15"
																						},
																						"nativeSrc": "6655:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6655:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6668:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6668:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6651:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6651:3:15"
																				},
																				"nativeSrc": "6651:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6651:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6639:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:15"
																		},
																		"nativeSrc": "6639:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6621:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:15"
																},
																"nativeSrc": "6621:51:15",
																"nodeType": "YulFunctionCall",
																"src": "6621:51:15"
															},
															"nativeSrc": "6621:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "6621:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6692:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6692:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6703:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6703:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6688:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6688:3:15"
																		},
																		"nativeSrc": "6688:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6708:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6708:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6681:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:15"
																},
																"nativeSrc": "6681:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6681:34:15"
															},
															"nativeSrc": "6681:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6681:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6735:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6735:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6746:2:15",
																				"nodeType": "YulLiteral",
																				"src": "6746:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6731:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6731:3:15"
																		},
																		"nativeSrc": "6731:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6731:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "6755:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6755:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6771:3:15",
																								"nodeType": "YulLiteral",
																								"src": "6771:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6776:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6776:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6767:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6767:3:15"
																						},
																						"nativeSrc": "6767:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6767:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6780:1:15",
																						"nodeType": "YulLiteral",
																						"src": "6780:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6763:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6763:3:15"
																				},
																				"nativeSrc": "6763:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6763:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6751:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:15"
																		},
																		"nativeSrc": "6751:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6751:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6724:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:15"
																},
																"nativeSrc": "6724:60:15",
																"nodeType": "YulFunctionCall",
																"src": "6724:60:15"
															},
															"nativeSrc": "6724:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "6724:60:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6419:371:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6529:9:15",
														"nodeType": "YulTypedName",
														"src": "6529:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6540:6:15",
														"nodeType": "YulTypedName",
														"src": "6540:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6548:6:15",
														"nodeType": "YulTypedName",
														"src": "6548:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6556:6:15",
														"nodeType": "YulTypedName",
														"src": "6556:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6567:4:15",
														"nodeType": "YulTypedName",
														"src": "6567:4:15",
														"type": ""
													}
												],
												"src": "6419:371:15"
											},
											{
												"body": {
													"nativeSrc": "6847:116:15",
													"nodeType": "YulBlock",
													"src": "6847:116:15",
													"statements": [
														{
															"nativeSrc": "6857:20:15",
															"nodeType": "YulAssignment",
															"src": "6857:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6872:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6872:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6875:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "6875:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6868:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6868:3:15"
																},
																"nativeSrc": "6868:9:15",
																"nodeType": "YulFunctionCall",
																"src": "6868:9:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6857:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "6857:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6935:22:15",
																"nodeType": "YulBlock",
																"src": "6935:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6937:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "6937:16:15"
																			},
																			"nativeSrc": "6937:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6937:18:15"
																		},
																		"nativeSrc": "6937:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6937:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6906:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "6906:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6899:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "6899:6:15"
																				},
																				"nativeSrc": "6899:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6899:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6913:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "6913:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6920:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "6920:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6929:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "6929:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6916:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6916:3:15"
																						},
																						"nativeSrc": "6916:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6916:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6910:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "6910:2:15"
																				},
																				"nativeSrc": "6910:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6910:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6896:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6896:2:15"
																		},
																		"nativeSrc": "6896:37:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6896:37:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6889:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6889:6:15"
																},
																"nativeSrc": "6889:45:15",
																"nodeType": "YulFunctionCall",
																"src": "6889:45:15"
															},
															"nativeSrc": "6886:71:15",
															"nodeType": "YulIf",
															"src": "6886:71:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6795:168:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6826:1:15",
														"nodeType": "YulTypedName",
														"src": "6826:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6829:1:15",
														"nodeType": "YulTypedName",
														"src": "6829:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6835:7:15",
														"nodeType": "YulTypedName",
														"src": "6835:7:15",
														"type": ""
													}
												],
												"src": "6795:168:15"
											},
											{
												"body": {
													"nativeSrc": "7000:95:15",
													"nodeType": "YulBlock",
													"src": "7000:95:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7017:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7017:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7024:3:15",
																				"nodeType": "YulLiteral",
																				"src": "7024:3:15",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7029:10:15",
																				"nodeType": "YulLiteral",
																				"src": "7029:10:15",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7020:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:15"
																		},
																		"nativeSrc": "7020:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7020:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7010:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7010:6:15"
																},
																"nativeSrc": "7010:31:15",
																"nodeType": "YulFunctionCall",
																"src": "7010:31:15"
															},
															"nativeSrc": "7010:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "7010:31:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7057:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7057:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7060:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7060:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7050:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:15"
																},
																"nativeSrc": "7050:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7050:15:15"
															},
															"nativeSrc": "7050:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7050:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7081:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7081:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7084:4:15",
																		"nodeType": "YulLiteral",
																		"src": "7084:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7074:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:15"
																},
																"nativeSrc": "7074:15:15",
																"nodeType": "YulFunctionCall",
																"src": "7074:15:15"
															},
															"nativeSrc": "7074:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "7074:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6968:127:15",
												"nodeType": "YulFunctionDefinition",
												"src": "6968:127:15"
											},
											{
												"body": {
													"nativeSrc": "7146:171:15",
													"nodeType": "YulBlock",
													"src": "7146:171:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7177:111:15",
																"nodeType": "YulBlock",
																"src": "7177:111:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7198:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7198:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7205:3:15",
																							"nodeType": "YulLiteral",
																							"src": "7205:3:15",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7210:10:15",
																							"nodeType": "YulLiteral",
																							"src": "7210:10:15",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7201:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "7201:3:15"
																					},
																					"nativeSrc": "7201:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "7201:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7191:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7191:6:15"
																			},
																			"nativeSrc": "7191:31:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7191:31:15"
																		},
																		"nativeSrc": "7191:31:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7191:31:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7242:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7242:1:15",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7245:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7245:4:15",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7235:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7235:6:15"
																			},
																			"nativeSrc": "7235:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7235:15:15"
																		},
																		"nativeSrc": "7235:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7235:15:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7270:1:15",
																					"nodeType": "YulLiteral",
																					"src": "7270:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7273:4:15",
																					"nodeType": "YulLiteral",
																					"src": "7273:4:15",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7263:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7263:6:15"
																			},
																			"nativeSrc": "7263:15:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7263:15:15"
																		},
																		"nativeSrc": "7263:15:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7263:15:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7166:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7166:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7159:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:15"
																},
																"nativeSrc": "7159:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7159:9:15"
															},
															"nativeSrc": "7156:132:15",
															"nodeType": "YulIf",
															"src": "7156:132:15"
														},
														{
															"nativeSrc": "7297:14:15",
															"nodeType": "YulAssignment",
															"src": "7297:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7306:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7306:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7309:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "7309:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7302:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:15"
																},
																"nativeSrc": "7302:9:15",
																"nodeType": "YulFunctionCall",
																"src": "7302:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7297:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7100:217:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7131:1:15",
														"nodeType": "YulTypedName",
														"src": "7131:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7134:1:15",
														"nodeType": "YulTypedName",
														"src": "7134:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7140:1:15",
														"nodeType": "YulTypedName",
														"src": "7140:1:15",
														"type": ""
													}
												],
												"src": "7100:217:15"
											},
											{
												"body": {
													"nativeSrc": "7372:162:15",
													"nodeType": "YulBlock",
													"src": "7372:162:15",
													"statements": [
														{
															"nativeSrc": "7382:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7382:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7402:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "7402:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7396:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7396:5:15"
																},
																"nativeSrc": "7396:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7396:12:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7386:6:15",
																	"nodeType": "YulTypedName",
																	"src": "7386:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7423:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7423:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7432:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "7432:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:4:15",
																				"nodeType": "YulLiteral",
																				"src": "7439:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7428:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7428:3:15"
																		},
																		"nativeSrc": "7428:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7428:16:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7446:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7446:6:15"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7417:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "7417:5:15"
																},
																"nativeSrc": "7417:36:15",
																"nodeType": "YulFunctionCall",
																"src": "7417:36:15"
															},
															"nativeSrc": "7417:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "7417:36:15"
														},
														{
															"nativeSrc": "7462:26:15",
															"nodeType": "YulVariableDeclaration",
															"src": "7462:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7476:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "7476:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7481:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7481:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7472:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7472:3:15"
																},
																"nativeSrc": "7472:16:15",
																"nodeType": "YulFunctionCall",
																"src": "7472:16:15"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7466:2:15",
																	"nodeType": "YulTypedName",
																	"src": "7466:2:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7504:2:15",
																		"nodeType": "YulIdentifier",
																		"src": "7504:2:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7508:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7508:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7497:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7497:6:15"
																},
																"nativeSrc": "7497:13:15",
																"nodeType": "YulFunctionCall",
																"src": "7497:13:15"
															},
															"nativeSrc": "7497:13:15",
															"nodeType": "YulExpressionStatement",
															"src": "7497:13:15"
														},
														{
															"nativeSrc": "7519:9:15",
															"nodeType": "YulAssignment",
															"src": "7519:9:15",
															"value": {
																"name": "_1",
																"nativeSrc": "7526:2:15",
																"nodeType": "YulIdentifier",
																"src": "7526:2:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7519:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7519:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "7322:212:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7349:5:15",
														"nodeType": "YulTypedName",
														"src": "7349:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7356:3:15",
														"nodeType": "YulTypedName",
														"src": "7356:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7364:3:15",
														"nodeType": "YulTypedName",
														"src": "7364:3:15",
														"type": ""
													}
												],
												"src": "7322:212:15"
											},
											{
												"body": {
													"nativeSrc": "7726:80:15",
													"nodeType": "YulBlock",
													"src": "7726:80:15",
													"statements": [
														{
															"nativeSrc": "7736:64:15",
															"nodeType": "YulAssignment",
															"src": "7736:64:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7761:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7761:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7787:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "7787:6:15"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "7795:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "7795:3:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "7769:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "7769:17:15"
																		},
																		"nativeSrc": "7769:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7769:30:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7743:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "7743:17:15"
																},
																"nativeSrc": "7743:57:15",
																"nodeType": "YulFunctionCall",
																"src": "7743:57:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7736:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7736:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7539:267:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7694:3:15",
														"nodeType": "YulTypedName",
														"src": "7694:3:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7699:6:15",
														"nodeType": "YulTypedName",
														"src": "7699:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7707:6:15",
														"nodeType": "YulTypedName",
														"src": "7707:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7718:3:15",
														"nodeType": "YulTypedName",
														"src": "7718:3:15",
														"type": ""
													}
												],
												"src": "7539:267:15"
											},
											{
												"body": {
													"nativeSrc": "7939:152:15",
													"nodeType": "YulBlock",
													"src": "7939:152:15",
													"statements": [
														{
															"nativeSrc": "7949:26:15",
															"nodeType": "YulAssignment",
															"src": "7949:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7961:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7961:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7972:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7972:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7957:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7957:3:15"
																},
																"nativeSrc": "7957:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7957:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7949:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7949:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7991:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8006:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8006:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8014:26:15",
																				"nodeType": "YulLiteral",
																				"src": "8014:26:15",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8002:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:15"
																		},
																		"nativeSrc": "8002:39:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:39:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7984:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:15"
																},
																"nativeSrc": "7984:58:15",
																"nodeType": "YulFunctionCall",
																"src": "7984:58:15"
															},
															"nativeSrc": "7984:58:15",
															"nodeType": "YulExpressionStatement",
															"src": "7984:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8062:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8062:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8073:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8073:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8058:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8058:3:15"
																		},
																		"nativeSrc": "8058:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8058:18:15"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8078:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8078:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8051:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8051:6:15"
																},
																"nativeSrc": "8051:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8051:34:15"
															},
															"nativeSrc": "8051:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8051:34:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7811:280:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7900:9:15",
														"nodeType": "YulTypedName",
														"src": "7900:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7911:6:15",
														"nodeType": "YulTypedName",
														"src": "7911:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7919:6:15",
														"nodeType": "YulTypedName",
														"src": "7919:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7930:4:15",
														"nodeType": "YulTypedName",
														"src": "7930:4:15",
														"type": ""
													}
												],
												"src": "7811:280:15"
											},
											{
												"body": {
													"nativeSrc": "8299:293:15",
													"nodeType": "YulBlock",
													"src": "8299:293:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8316:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8316:9:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8331:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8331:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8347:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8347:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8352:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8352:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8343:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8343:3:15"
																						},
																						"nativeSrc": "8343:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8343:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8356:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8356:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8339:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8339:3:15"
																				},
																				"nativeSrc": "8339:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8339:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8327:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:15"
																		},
																		"nativeSrc": "8327:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8309:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:15"
																},
																"nativeSrc": "8309:51:15",
																"nodeType": "YulFunctionCall",
																"src": "8309:51:15"
															},
															"nativeSrc": "8309:51:15",
															"nodeType": "YulExpressionStatement",
															"src": "8309:51:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8380:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8380:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8391:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8391:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8376:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8376:3:15"
																		},
																		"nativeSrc": "8376:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8376:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8400:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8400:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8416:3:15",
																								"nodeType": "YulLiteral",
																								"src": "8416:3:15",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8421:1:15",
																								"nodeType": "YulLiteral",
																								"src": "8421:1:15",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8412:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "8412:3:15"
																						},
																						"nativeSrc": "8412:11:15",
																						"nodeType": "YulFunctionCall",
																						"src": "8412:11:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8425:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8425:1:15",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8408:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8408:3:15"
																				},
																				"nativeSrc": "8408:19:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8408:19:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8396:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:15"
																		},
																		"nativeSrc": "8396:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:32:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8369:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:15"
																},
																"nativeSrc": "8369:60:15",
																"nodeType": "YulFunctionCall",
																"src": "8369:60:15"
															},
															"nativeSrc": "8369:60:15",
															"nodeType": "YulExpressionStatement",
															"src": "8369:60:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8449:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8449:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8460:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8460:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8445:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8445:3:15"
																		},
																		"nativeSrc": "8445:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8445:18:15"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8465:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8465:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8438:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:15"
																},
																"nativeSrc": "8438:34:15",
																"nodeType": "YulFunctionCall",
																"src": "8438:34:15"
															},
															"nativeSrc": "8438:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "8438:34:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8492:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8492:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8503:2:15",
																				"nodeType": "YulLiteral",
																				"src": "8503:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8488:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8488:3:15"
																		},
																		"nativeSrc": "8488:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8488:18:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8508:3:15",
																		"nodeType": "YulLiteral",
																		"src": "8508:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8481:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8481:6:15"
																},
																"nativeSrc": "8481:31:15",
																"nodeType": "YulFunctionCall",
																"src": "8481:31:15"
															},
															"nativeSrc": "8481:31:15",
															"nodeType": "YulExpressionStatement",
															"src": "8481:31:15"
														},
														{
															"nativeSrc": "8521:65:15",
															"nodeType": "YulAssignment",
															"src": "8521:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8558:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8558:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8570:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8570:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8581:3:15",
																				"nodeType": "YulLiteral",
																				"src": "8581:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8566:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:15"
																		},
																		"nativeSrc": "8566:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8529:28:15",
																	"nodeType": "YulIdentifier",
																	"src": "8529:28:15"
																},
																"nativeSrc": "8529:57:15",
																"nodeType": "YulFunctionCall",
																"src": "8529:57:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8521:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "8521:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8096:496:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8244:9:15",
														"nodeType": "YulTypedName",
														"src": "8244:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8255:6:15",
														"nodeType": "YulTypedName",
														"src": "8255:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8263:6:15",
														"nodeType": "YulTypedName",
														"src": "8263:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8271:6:15",
														"nodeType": "YulTypedName",
														"src": "8271:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8279:6:15",
														"nodeType": "YulTypedName",
														"src": "8279:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8290:4:15",
														"nodeType": "YulTypedName",
														"src": "8290:4:15",
														"type": ""
													}
												],
												"src": "8096:496:15"
											},
											{
												"body": {
													"nativeSrc": "8677:169:15",
													"nodeType": "YulBlock",
													"src": "8677:169:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8723:16:15",
																"nodeType": "YulBlock",
																"src": "8723:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8732:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8732:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8735:1:15",
																					"nodeType": "YulLiteral",
																					"src": "8735:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8725:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8725:6:15"
																			},
																			"nativeSrc": "8725:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8725:12:15"
																		},
																		"nativeSrc": "8725:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8725:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8698:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8698:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8694:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:15"
																		},
																		"nativeSrc": "8694:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8694:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8719:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8690:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8690:3:15"
																},
																"nativeSrc": "8690:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8690:32:15"
															},
															"nativeSrc": "8687:52:15",
															"nodeType": "YulIf",
															"src": "8687:52:15"
														},
														{
															"nativeSrc": "8748:29:15",
															"nodeType": "YulVariableDeclaration",
															"src": "8748:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8767:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "8767:9:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8761:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "8761:5:15"
																},
																"nativeSrc": "8761:16:15",
																"nodeType": "YulFunctionCall",
																"src": "8761:16:15"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8752:5:15",
																	"nodeType": "YulTypedName",
																	"src": "8752:5:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8810:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "8810:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "8786:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "8786:23:15"
																},
																"nativeSrc": "8786:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8786:30:15"
															},
															"nativeSrc": "8786:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "8786:30:15"
														},
														{
															"nativeSrc": "8825:15:15",
															"nodeType": "YulAssignment",
															"src": "8825:15:15",
															"value": {
																"name": "value",
																"nativeSrc": "8835:5:15",
																"nodeType": "YulIdentifier",
																"src": "8835:5:15"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8825:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8825:6:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "8597:249:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8643:9:15",
														"nodeType": "YulTypedName",
														"src": "8643:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8654:7:15",
														"nodeType": "YulTypedName",
														"src": "8654:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8666:6:15",
														"nodeType": "YulTypedName",
														"src": "8666:6:15",
														"type": ""
													}
												],
												"src": "8597:249:15"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x243 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xF16 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST PUSH2 0x19E PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x50B JUMP JUMPDEST PUSH2 0x14C PUSH2 0x550 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x176 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x563 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH2 0x156 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF98 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH0 PUSH2 0x2B4 DUP3 PUSH2 0x663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x2CC DUP3 DUP3 PUSH2 0x6B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x1101 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30A SWAP1 PUSH2 0x1101 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x355 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x338 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x369 DUP3 PUSH2 0x756 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B4 JUMP JUMPDEST PUSH2 0x2CC DUP3 DUP3 CALLER PUSH2 0x78E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x9 SLOAD PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E4 DUP4 DUP4 CALLER PUSH2 0x79B JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x4AC JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1177 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x57D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B4 DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x535 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x558 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x561 PUSH0 PUSH2 0x88D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x1101 JUMP JUMPDEST PUSH2 0x2CC CALLER DUP4 DUP4 PUSH2 0x8DE JUMP JUMPDEST PUSH2 0x588 DUP5 DUP5 DUP5 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x432 DUP5 DUP5 DUP5 DUP5 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x59F DUP3 PUSH2 0x756 JUMP JUMPDEST POP PUSH0 PUSH2 0x5A9 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5F2 JUMP JUMPDEST DUP1 PUSH2 0x5D1 DUP5 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5E2 SWAP3 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x62E PUSH2 0x687 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x657 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x660 DUP2 PUSH2 0x88D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x2B4 JUMPI POP PUSH2 0x2B4 DUP3 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x71C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x4FC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB86 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x7C7 JUMPI PUSH2 0x7C7 DUP2 DUP5 DUP7 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x801 JUMPI PUSH2 0x7E2 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x82F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x907 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x9B5 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9EF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9EC SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA4D JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA1C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA45 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA80 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4D DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1219 PUSH1 0x4D SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xAB3 DUP4 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD2 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xB06 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xB67 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2B4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x2B4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xC52 JUMPI PUSH0 PUSH2 0xBA9 DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBD5 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xBE8 JUMPI POP PUSH2 0xBE6 DUP2 DUP5 PUSH2 0x5F9 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xC08 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0xF02 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC50 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC8C DUP4 DUP4 DUP4 PUSH2 0xDBC JUMP JUMPDEST PUSH2 0x4FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3CF JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xD23 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xD4F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD6D JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD85 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD99 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xDAB JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2B4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE18 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDF5 JUMPI POP PUSH2 0xDF5 DUP5 DUP5 PUSH2 0x5F9 JUMP JUMPDEST DUP1 PUSH2 0xE18 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x660 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5F2 DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE66 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE7C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE85 DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5F2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF59 DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP PUSH2 0xF67 PUSH1 0x20 DUP6 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5F2 DUP3 PUSH2 0xE50 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x100F DUP6 PUSH2 0xE50 JUMP JUMPDEST SWAP4 POP PUSH2 0x101D PUSH1 0x20 DUP7 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x103F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1098 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x10AF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10EA DUP4 PUSH2 0xE50 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F8 PUSH1 0x20 DUP5 ADD PUSH2 0xE50 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1115 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1133 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2B4 JUMPI PUSH2 0x2B4 PUSH2 0x1139 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2B4 JUMPI PUSH2 0x2B4 PUSH2 0x1139 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1191 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE18 PUSH2 0x11BB DUP4 DUP7 PUSH2 0x1196 JUMP JUMPDEST DUP5 PUSH2 0x1196 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x11F3 SWAP1 DUP4 ADD DUP5 PUSH2 0xEAB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5F2 DUP2 PUSH2 0xE20 JUMP INVALID PUSH9 0x747470733A2F2F6970 PUSH7 0x732E66696C6562 PUSH2 0x7365 0x2E PUSH10 0x6F2F697066732F516D58 PUSH4 0x41317245 PUSH6 0x6F5576634D6E 0x4C MLOAD PUSH6 0x464A76334C76 SSTORE GASLIMIT PUSH6 0x58696A66426B PUSH18 0x4A6745354C434761394D41502FA264697066 PUSH20 0x582212207565FF58153E7C7BAEE26D2076128FE6 PUSH19 0xFA88556D2419C5E79891DC7EFA8A4064736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "236:2290:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2320:203;;;;;;:::i;:::-;;:::i;:::-;;;565:14:15;;558:22;540:41;;528:2;513:18;2320:203:14;;;;;;;;2134:178;;;;;;:::i;:::-;;:::i;:::-;;2365:89:3;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3323:113::-;;;;;;:::i;:::-;;:::i;1934:138:14:-;;;:::i;:::-;;;2572:25:15;;;2560:2;2545:18;1934:138:14;2426:177:15;4143:578:3;;;;;;:::i;:::-;;:::i;2379:419:7:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3530:32:15;;;3512:51;;3594:2;3579:18;;3572:34;;;;3485:18;2379:419:7;3338:274:15;4787:132:3;;;;;;:::i;:::-;;:::i;2185:118::-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2518:93:3;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;3928:153::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;2320:203:14:-;2450:4;2479:36;2503:11;2479:23;:36::i;:::-;2472:43;2320:203;-1:-1:-1;;2320:203:14:o;2134:178::-;1531:13:0;:11;:13::i;:::-;2255:49:14::1;2274:9;2285:18;2255;:49::i;:::-;2134:178:::0;;:::o;2365:89:3:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:8;3394:8:3;:35::i;1934:138:14:-;1978:7;2020:1;2005:12;;:16;;;;:::i;:::-;1998:23;;1934:138;:::o;4143:578:3:-;-1:-1:-1;;;;;4237:16:3;;4233:87;;4306:1;4276:33;;-1:-1:-1;;;4276:33:3;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:8;4562:7:3;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:3;:13;-1:-1:-1;;;;;4610:21:3;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:3;;-1:-1:-1;;;;;6639:32:15;;;4654:50:3;;;6621:51:15;6688:18;;;6681:34;;;6751:32;;6731:18;;;6724:60;6594:18;;4654:50:3;6419:371:15;4606:109:3;4223:498;4143:578;;;:::o;2379:419:7:-;2465:7;2522:26;;;:17;:26;;;;;;;;2493:55;;;;;;;;;-1:-1:-1;;;;;2493:55:7;;;;;-1:-1:-1;;;2493:55:7;;;-1:-1:-1;;;;;2493:55:7;;;;;;;;2465:7;;2559:90;;-1:-1:-1;2609:29:7;;;;;;;;;2619:19;2609:29;-1:-1:-1;;;;;2609:29:7;;;;-1:-1:-1;;;2609:29:7;;-1:-1:-1;;;;;2609:29:7;;;;;2559:90;2696:23;;;;2659:21;;3156:5;;2684:35;;-1:-1:-1;;;;;2684:35:7;:9;:35;:::i;:::-;2683:57;;;;:::i;:::-;2759:16;;;;;-1:-1:-1;2379:419:7;;-1:-1:-1;;;;2379:419:7:o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:3;;2002:87;;2075:1;2048:30;;-1:-1:-1;;;2048:30:3;;;;;;;;:::i;2002:87::-;-1:-1:-1;;;;;;2105:16:3;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:8;3836:8:3;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:3:o;3928:153::-;-1:-1:-1;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2116:213:7:-;2218:4;-1:-1:-1;;;;;;2241:41:7;;-1:-1:-1;;;2241:41:7;;:81;;;2286:36;2310:11;2286:23;:36::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;735:10:8;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;3429:507:7:-;3156:5;-1:-1:-1;;;;;3576:26:7;;;-1:-1:-1;3572:173:7;;;3679:55;;-1:-1:-1;;;3679:55:7;;-1:-1:-1;;;;;8002:39:15;;3679:55:7;;;7984:58:15;8058:18;;;8051:34;;;7957:18;;3679:55:7;7811:280:15;3572:173:7;-1:-1:-1;;;;;3758:22:7;;3754:108;;3848:1;3803:48;;-1:-1:-1;;;3803:48:7;;;;;;;;:::i;3754:108::-;-1:-1:-1;3894:35:7;;;;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;;;;;-1:-1:-1;;;3872:57:7;;;;:19;:57;3429:507::o;16138:241:3:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:3;;;;;2572:25:15;;;2545:18;;16309:31:3;2426:177:15;14418:120:3;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:3;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:3;;;9157:256;-1:-1:-1;;;;;9427:16:3;;;9423:107;;-1:-1:-1;;;;;9487:13:3;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:3;-1:-1:-1;;;;;9540:21:3;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:3:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:3:-;-1:-1:-1;;;;;15698:22:3;;15694:91;;15765:8;15743:31;;-1:-1:-1;;;15743:31:3;;;;;;;;:::i;15694:91::-;-1:-1:-1;;;;;15794:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:3;;;;;;;;;;15855:41;;540::15;;;15855::3;;513:18:15;15855:41:3;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:3;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:3;;-1:-1:-1;;;;;17072:36:3;;;;;:71;;735:10:8;;17123:4:3;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:3;;;;;;;;-1:-1:-1;;17072:71:3;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17452:2;17430:25;;-1:-1:-1;;;17430:25:3;;;;;;;;:::i;17377:293::-;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:3;;-1:-1:-1;;;17190:51:3;17186:130;;17294:2;17272:25;;-1:-1:-1;;;17272:25:3;;;;;;;;:::i;17186:130::-;17144:186;16918:782;;;;:::o;1343:219:14:-;1395:13;1421:99;;;;;;;;;;;;;;;;;;;1343:219;:::o;637:698:9:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:9;-1:-1:-1;794:41:9;-1:-1:-1;955:28:9;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:9;-1:-1:-1;;;1175:2:9;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:9;1010:282;1256:21;-1:-1:-1;1312:6:9;637:698;-1:-1:-1;;;637:698:9:o;1561:300:3:-;1663:4;-1:-1:-1;;;;;;1698:40:3;;-1:-1:-1;;;1698:40:3;;:104;;-1:-1:-1;;;;;;;1754:48:3;;-1:-1:-1;;;1754:48:3;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:10;;;1818:36:3;762:146:10;14720:662:3;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:3;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:3;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:3;:5;-1:-1:-1;;;;;15115:13:3;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;-1:-1:-1;;;15189:27:3;;;;;;;;:::i;15089:142::-;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:3;15292:5;-1:-1:-1;;;;;15283:28:3;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:3;-1:-1:-1;;;;;15346:29:3;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:3;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:3;;;;;2572:25:15;;;2545:18;;7298:31:3;2426:177:15;7248:186:3;7375:44;;-1:-1:-1;;;7375:44:3;;-1:-1:-1;;;;;3530:32:15;;7375:44:3;;;3512:51:15;3579:18;;;3572:34;;;3485:18;;7375:44:3;3338:274:15;12214:916:12;12267:7;;-1:-1:-1;;;12342:17:12;;12338:103;;-1:-1:-1;;;12379:17:12;;;-1:-1:-1;12424:2:12;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:12;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:12;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:12;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:12;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:12;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:12:o;6376:272:3:-;6479:4;-1:-1:-1;;;;;6514:21:3;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:3;:5;-1:-1:-1;;;;;6552:16:3;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6608:32:3;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:3:o;14:131:15:-;-1:-1:-1;;;;;;88:32:15;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:173::-;660:20;;-1:-1:-1;;;;;709:31:15;;699:42;;689:70;;755:1;752;745:12;689:70;592:173;;;:::o;770:366::-;837:6;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1016:2;1005:9;1001:18;988:32;-1:-1:-1;;;;;1053:5:15;1049:38;1042:5;1039:49;1029:77;;1102:1;1099;1092:12;1029:77;1125:5;1115:15;;;770:366;;;;;:::o;1141:300::-;1194:3;1232:5;1226:12;1259:6;1254:3;1247:19;1315:6;1308:4;1301:5;1297:16;1290:4;1285:3;1281:14;1275:47;1367:1;1360:4;1351:6;1346:3;1342:16;1338:27;1331:38;1430:4;1423:2;1419:7;1414:2;1406:6;1402:15;1398:29;1393:3;1389:39;1385:50;1378:57;;;1141:300;;;;:::o;1446:231::-;1595:2;1584:9;1577:21;1558:4;1615:56;1667:2;1656:9;1652:18;1644:6;1615:56;:::i;1682:226::-;1741:6;1794:2;1782:9;1773:7;1769:23;1765:32;1762:52;;;1810:1;1807;1800:12;1762:52;-1:-1:-1;1855:23:15;;1682:226;-1:-1:-1;1682:226:15:o;1913:203::-;-1:-1:-1;;;;;2077:32:15;;;;2059:51;;2047:2;2032:18;;1913:203::o;2121:300::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;2387:2;2372:18;;;;2359:32;;-1:-1:-1;;;2121:300:15:o;2608:374::-;2685:6;2693;2701;2754:2;2742:9;2733:7;2729:23;2725:32;2722:52;;;2770:1;2767;2760:12;2722:52;2793:29;2812:9;2793:29;:::i;:::-;2783:39;;2841:38;2875:2;2864:9;2860:18;2841:38;:::i;:::-;2608:374;;2831:48;;-1:-1:-1;;;2948:2:15;2933:18;;;;2920:32;;2608:374::o;2987:346::-;3055:6;3063;3116:2;3104:9;3095:7;3091:23;3087:32;3084:52;;;3132:1;3129;3122:12;3084:52;-1:-1:-1;;3177:23:15;;;3297:2;3282:18;;;3269:32;;-1:-1:-1;2987:346:15:o;3617:186::-;3676:6;3729:2;3717:9;3708:7;3704:23;3700:32;3697:52;;;3745:1;3742;3735:12;3697:52;3768:29;3787:9;3768:29;:::i;3808:347::-;3873:6;3881;3934:2;3922:9;3913:7;3909:23;3905:32;3902:52;;;3950:1;3947;3940:12;3902:52;3973:29;3992:9;3973:29;:::i;:::-;3963:39;;4052:2;4041:9;4037:18;4024:32;4099:5;4092:13;4085:21;4078:5;4075:32;4065:60;;4121:1;4118;4111:12;4160:127;4221:10;4216:3;4212:20;4209:1;4202:31;4252:4;4249:1;4242:15;4276:4;4273:1;4266:15;4292:1207;4387:6;4395;4403;4411;4464:3;4452:9;4443:7;4439:23;4435:33;4432:53;;;4481:1;4478;4471:12;4432:53;4504:29;4523:9;4504:29;:::i;:::-;4494:39;;4552:38;4586:2;4575:9;4571:18;4552:38;:::i;:::-;4542:48;-1:-1:-1;4659:2:15;4644:18;;4631:32;;-1:-1:-1;4738:2:15;4723:18;;4710:32;4765:18;4754:30;;4751:50;;;4797:1;4794;4787:12;4751:50;4820:22;;4873:4;4865:13;;4861:27;-1:-1:-1;4851:55:15;;4902:1;4899;4892:12;4851:55;4942:2;4929:16;4968:18;4960:6;4957:30;4954:56;;;4990:18;;:::i;:::-;5039:2;5033:9;5131:2;5093:17;;-1:-1:-1;;5089:31:15;;;5122:2;5085:40;5081:54;5069:67;;5166:18;5151:34;;5187:22;;;5148:62;5145:88;;;5213:18;;:::i;:::-;5249:2;5242:22;5273;;;5314:15;;;5331:2;5310:24;5307:37;-1:-1:-1;5304:57:15;;;5357:1;5354;5347:12;5304:57;5413:6;5408:2;5404;5400:11;5395:2;5387:6;5383:15;5370:50;5466:1;5461:2;5452:6;5444;5440:19;5436:28;5429:39;5487:6;5477:16;;;;;4292:1207;;;;;;;:::o;5504:260::-;5572:6;5580;5633:2;5621:9;5612:7;5608:23;5604:32;5601:52;;;5649:1;5646;5639:12;5601:52;5672:29;5691:9;5672:29;:::i;:::-;5662:39;;5720:38;5754:2;5743:9;5739:18;5720:38;:::i;:::-;5710:48;;5504:260;;;;;:::o;5769:380::-;5848:1;5844:12;;;;5891;;;5912:61;;5966:4;5958:6;5954:17;5944:27;;5912:61;6019:2;6011:6;6008:14;5988:18;5985:38;5982:161;;6065:10;6060:3;6056:20;6053:1;6046:31;6100:4;6097:1;6090:15;6128:4;6125:1;6118:15;5982:161;;5769:380;;;:::o;6154:127::-;6215:10;6210:3;6206:20;6203:1;6196:31;6246:4;6243:1;6236:15;6270:4;6267:1;6260:15;6286:128;6353:9;;;6374:11;;;6371:37;;;6388:18;;:::i;6795:168::-;6868:9;;;6899;;6916:15;;;6910:22;;6896:37;6886:71;;6937:18;;:::i;7100:217::-;7140:1;7166;7156:132;;7210:10;7205:3;7201:20;7198:1;7191:31;7245:4;7242:1;7235:15;7273:4;7270:1;7263:15;7156:132;-1:-1:-1;7302:9:15;;7100:217::o;7322:212::-;7364:3;7402:5;7396:12;7446:6;7439:4;7432:5;7428:16;7423:3;7417:36;7508:1;7472:16;;7497:13;;;-1:-1:-1;7472:16:15;;7322:212;-1:-1:-1;7322:212:15:o;7539:267::-;7718:3;7743:57;7769:30;7795:3;7787:6;7769:30;:::i;:::-;7761:6;7743:57;:::i;8096:496::-;-1:-1:-1;;;;;8327:32:15;;;8309:51;;8396:32;;8391:2;8376:18;;8369:60;8460:2;8445:18;;8438:34;;;8508:3;8503:2;8488:18;;8481:31;;;-1:-1:-1;;8529:57:15;;8566:19;;8558:6;8529:57;:::i;:::-;8521:65;8096:496;-1:-1:-1;;;;;;8096:496:15:o;8597:249::-;8666:6;8719:2;8707:9;8698:7;8694:23;8690:32;8687:52;;;8735:1;8732;8725:12;8687:52;8767:9;8761:16;8786:30;8810:5;8786:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "952600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31530",
								"balanceOf(address)": "2630",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2443",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"royaltyInfo(uint256,uint256)": "5249",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26678",
								"setRoyaltyInfo(address,uint96)": "24917",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2502",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							},
							"internal": {
								"_baseURI()": "infinite",
								"collectiveMinting(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 328,
									"name": "PUSH",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 296,
									"end": 328,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 680,
									"end": 1272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 858,
									"end": 868,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "546F74616C2045636C69707365"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "98"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "544541"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 881,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 896,
									"end": 919,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 921,
									"end": 939,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 881,
									"end": 940,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 881,
									"end": 940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 881,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 975,
									"end": 1021,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1016,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1018,
									"end": 1020,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "A"
								},
								{
									"begin": 975,
									"end": 992,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 975,
									"end": 1021,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 975,
									"end": 1021,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 975,
									"end": 1021,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1190,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1099,
									"end": 1122,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1179,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1066,
									"end": 1084,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1066,
									"end": 1190,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1066,
									"end": 1190,
									"modifierDepth": 2,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1066,
									"end": 1190,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 680,
									"end": 1272,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2134,
									"end": 2312,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 2134,
									"end": 2312,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2304,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 2274,
									"end": 2283,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2285,
									"end": 2303,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2255,
									"end": 2273,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 2255,
									"end": 2304,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2255,
									"end": 2304,
									"modifierDepth": 1,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 2255,
									"end": 2304,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2134,
									"end": 2312,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2134,
									"end": 2312,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2134,
									"end": 2312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1636,
									"end": 1895,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1636,
									"end": 1895,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1754,
									"end": 1763,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1773,
									"end": 1784,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1769,
									"end": 1770,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1769,
									"end": 1784,
									"modifierDepth": 1,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1836,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1806,
									"end": 1821,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1821,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1806,
									"end": 1821,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1824,
									"end": 1838,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"modifierDepth": 1,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1824,
									"end": 1838,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1824,
									"end": 1838,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1806,
									"end": 1838,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1853,
									"end": 1876,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1806,
									"end": 1838,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1853,
									"end": 1862,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1853,
									"end": 1876,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1853,
									"end": 1876,
									"modifierDepth": 1,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1853,
									"end": 1876,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1786,
									"end": 1789,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1786,
									"end": 1789,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1749,
									"end": 1888,
									"modifierDepth": 1,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1636,
									"end": 1895,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1636,
									"end": 1895,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1636,
									"end": 1895,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 15591,
									"end": 15903,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 15591,
									"end": 15903,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15698,
									"end": 15720,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 15698,
									"end": 15720,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15694,
									"end": 15785,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 15694,
									"end": 15785,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B611743"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 15743,
									"end": 15774,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 15694,
									"end": 15785,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 15694,
									"end": 15785,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15812,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15819,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15829,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15794,
									"end": 15840,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3885,
									"end": 3926,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3885,
									"end": 3926,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3885,
									"end": 3926,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "PUSH",
									"source": 3,
									"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3858,
									"end": 3876,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15855,
									"end": 15896,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 15591,
									"end": 15903,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15591,
									"end": 15903,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15591,
									"end": 15903,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15591,
									"end": 15903,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "118CDAA7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3936,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 3429,
									"end": 3936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3156,
									"end": 3161,
									"name": "PUSH",
									"source": 7,
									"value": "2710"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6F483D09"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4128,
									"end": 4159,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4128,
									"end": 4159,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4110,
									"end": 4160,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4176,
									"end": 4194,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 4176,
									"end": 4194,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4176,
									"end": 4194,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4169,
									"end": 4203,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4169,
									"end": 4203,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4169,
									"end": 4203,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4083,
									"end": 4101,
									"name": "PUSH",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4083,
									"end": 4101,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3937,
									"end": 4209,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3758,
									"end": 3780,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3758,
									"end": 3780,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5B6CC805"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10633,
									"end": 10733,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 10633,
									"end": 10733,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 10710,
									"end": 10712,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10714,
									"end": 10721,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 10700,
									"end": 10726,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 10700,
									"end": 10726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 10954,
									"end": 11136,
									"name": "tag",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 10954,
									"end": 11136,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 11048,
									"end": 11066,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 11054,
									"end": 11056,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 11058,
									"end": 11065,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 11048,
									"end": 11053,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 11048,
									"end": 11066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 11048,
									"end": 11066,
									"name": "tag",
									"source": 3,
									"value": "70"
								},
								{
									"begin": 11048,
									"end": 11066,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 11076,
									"end": 11129,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 11107,
									"end": 11108,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 11111,
									"end": 11113,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 11115,
									"end": 11122,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 11124,
									"end": 11128,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 11076,
									"end": 11098,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 11076,
									"end": 11129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 9955,
									"end": 10282,
									"name": "tag",
									"source": 3,
									"value": "71"
								},
								{
									"begin": 9955,
									"end": 10282,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10022,
									"end": 10038,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10022,
									"end": 10038,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 10018,
									"end": 10105,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 10018,
									"end": 10105,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "32505749"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 10091,
									"end": 10092,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10061,
									"end": 10094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 10018,
									"end": 10105,
									"name": "tag",
									"source": 3,
									"value": "75"
								},
								{
									"begin": 10018,
									"end": 10105,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 10114,
									"end": 10135,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10138,
									"end": 10170,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 10146,
									"end": 10148,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 10150,
									"end": 10157,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 10114,
									"end": 10135,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 10138,
									"end": 10145,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 10138,
									"end": 10170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 10138,
									"end": 10170,
									"name": "tag",
									"source": 3,
									"value": "77"
								},
								{
									"begin": 10138,
									"end": 10170,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 10114,
									"end": 10170,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10184,
									"end": 10211,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10184,
									"end": 10211,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 10184,
									"end": 10211,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 10180,
									"end": 10276,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 10180,
									"end": 10276,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "39E35637"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 10262,
									"end": 10263,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "tag",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17034,
									"end": 17048,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 17034,
									"end": 17048,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17034,
									"end": 17048,
									"name": "EXTCODESIZE",
									"source": 3
								},
								{
									"begin": 17034,
									"end": 17052,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 17030,
									"end": 17694,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 17030,
									"end": 17694,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A85BD01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17072,
									"end": 17108,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17108,
									"name": "PUSH",
									"source": 3,
									"value": "150B7A02"
								},
								{
									"begin": 17072,
									"end": 17108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 17123,
									"end": 17127,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 17123,
									"end": 17127,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17129,
									"end": 17136,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 17129,
									"end": 17136,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17138,
									"end": 17142,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 17138,
									"end": 17142,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "85"
								},
								{
									"begin": 17072,
									"end": 17143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "tag",
									"source": 3,
									"value": "84"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "GAS",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "CALL",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "88"
								},
								{
									"begin": 17072,
									"end": 17143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "tag",
									"source": 3,
									"value": "87"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "tag",
									"source": 3,
									"value": "86"
								},
								{
									"begin": 17072,
									"end": 17143,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "RETURNDATASIZE",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "RETURNDATACOPY",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "tag",
									"source": 3,
									"value": "94"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "PUSH",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "tag",
									"source": 3,
									"value": "93"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17381,
									"end": 17387,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17381,
									"end": 17394,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 17398,
									"end": 17399,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 17381,
									"end": 17399,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 17377,
									"end": 17670,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 17377,
									"end": 17670,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "32505749"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 17430,
									"end": 17455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 17377,
									"end": 17670,
									"name": "tag",
									"source": 3,
									"value": "95"
								},
								{
									"begin": 17377,
									"end": 17670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17622,
									"end": 17628,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 17616,
									"end": 17629,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 17607,
									"end": 17613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17603,
									"end": 17605,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 17599,
									"end": 17614,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 17592,
									"end": 17630,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "tag",
									"source": 3,
									"value": "89"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 17190,
									"end": 17241,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17190,
									"end": 17241,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A85BD01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17190,
									"end": 17241,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 17186,
									"end": 17316,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 17186,
									"end": 17316,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "32505749"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 17272,
									"end": 17297,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 17186,
									"end": 17316,
									"name": "tag",
									"source": 3,
									"value": "99"
								},
								{
									"begin": 17186,
									"end": 17316,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 17144,
									"end": 17330,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "tag",
									"source": 3,
									"value": "98"
								},
								{
									"begin": 17068,
									"end": 17684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16918,
									"end": 17700,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 16918,
									"end": 17700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 8838,
									"end": 9633,
									"name": "tag",
									"source": 3,
									"value": "78"
								},
								{
									"begin": 8838,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 8924,
									"end": 8931,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5806,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9035,
									"end": 9053,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 9035,
									"end": 9053,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9035,
									"end": 9053,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 9031,
									"end": 9117,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 9031,
									"end": 9117,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 9069,
									"end": 9106,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 9086,
									"end": 9090,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9092,
									"end": 9096,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 9098,
									"end": 9105,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 9069,
									"end": 9085,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 9069,
									"end": 9106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 9069,
									"end": 9106,
									"name": "tag",
									"source": 3,
									"value": "105"
								},
								{
									"begin": 9069,
									"end": 9106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9161,
									"end": 9179,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9161,
									"end": 9179,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9161,
									"end": 9179,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 9157,
									"end": 9413,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "107"
								},
								{
									"begin": 9157,
									"end": 9413,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 9277,
									"end": 9325,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "108"
								},
								{
									"begin": 9294,
									"end": 9295,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9298,
									"end": 9305,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 9294,
									"end": 9295,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9294,
									"end": 9295,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9277,
									"end": 9285,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 9277,
									"end": 9325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 9277,
									"end": 9325,
									"name": "tag",
									"source": 3,
									"value": "108"
								},
								{
									"begin": 9277,
									"end": 9325,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9377,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9383,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9388,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9388,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9368,
									"end": 9388,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9368,
									"end": 9388,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 9157,
									"end": 9413,
									"name": "tag",
									"source": 3,
									"value": "107"
								},
								{
									"begin": 9157,
									"end": 9413,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9427,
									"end": 9443,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 9427,
									"end": 9443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9427,
									"end": 9443,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 9423,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 9423,
									"end": 9530,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9496,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9500,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9505,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9505,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 9504,
									"end": 9505,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 9487,
									"end": 9505,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9505,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9487,
									"end": 9505,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 9423,
									"end": 9530,
									"name": "tag",
									"source": 3,
									"value": "110"
								},
								{
									"begin": 9423,
									"end": 9530,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9547,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "DUP10",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9561,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 9540,
									"end": 9556,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 9577,
									"end": 9604,
									"name": "LOG4",
									"source": 3
								},
								{
									"begin": 9622,
									"end": 9626,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 8838,
									"end": 9633,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8838,
									"end": 9633,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7082,
									"end": 7450,
									"name": "tag",
									"source": 3,
									"value": "106"
								},
								{
									"begin": 7082,
									"end": 7450,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7194,
									"end": 7232,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 7208,
									"end": 7213,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7215,
									"end": 7222,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7224,
									"end": 7231,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7194,
									"end": 7207,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 7194,
									"end": 7232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7194,
									"end": 7232,
									"name": "tag",
									"source": 3,
									"value": "113"
								},
								{
									"begin": 7194,
									"end": 7232,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7189,
									"end": 7444,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7189,
									"end": 7444,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7252,
									"end": 7271,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7252,
									"end": 7271,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7248,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 7248,
									"end": 7434,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7E273289"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5319,
									"end": 5337,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 5319,
									"end": 5337,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7298,
									"end": 7329,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 5200,
									"end": 5377,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7248,
									"end": 7434,
									"name": "tag",
									"source": 3,
									"value": "116"
								},
								{
									"begin": 7248,
									"end": 7434,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "177E802F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5574,
									"end": 5606,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5574,
									"end": 5606,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5556,
									"end": 5607,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5623,
									"end": 5641,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 5623,
									"end": 5641,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5623,
									"end": 5641,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5616,
									"end": 5650,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5616,
									"end": 5650,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5616,
									"end": 5650,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5529,
									"end": 5547,
									"name": "PUSH",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 5529,
									"end": 5547,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 7375,
									"end": 7419,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 5382,
									"end": 5656,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 14720,
									"end": 15382,
									"name": "tag",
									"source": 3,
									"value": "109"
								},
								{
									"begin": 14720,
									"end": 15382,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 14880,
									"end": 14889,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 14880,
									"end": 14911,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 14880,
									"end": 14911,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 14880,
									"end": 14911,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14893,
									"end": 14911,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 14893,
									"end": 14911,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 14893,
									"end": 14911,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 14893,
									"end": 14911,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 14880,
									"end": 14911,
									"name": "tag",
									"source": 3,
									"value": "123"
								},
								{
									"begin": 14880,
									"end": 14911,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 14876,
									"end": 15336,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 14876,
									"end": 15336,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "124"
								},
								{
									"begin": 14876,
									"end": 15336,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 14927,
									"end": 14940,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 14943,
									"end": 14965,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 14957,
									"end": 14964,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 14943,
									"end": 14956,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "126"
								},
								{
									"begin": 14943,
									"end": 14965,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14943,
									"end": 14965,
									"name": "tag",
									"source": 3,
									"value": "125"
								},
								{
									"begin": 14943,
									"end": 14965,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 14927,
									"end": 14965,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15111,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15128,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "127"
								},
								{
									"begin": 15093,
									"end": 15128,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15128,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 15124,
									"end": 15128,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15115,
									"end": 15128,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15115,
									"end": 15120,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15115,
									"end": 15128,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15115,
									"end": 15128,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 15115,
									"end": 15128,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15128,
									"name": "tag",
									"source": 3,
									"value": "127"
								},
								{
									"begin": 15093,
									"end": 15128,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "128"
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4016,
									"end": 4020,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4057,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15132,
									"end": 15162,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "tag",
									"source": 3,
									"value": "128"
								},
								{
									"begin": 15093,
									"end": 15162,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 15089,
									"end": 15231,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15089,
									"end": 15231,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 15089,
									"end": 15231,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9FBF51F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3464,
									"end": 3496,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3446,
									"end": 3497,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3419,
									"end": 3437,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 15189,
									"end": 15216,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 3300,
									"end": 3503,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 15089,
									"end": 15231,
									"name": "tag",
									"source": 3,
									"value": "131"
								},
								{
									"begin": 15089,
									"end": 15231,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 15249,
									"end": 15258,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15245,
									"end": 15326,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 15245,
									"end": 15326,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 15245,
									"end": 15326,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 15303,
									"end": 15310,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 15299,
									"end": 15301,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15292,
									"end": 15297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "PUSH",
									"source": 3,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15283,
									"end": 15311,
									"name": "LOG4",
									"source": 3
								},
								{
									"begin": 15245,
									"end": 15326,
									"name": "tag",
									"source": 3,
									"value": "133"
								},
								{
									"begin": 15245,
									"end": 15326,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 14913,
									"end": 15336,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 14876,
									"end": 15336,
									"name": "tag",
									"source": 3,
									"value": "124"
								},
								{
									"begin": 14876,
									"end": 15336,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15361,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15370,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 15346,
									"end": 15375,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 14720,
									"end": 15382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6648,
									"name": "tag",
									"source": 3,
									"value": "114"
								},
								{
									"begin": 6376,
									"end": 6648,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6479,
									"end": 6483,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6535,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 6514,
									"end": 6641,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6514,
									"end": 6641,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6561,
									"end": 6568,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6568,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6557,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6568,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6568,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 6552,
									"end": 6604,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4016,
									"end": 4020,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4057,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4064,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 4039,
									"end": 4074,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6572,
									"end": 6604,
									"name": "tag",
									"source": 3,
									"value": "137"
								},
								{
									"begin": 6572,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6640,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 6552,
									"end": 6640,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6008,
									"end": 6015,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6049,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6608,
									"end": 6640,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6640,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6640,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6034,
									"end": 6058,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6608,
									"end": 6640,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6640,
									"name": "tag",
									"source": 3,
									"value": "138"
								},
								{
									"begin": 6552,
									"end": 6640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6495,
									"end": 6641,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6648,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6376,
									"end": 6648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 16138,
									"end": 16379,
									"name": "tag",
									"source": 3,
									"value": "126"
								},
								{
									"begin": 16138,
									"end": 16379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16201,
									"end": 16208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5806,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5799,
									"end": 5815,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 16263,
									"end": 16351,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 16263,
									"end": 16351,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7E273289"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5346,
									"end": 5371,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5319,
									"end": 5337,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 5319,
									"end": 5337,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 16309,
									"end": 16340,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 5200,
									"end": 5377,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 16263,
									"end": 16351,
									"name": "tag",
									"source": 3,
									"value": "143"
								},
								{
									"begin": 16263,
									"end": 16351,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 16367,
									"end": 16372,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 16138,
									"end": 16379,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 16138,
									"end": 16379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 15,
									"value": "155"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 654,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 283,
									"end": 289,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 299,
									"end": 305,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 354,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 340,
									"end": 349,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 331,
									"end": 338,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 327,
									"end": 350,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 323,
									"end": 355,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 320,
									"end": 372,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 320,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "157"
								},
								{
									"begin": 320,
									"end": 372,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 366,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 358,
									"end": 370,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 320,
									"end": 372,
									"name": "tag",
									"source": 15,
									"value": "157"
								},
								{
									"begin": 320,
									"end": 372,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 394,
									"end": 410,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 394,
									"end": 410,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 439,
									"end": 469,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 439,
									"end": 469,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 429,
									"end": 470,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 429,
									"end": 470,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 419,
									"end": 488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "158"
								},
								{
									"begin": 419,
									"end": 488,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 484,
									"end": 485,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 482,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 474,
									"end": 486,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 419,
									"end": 488,
									"name": "tag",
									"source": 15,
									"value": "158"
								},
								{
									"begin": 419,
									"end": 488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 507,
									"end": 512,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 531,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 576,
									"end": 578,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 561,
									"end": 579,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 561,
									"end": 579,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 531,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 531,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 531,
									"end": 580,
									"name": "tag",
									"source": 15,
									"value": "159"
								},
								{
									"begin": 531,
									"end": 580,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 580,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 521,
									"end": 580,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 599,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 644,
									"end": 646,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 633,
									"end": 642,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 629,
									"end": 647,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 599,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "147"
								},
								{
									"begin": 599,
									"end": 648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 599,
									"end": 648,
									"name": "tag",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 599,
									"end": 648,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 589,
									"end": 648,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 589,
									"end": 648,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 196,
									"end": 654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 659,
									"end": 786,
									"name": "tag",
									"source": 15,
									"value": "148"
								},
								{
									"begin": 659,
									"end": 786,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 720,
									"end": 730,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 715,
									"end": 718,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 711,
									"end": 731,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 708,
									"end": 709,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 732,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 751,
									"end": 755,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 748,
									"end": 749,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 741,
									"end": 756,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 772,
									"end": 773,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 765,
									"end": 780,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 791,
									"end": 1171,
									"name": "tag",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 791,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 870,
									"end": 871,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 866,
									"end": 878,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 866,
									"end": 878,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 866,
									"end": 878,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 866,
									"end": 878,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 913,
									"end": 925,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 913,
									"end": 925,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 913,
									"end": 925,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 934,
									"end": 995,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "163"
								},
								{
									"begin": 934,
									"end": 995,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 988,
									"end": 992,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 976,
									"end": 993,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 966,
									"end": 993,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 966,
									"end": 993,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 934,
									"end": 995,
									"name": "tag",
									"source": 15,
									"value": "163"
								},
								{
									"begin": 934,
									"end": 995,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1033,
									"end": 1039,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1044,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1010,
									"end": 1028,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1007,
									"end": 1045,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1004,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 1004,
									"end": 1165,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1087,
									"end": 1097,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1075,
									"end": 1076,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1068,
									"end": 1099,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1122,
									"end": 1126,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1119,
									"end": 1120,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1112,
									"end": 1127,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1150,
									"end": 1154,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1147,
									"end": 1148,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1140,
									"end": 1155,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1004,
									"end": 1165,
									"name": "tag",
									"source": 15,
									"value": "164"
								},
								{
									"begin": 1004,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1004,
									"end": 1165,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 791,
									"end": 1171,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 791,
									"end": 1171,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 791,
									"end": 1171,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 791,
									"end": 1171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1302,
									"end": 1820,
									"name": "tag",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 1302,
									"end": 1820,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1404,
									"end": 1406,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1399,
									"end": 1402,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1396,
									"end": 1407,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1393,
									"end": 1814,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1393,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 1393,
									"end": 1814,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1440,
									"end": 1445,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1437,
									"end": 1438,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1430,
									"end": 1446,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1484,
									"end": 1488,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1481,
									"end": 1482,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1489,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1556,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1542,
									"end": 1552,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1538,
									"end": 1557,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1535,
									"end": 1536,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1531,
									"end": 1558,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1525,
									"end": 1529,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1521,
									"end": 1559,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1590,
									"end": 1594,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1578,
									"end": 1588,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1575,
									"end": 1595,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "tag",
									"source": 15,
									"value": "168"
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1663,
									"end": 1666,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1659,
									"end": 1671,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1652,
									"end": 1672,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1646,
									"end": 1650,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1642,
									"end": 1673,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1632,
									"end": 1673,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1632,
									"end": 1673,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "tag",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1741,
									"end": 1743,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1734,
									"end": 1739,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1731,
									"end": 1744,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1786,
									"end": 1802,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1786,
									"end": 1802,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 1767,
									"end": 1768,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1756,
									"end": 1769,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "169"
								},
								{
									"begin": 1723,
									"end": 1804,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1996,
									"end": 3295,
									"name": "tag",
									"source": 15,
									"value": "9"
								},
								{
									"begin": 1996,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2116,
									"end": 2126,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2116,
									"end": 2126,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2138,
									"end": 2168,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2138,
									"end": 2168,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2135,
									"end": 2191,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2135,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 2135,
									"end": 2191,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 2171,
									"end": 2189,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "148"
								},
								{
									"begin": 2171,
									"end": 2189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2171,
									"end": 2189,
									"name": "tag",
									"source": 15,
									"value": "175"
								},
								{
									"begin": 2171,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2200,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2250,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 2282,
									"end": 2286,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2276,
									"end": 2287,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 2250,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 2250,
									"end": 2288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2250,
									"end": 2288,
									"name": "tag",
									"source": 15,
									"value": "177"
								},
								{
									"begin": 2250,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2244,
									"end": 2248,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2200,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "151"
								},
								{
									"begin": 2200,
									"end": 2297,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2200,
									"end": 2297,
									"name": "tag",
									"source": 15,
									"value": "176"
								},
								{
									"begin": 2200,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2377,
									"end": 2379,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2366,
									"end": 2380,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2366,
									"end": 2380,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 2394,
									"end": 2395,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3082,
									"end": 3083,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3099,
									"end": 3105,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3096,
									"end": 3185,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3096,
									"end": 3185,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 3096,
									"end": 3185,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3151,
									"end": 3170,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3151,
									"end": 3170,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3151,
									"end": 3170,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3145,
									"end": 3171,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 3096,
									"end": 3185,
									"name": "tag",
									"source": 15,
									"value": "180"
								},
								{
									"begin": 3096,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1949,
									"end": 1960,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1949,
									"end": 1960,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1949,
									"end": 1960,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1945,
									"end": 1969,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 1941,
									"end": 1970,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1931,
									"end": 1971,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1977,
									"end": 1978,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1973,
									"end": 1984,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 1928,
									"end": 1985,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3279,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3279,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2359,
									"end": 3289,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 2359,
									"end": 3289,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "tag",
									"source": 15,
									"value": "179"
								},
								{
									"begin": 2389,
									"end": 3038,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1249,
									"end": 1250,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1242,
									"end": 1256,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1242,
									"end": 1256,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1242,
									"end": 1256,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1286,
									"end": 1290,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1273,
									"end": 1291,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1273,
									"end": 1291,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 2445,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2445,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2445,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "tag",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2557,
									"end": 2564,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2554,
									"end": 2555,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2551,
									"end": 2565,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "185"
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2639,
									"end": 2658,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2639,
									"end": 2658,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2639,
									"end": 2658,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2633,
									"end": 2659,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2618,
									"end": 2660,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2618,
									"end": 2660,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2746,
									"end": 2750,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2731,
									"end": 2751,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2731,
									"end": 2751,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 2731,
									"end": 2751,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2731,
									"end": 2751,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 2699,
									"end": 2700,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2701,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2573,
									"end": 2585,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "183"
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "tag",
									"source": 15,
									"value": "185"
								},
								{
									"begin": 2543,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2547,
									"end": 2550,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2793,
									"end": 2799,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2784,
									"end": 2791,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2781,
									"end": 2800,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2778,
									"end": 2979,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 2778,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 2778,
									"end": 2979,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2854,
									"end": 2873,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2854,
									"end": 2873,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 2854,
									"end": 2873,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2848,
									"end": 2874,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2937,
									"end": 2938,
									"name": "PUSH",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 2933,
									"end": 2947,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 2933,
									"end": 2947,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2933,
									"end": 2947,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2949,
									"end": 2952,
									"name": "PUSH",
									"source": 15,
									"value": "F8"
								},
								{
									"begin": 2929,
									"end": 2953,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2925,
									"end": 2962,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 2921,
									"end": 2963,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 2906,
									"end": 2964,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2891,
									"end": 2965,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2891,
									"end": 2965,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 2778,
									"end": 2979,
									"name": "tag",
									"source": 15,
									"value": "186"
								},
								{
									"begin": 2778,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3025,
									"end": 3026,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3009,
									"end": 3023,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3009,
									"end": 3023,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3009,
									"end": 3023,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2992,
									"end": 3028,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2992,
									"end": 3028,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1996,
									"end": 3295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3508,
									"end": 3740,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3508,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3547,
									"end": 3550,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3568,
									"end": 3585,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3568,
									"end": 3585,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3568,
									"end": 3585,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3565,
									"end": 3705,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "189"
								},
								{
									"begin": 3565,
									"end": 3705,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3627,
									"end": 3637,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B71"
								},
								{
									"begin": 3622,
									"end": 3625,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 3618,
									"end": 3638,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 3615,
									"end": 3616,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3608,
									"end": 3639,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3662,
									"end": 3666,
									"name": "PUSH",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 3659,
									"end": 3660,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 3652,
									"end": 3667,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3690,
									"end": 3694,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 3687,
									"end": 3688,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3680,
									"end": 3695,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 3565,
									"end": 3705,
									"name": "tag",
									"source": 15,
									"value": "189"
								},
								{
									"begin": 3565,
									"end": 3705,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3732,
									"end": 3733,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 3721,
									"end": 3734,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3721,
									"end": 3734,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3508,
									"end": 3740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4470,
									"end": 4471,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4465,
									"end": 4468,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4461,
									"end": 4472,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4457,
									"end": 4476,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4449,
									"end": 4455,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4445,
									"end": 4477,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4434,
									"end": 4443,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4427,
									"end": 4478,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4543,
									"end": 4544,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4539,
									"end": 4540,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4534,
									"end": 4537,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4530,
									"end": 4541,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 4526,
									"end": 4545,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4518,
									"end": 4524,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4514,
									"end": 4546,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4509,
									"end": 4511,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4498,
									"end": 4507,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4494,
									"end": 4512,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4487,
									"end": 4547,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4583,
									"end": 4589,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4578,
									"end": 4580,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 4567,
									"end": 4576,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4563,
									"end": 4581,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4556,
									"end": 4590,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4626,
									"end": 4629,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4621,
									"end": 4623,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 4610,
									"end": 4619,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4606,
									"end": 4624,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4599,
									"end": 4630,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4408,
									"end": 4412,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4659,
									"end": 4665,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4653,
									"end": 4666,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 4703,
									"end": 4709,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4697,
									"end": 4700,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4686,
									"end": 4695,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4682,
									"end": 4701,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4675,
									"end": 4710,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4763,
									"end": 4769,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 4758,
									"end": 4760,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4750,
									"end": 4756,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4746,
									"end": 4761,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4740,
									"end": 4743,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4729,
									"end": 4738,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4725,
									"end": 4744,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4719,
									"end": 4770,
									"name": "MCOPY",
									"source": 15
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4814,
									"end": 4817,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4805,
									"end": 4811,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4794,
									"end": 4803,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4790,
									"end": 4812,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4786,
									"end": 4818,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4779,
									"end": 4822,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4890,
									"end": 4893,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4883,
									"end": 4885,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4879,
									"end": 4886,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 4874,
									"end": 4876,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4866,
									"end": 4872,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4862,
									"end": 4877,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4858,
									"end": 4887,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 4847,
									"end": 4856,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4843,
									"end": 4888,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4839,
									"end": 4894,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4831,
									"end": 4894,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4831,
									"end": 4894,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4831,
									"end": 4894,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4214,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4905,
									"end": 5195,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 4905,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4974,
									"end": 4980,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5029,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5015,
									"end": 5024,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5006,
									"end": 5013,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5002,
									"end": 5025,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4998,
									"end": 5030,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 4995,
									"end": 5047,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4995,
									"end": 5047,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "194"
								},
								{
									"begin": 4995,
									"end": 5047,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5043,
									"end": 5044,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5041,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5033,
									"end": 5045,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 4995,
									"end": 5047,
									"name": "tag",
									"source": 15,
									"value": "194"
								},
								{
									"begin": 4995,
									"end": 5047,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5085,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5069,
									"end": 5085,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5114,
									"end": 5146,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5114,
									"end": 5146,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5104,
									"end": 5147,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5104,
									"end": 5147,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5094,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 5094,
									"end": 5165,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5162,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5158,
									"end": 5159,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5151,
									"end": 5163,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 5094,
									"end": 5165,
									"name": "tag",
									"source": 15,
									"value": "195"
								},
								{
									"begin": 5094,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5184,
									"end": 5189,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 4905,
									"end": 5195,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4905,
									"end": 5195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5382,
									"end": 5656,
									"name": "tag",
									"source": 15,
									"value": "153"
								},
								{
									"begin": 5382,
									"end": 5656,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 2526,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207565ff58153e7c7baee26d2076128fe672fa88556d2419c5e79891dc7efa8a4064736f6c634300081a0033",
									".code": [
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "2FA7C47"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "2A55205A"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 236,
											"end": 2526,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 2320,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 2320,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2134,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2134,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1934,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3338,
											"end": 3612,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2454,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 2503,
											"end": 2514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 2479,
											"end": 2515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 2479,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2472,
											"end": 2515,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2523,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2255,
											"end": 2304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 2274,
											"end": 2283,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2285,
											"end": 2303,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 2255,
											"end": 2304,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 2255,
											"end": 2304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2134,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1978,
											"end": 1985,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2021,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "PUSH",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 2005,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2021,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 2072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6639,
											"end": 6671,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6639,
											"end": 6671,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6639,
											"end": 6671,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 6672,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6681,
											"end": 6715,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6681,
											"end": 6715,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6681,
											"end": 6715,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6751,
											"end": 6783,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6751,
											"end": 6783,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6724,
											"end": 6784,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 6594,
											"end": 6612,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6419,
											"end": 6790,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2539,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2619,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2684,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 2683,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2329,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2116,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2310,
											"end": 2321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2286,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3936,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3429,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F483D09"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8041,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8002,
											"end": 8041,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8042,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8085,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8085,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8051,
											"end": 8085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 7957,
											"end": 7975,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7811,
											"end": 8091,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3780,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B6CC805"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3803,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1343,
											"end": 1562,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 1343,
											"end": 1562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1395,
											"end": 1408,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "4D"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH data",
											"source": 14,
											"value": "528DD67E901864C021E91BC02682CCAF0F079AA4E76798FE2DA7DA838DB9C5CF"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "PUSH",
											"source": 14,
											"value": "4D"
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "CODECOPY",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1421,
											"end": 1520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "PUSH",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3338,
											"end": 3612,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 765,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 592,
											"end": 765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 660,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 709,
											"end": 740,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 699,
											"end": 741,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 699,
											"end": 741,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 689,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 689,
											"end": 759,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 592,
											"end": 765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 592,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 837,
											"end": 843,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 895,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 873,
											"end": 896,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 869,
											"end": 901,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 866,
											"end": 918,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 866,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 866,
											"end": 918,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 912,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 904,
											"end": 916,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 866,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 866,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 956,
											"end": 965,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 937,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 937,
											"end": 966,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 927,
											"end": 966,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 927,
											"end": 966,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1001,
											"end": 1019,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1049,
											"end": 1087,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1039,
											"end": 1088,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 770,
											"end": 1136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1237,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1254,
											"end": 1257,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1306,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1281,
											"end": 1295,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1364,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1331,
											"end": 1369,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1393,
											"end": 1396,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1389,
											"end": 1428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1141,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1677,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 1446,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1597,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1577,
											"end": 1598,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1558,
											"end": 1562,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 1615,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1796,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1765,
											"end": 1797,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 2116,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1913,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2110,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2059,
											"end": 2110,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2047,
											"end": 2049,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1913,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2121,
											"end": 2421,
											"name": "tag",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 2121,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2289,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 15,
											"value": "344"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "tag",
											"source": 15,
											"value": "54"
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 2742,
											"end": 2751,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2725,
											"end": 2757,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "tag",
											"source": 15,
											"value": "347"
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2793,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "tag",
											"source": 15,
											"value": "348"
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 2875,
											"end": 2877,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2860,
											"end": 2878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2841,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2879,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2831,
											"end": 2879,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2608,
											"end": 2982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2987,
											"end": 3333,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 2987,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3069,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3113,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3091,
											"end": 3114,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3132,
											"end": 3133,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3122,
											"end": 3134,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "tag",
											"source": 15,
											"value": "351"
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 3803,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 3617,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3676,
											"end": 3682,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3731,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3708,
											"end": 3715,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3700,
											"end": 3732,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3697,
											"end": 3749,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3697,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 3697,
											"end": 3749,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3743,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3735,
											"end": 3747,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3697,
											"end": 3749,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 3697,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3768,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3768,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3808,
											"end": 4155,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3808,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3934,
											"end": 3936,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 3932,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3905,
											"end": 3937,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3902,
											"end": 3954,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3902,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 3902,
											"end": 3954,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3940,
											"end": 3952,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3902,
											"end": 3954,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 3902,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 3992,
											"end": 4001,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3973,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 3973,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3963,
											"end": 4002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4024,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4099,
											"end": 4104,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4092,
											"end": 4105,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4085,
											"end": 4106,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4075,
											"end": 4107,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 4065,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 4065,
											"end": 4125,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4111,
											"end": 4123,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4160,
											"end": 4287,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 4160,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4221,
											"end": 4231,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 4209,
											"end": 4210,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4233,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4252,
											"end": 4256,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4242,
											"end": 4257,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4387,
											"end": 4393,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4417,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4464,
											"end": 4467,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4443,
											"end": 4450,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4435,
											"end": 4468,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4479,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4471,
											"end": 4483,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4504,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4504,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4504,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4504,
											"end": 4533,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 4504,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4494,
											"end": 4533,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4494,
											"end": 4533,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4552,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 4586,
											"end": 4588,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4575,
											"end": 4584,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4552,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 4552,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4552,
											"end": 4590,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 4552,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4542,
											"end": 4590,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4659,
											"end": 4661,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4644,
											"end": 4662,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4663,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4631,
											"end": 4663,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4738,
											"end": 4740,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4710,
											"end": 4742,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4801,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 4751,
											"end": 4801,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4795,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4799,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4751,
											"end": 4801,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 4751,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4820,
											"end": 4842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4865,
											"end": 4878,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4865,
											"end": 4878,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4861,
											"end": 4888,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4851,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 4851,
											"end": 4906,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4900,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4851,
											"end": 4906,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 4851,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4929,
											"end": 4945,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4968,
											"end": 4986,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4957,
											"end": 4987,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4954,
											"end": 5010,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4954,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4954,
											"end": 5010,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 4990,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5033,
											"end": 5042,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5131,
											"end": 5133,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5093,
											"end": 5110,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5093,
											"end": 5110,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5089,
											"end": 5120,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH",
											"source": 15,
											"value": "3F"
										},
										{
											"begin": 5085,
											"end": 5125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5081,
											"end": 5135,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5148,
											"end": 5210,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5145,
											"end": 5233,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5145,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5145,
											"end": 5233,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 5213,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5213,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5249,
											"end": 5251,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 5264,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5273,
											"end": 5295,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5273,
											"end": 5295,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5273,
											"end": 5295,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5334,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5307,
											"end": 5344,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5361,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5304,
											"end": 5361,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 5304,
											"end": 5361,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5357,
											"end": 5358,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5355,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5347,
											"end": 5359,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5304,
											"end": 5361,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 5304,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5413,
											"end": 5419,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5410,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5400,
											"end": 5411,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5395,
											"end": 5397,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5420,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5458,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5444,
											"end": 5450,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5459,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5436,
											"end": 5464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5429,
											"end": 5468,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5477,
											"end": 5493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4292,
											"end": 5499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5572,
											"end": 5578,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5630,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5612,
											"end": 5619,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5608,
											"end": 5631,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5604,
											"end": 5636,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5601,
											"end": 5653,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5601,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 5601,
											"end": 5653,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5649,
											"end": 5650,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5639,
											"end": 5651,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5601,
											"end": 5653,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 5601,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5672,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5672,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5672,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5672,
											"end": 5701,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 5672,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5662,
											"end": 5701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5662,
											"end": 5701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5720,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5754,
											"end": 5756,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5720,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 5720,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5720,
											"end": 5758,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5720,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5758,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5710,
											"end": 5758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5504,
											"end": 5764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 6149,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 5769,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5844,
											"end": 5856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5844,
											"end": 5856,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5844,
											"end": 5856,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 5844,
											"end": 5856,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5903,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5903,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5891,
											"end": 5903,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5973,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 5912,
											"end": 5973,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5966,
											"end": 5970,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5944,
											"end": 5971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5973,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 5912,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6008,
											"end": 6022,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5985,
											"end": 6023,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5982,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 5982,
											"end": 6143,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6065,
											"end": 6075,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6060,
											"end": 6063,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6056,
											"end": 6076,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6053,
											"end": 6054,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6077,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6100,
											"end": 6104,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6090,
											"end": 6105,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6125,
											"end": 6126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6118,
											"end": 6133,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5982,
											"end": 6143,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 5982,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5982,
											"end": 6143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 6149,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 6149,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 6149,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5769,
											"end": 6149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6154,
											"end": 6281,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6154,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6225,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 6210,
											"end": 6213,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6206,
											"end": 6226,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6227,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6246,
											"end": 6250,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 6243,
											"end": 6244,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 6236,
											"end": 6251,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6270,
											"end": 6274,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6275,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6286,
											"end": 6414,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 6286,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6385,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6374,
											"end": 6385,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6371,
											"end": 6408,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6371,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6371,
											"end": 6408,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6388,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6388,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6795,
											"end": 6963,
											"name": "tag",
											"source": 15,
											"value": "145"
										},
										{
											"begin": 6795,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6908,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6899,
											"end": 6908,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6916,
											"end": 6931,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6916,
											"end": 6931,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6916,
											"end": 6931,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6910,
											"end": 6932,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6896,
											"end": 6933,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 6886,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6886,
											"end": 6957,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 6937,
											"end": 6955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7100,
											"end": 7317,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 7100,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7140,
											"end": 7141,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7156,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 7156,
											"end": 7288,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B71"
										},
										{
											"begin": 7205,
											"end": 7208,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 7201,
											"end": 7221,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7191,
											"end": 7222,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7278,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7156,
											"end": 7288,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 7156,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7100,
											"end": 7317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7322,
											"end": 7534,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 7322,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7364,
											"end": 7367,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7396,
											"end": 7408,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7443,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7432,
											"end": 7437,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7428,
											"end": 7444,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7423,
											"end": 7426,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7417,
											"end": 7453,
											"name": "MCOPY",
											"source": 15
										},
										{
											"begin": 7508,
											"end": 7509,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7488,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7472,
											"end": 7488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7510,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7510,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7472,
											"end": 7488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7472,
											"end": 7488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7322,
											"end": 7534,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7322,
											"end": 7534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7539,
											"end": 7806,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 7539,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7718,
											"end": 7721,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 7769,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 7795,
											"end": 7798,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7787,
											"end": 7793,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7769,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 7769,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7769,
											"end": 7799,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 7769,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7743,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 7743,
											"end": 7800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8096,
											"end": 8592,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 8096,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8327,
											"end": 8359,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8359,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8359,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8309,
											"end": 8360,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8309,
											"end": 8360,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8396,
											"end": 8428,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8369,
											"end": 8429,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8445,
											"end": 8463,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8472,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8472,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8438,
											"end": 8472,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8481,
											"end": 8512,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8481,
											"end": 8512,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8481,
											"end": 8512,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8529,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 8529,
											"end": 8586,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8566,
											"end": 8585,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8566,
											"end": 8585,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8558,
											"end": 8564,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 8529,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8529,
											"end": 8586,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 8529,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8521,
											"end": 8586,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 8096,
											"end": 8592,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8096,
											"end": 8592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8597,
											"end": 8846,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 8597,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8707,
											"end": 8716,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8698,
											"end": 8705,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8694,
											"end": 8717,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8690,
											"end": 8722,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8687,
											"end": 8739,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8687,
											"end": 8739,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 8687,
											"end": 8739,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8725,
											"end": 8737,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 8687,
											"end": 8739,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 8687,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "180"
										},
										{
											"begin": 8810,
											"end": 8815,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 8786,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										}
									],
									".data": {
										"528DD67E901864C021E91BC02682CCAF0F079AA4E76798FE2DA7DA838DB9C5CF": "68747470733a2f2f697066732e66696c65626173652e696f2f697066732f516d586341317245656f5576634d6e4c5165464a76334c7655456558696a66426b714a6745354c434761394d41502f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"totalEclipseNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setRoyaltyInfo(address,uint96)": "02fa7c47",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_royaltyFeesInBips\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_royaltyReceiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approvalToVaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyFeesInBips\",\"type\":\"uint96\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"params\":{\"_approvalToVaultAddress\":\"The address approved to operate all NFTs (e.g., for fractionalization).\",\"_royaltyFeesInBips\":\"The royalty fee percentage in basis points (1% = 100 bips).\",\"_royaltyReceiverAddress\":\"The address that will receive royalty payments.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"totalEclipseNFT.sol\":\"totalEclipseNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"totalEclipseNFT.sol\":{\"keccak256\":\"0xa09e3de2d9b390fee5cef16ad72779a6f184d46caa800a6ee50eaa34ad3bc64d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac9fcdbf96e384178fac72f33bfd891cb63c815e97344819aabf1ff7e8e3b80e\",\"dweb:/ipfs/QmS5Z2x51fBNv8UNGTwA5vpsHYxLidY4okjjqv8wHxZAi2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 339,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 343,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 347,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 357,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1496,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(RoyaltyInfo)1493_storage"
							},
							{
								"astId": 1501,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)"
							},
							{
								"astId": 3224,
								"contract": "totalEclipseNFT.sol:totalEclipseNFT",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)1493_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoyaltyInfo)1493_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 1490,
										"contract": "totalEclipseNFT.sol:totalEclipseNFT",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1492,
										"contract": "totalEclipseNFT.sol:totalEclipseNFT",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1761,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1760,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1760,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1760
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						],
						"IERC2981": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 168,
							"sourceUnit": 2052,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"476:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "476:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "476:7:1"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "194:259:1",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								2051
							],
							"name": "IERC2981",
							"nameLocation": "464:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "490:231:1",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "735:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "764:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "756:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "789:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "781:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:58:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "836:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "828:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "854:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "846:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:41:1"
									},
									"scope": 167,
									"src": "726:143:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "454:417:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:765:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							304
						],
						"IERC20Errors": [
							209
						],
						"IERC721Errors": [
							257
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 170,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 179,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 184,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 189,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 198,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 203,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 208,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 305,
							"src": "278:1764:2",
							"usedErrors": [
								179,
								184,
								189,
								198,
								203,
								208
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 210,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 257,
							"linearizedBaseContracts": [
								257
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 215,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 220,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 229,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 234,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 239,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 246,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 251,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 256,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 305,
							"src": "2186:2092:2",
							"usedErrors": [
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 269,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 274,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 279,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 286,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 291,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 296,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 303,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 305,
							"src": "4424:2107:2",
							"usedErrors": [
								269,
								274,
								279,
								286,
								291,
								296,
								303
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"ERC165": [
							2039
						],
						"ERC721": [
							1313
						],
						"IERC165": [
							2051
						],
						"IERC721": [
							1430
						],
						"IERC721Errors": [
							257
						],
						"IERC721Metadata": [
							1476
						],
						"IERC721Receiver": [
							1448
						],
						"Strings": [
							2015
						]
					},
					"id": 1314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1431,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 307,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1449,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 309,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1448,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1477,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 311,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1476,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1761,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 313,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1760,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2016,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 315,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2015,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2040,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 317,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 318,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2039,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 305,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 257,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1760,
										"src": "804:7:3"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 325,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "813:6:3"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 327,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "821:7:3"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 329,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1476,
										"src": "830:15:3"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 331,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 257,
										"src": "847:13:3"
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1313,
							"linearizedBaseContracts": [
								1313,
								257,
								1476,
								1430,
								2039,
								2051,
								1760
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 335,
									"libraryName": {
										"id": 333,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2015,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 336,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 338,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 343,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 342,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 341,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 346,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 344,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 350,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 348,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 356,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 355,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 354,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1313,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2038,
										2050
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 387,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1430_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1430_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 386,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1430",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1476,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1476_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1476_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 392,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1476",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 400,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 398,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1313_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2038,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 384,
												"id": 403,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 381,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 379,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2039,
												"src": "1637:6:3"
											},
											{
												"id": 380,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2051,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 376,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1313,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 420,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 419,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 425,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 412,
												"id": 431,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1313,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1363
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 440,
												"id": 444,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1313,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 452,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 451,
												"id": 453,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1313,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1467
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 461,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 460,
												"id": 462,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1313,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 476,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 491,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 492,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1828,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 488,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 471,
												"id": 498,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1313,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1313,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1403
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 520,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1116,
															1182
														],
														"referencedDeclaration": 1116,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1313,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1419
									],
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 532,
												"id": 540,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1313,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1411
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 551,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 550,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1313,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 568,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 570,
														"indexExpression": {
															"id": 569,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 572,
													"indexExpression": {
														"id": 571,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 573,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1313,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1395
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 592,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 600,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 605,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 602,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 610,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 614,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 615,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 612,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 617,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1313,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1385
									],
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 631,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															639,
															665
														],
														"referencedDeclaration": 665,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1313,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 657,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1313,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 673,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 675,
													"indexExpression": {
														"id": 674,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 672,
												"id": 676,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1313,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 686,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 688,
													"indexExpression": {
														"id": 687,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 685,
												"id": 689,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1313,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 709,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 710,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 696,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 713,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 714,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 712,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 718,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 717,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 720,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 723,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 702,
												"id": 725,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1313,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 738,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 739,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 740,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 737,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 743,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 744,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 759,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 755,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 756,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 754,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 246,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 758,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 760,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 753,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 752,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1313,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 778,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 772,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 774,
																"indexExpression": {
																	"id": 773,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1313,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"arguments": [
														{
															"id": 795,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 799,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 805,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 806,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 807,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 804,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 819,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 824,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 818,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1116,
																		1182
																	],
																	"referencedDeclaration": 1182,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 837,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 831,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 833,
																			"indexExpression": {
																				"id": 832,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 852,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 846,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 848,
																			"indexExpression": {
																				"id": 847,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 855,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 857,
														"indexExpression": {
															"id": 856,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 867,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 793,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 791,
												"id": 868,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1313,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"arguments": [
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 895,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 904,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 905,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 917,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 911,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 910,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 916,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1313,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															961
														],
														"referencedDeclaration": 961,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1313,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 950,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1313,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 993,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 967,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 969,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 988,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 987,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 990,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1313,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1011,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1010,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1016,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1019,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1024,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1021,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1031,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1041,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1042,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1051,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1050,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1045,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1046,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1047,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1044,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1049,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1037,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1036,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1039,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1313,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1064,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1072,
															1098
														],
														"referencedDeclaration": 1098,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1313,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1094,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1090,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1313,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1111,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1108,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1116,
															1182
														],
														"referencedDeclaration": 1182,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1313,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1137
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1137,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1173,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1136,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1141,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1139,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1138,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1142,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1143,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1148,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1149,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1153,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1154,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1152,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1159,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1158,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 251,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1164,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1172,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1171,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1166,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1167,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1168,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1165,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1170,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1175,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1177,
														"indexExpression": {
															"id": 1176,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1178,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1313,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1192,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1193,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1202,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1199,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1198,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1201,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1204,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1207,
															"indexExpression": {
																"id": 1205,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1208,
														"indexExpression": {
															"id": 1206,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1212,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1313,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"arguments": [
														{
															"id": 1230,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1234,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1240,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1239,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1242,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1245,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1246,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1313,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1260,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1278,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1279,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1448,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1448_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1447,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1288,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1287,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1284,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1253,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1283,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 239,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1285,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1286,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1290,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1277,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1276,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1290,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1275,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1306,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1294,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1292,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1304,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1292,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1292,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1303,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1305,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1302,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1299,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1253,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1298,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 239,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1301,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1307,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1293,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1292,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1307,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1291,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1269,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1271,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1266,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1265,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1448_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1448",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1447,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1308,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1313,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1314,
							"src": "776:16926:3",
							"usedErrors": [
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256
							],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						],
						"IERC721": [
							1430
						]
					},
					"id": 1431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1431,
							"sourceUnit": 2052,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1316,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1319,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "287:7:4"
									},
									"id": 1320,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1318,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430,
								2051
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1329,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1338,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1347,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1430,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1430,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1430,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1430,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1430,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1430,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1430,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1430,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1430,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1448
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1448,
							"linearizedBaseContracts": [
								1448
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1448,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1449,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1430
						],
						"IERC721Metadata": [
							1476
						]
					},
					"id": 1477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1477,
							"sourceUnit": 1431,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1451,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1454,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "357:7:6"
									},
									"id": 1455,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1453,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1476,
							"linearizedBaseContracts": [
								1476,
								1430,
								2051
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1476,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1476,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1476,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1477,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/common/ERC2981.sol",
					"exportedSymbols": {
						"ERC165": [
							2039
						],
						"ERC2981": [
							1730
						],
						"IERC165": [
							2051
						],
						"IERC2981": [
							167
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"file": "../../interfaces/IERC2981.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 168,
							"src": "134:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1479,
										"name": "IERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "142:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 2040,
							"src": "190:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1481,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "198:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1482,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2039,
										"src": "207:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1485,
										"name": "IERC2981",
										"nameLocations": [
											"1135:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "1135:8:7"
									},
									"id": 1486,
									"nodeType": "InheritanceSpecifier",
									"src": "1135:8:7"
								},
								{
									"baseName": {
										"id": 1487,
										"name": "ERC165",
										"nameLocations": [
											"1145:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "1145:6:7"
									},
									"id": 1488,
									"nodeType": "InheritanceSpecifier",
									"src": "1145:6:7"
								}
							],
							"canonicalName": "ERC2981",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1484,
								"nodeType": "StructuredDocumentation",
								"src": "261:844:7",
								"text": " @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730,
								2039,
								167,
								2051
							],
							"name": "ERC2981",
							"nameLocation": "1124:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC2981.RoyaltyInfo",
									"id": 1493,
									"members": [
										{
											"constant": false,
											"id": 1490,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "1195:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1493,
											"src": "1187:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1489,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1492,
											"mutability": "mutable",
											"name": "royaltyFraction",
											"nameLocation": "1220:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1493,
											"src": "1213:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1491,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1213:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoyaltyInfo",
									"nameLocation": "1165:11:7",
									"nodeType": "StructDefinition",
									"scope": 1730,
									"src": "1158:84:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1496,
									"mutability": "mutable",
									"name": "_defaultRoyaltyInfo",
									"nameLocation": "1268:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1248:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
										"typeString": "struct ERC2981.RoyaltyInfo"
									},
									"typeName": {
										"id": 1495,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1494,
											"name": "RoyaltyInfo",
											"nameLocations": [
												"1248:11:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1493,
											"src": "1248:11:7"
										},
										"referencedDeclaration": 1493,
										"src": "1248:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
											"typeString": "struct ERC2981.RoyaltyInfo"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1501,
									"mutability": "mutable",
									"name": "_tokenRoyaltyInfo",
									"nameLocation": "1341:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1293:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
										"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
									},
									"typeName": {
										"id": 1500,
										"keyName": "tokenId",
										"keyNameLocation": "1309:7:7",
										"keyType": {
											"id": 1497,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1301:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1293:39:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
											"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1499,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1498,
												"name": "RoyaltyInfo",
												"nameLocations": [
													"1320:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1493,
												"src": "1320:11:7"
											},
											"referencedDeclaration": 1493,
											"src": "1320:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
												"typeString": "struct ERC2981.RoyaltyInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "1365:96:7",
										"text": " @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "6f483d09",
									"id": 1508,
									"name": "ERC2981InvalidDefaultRoyalty",
									"nameLocation": "1472:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1509:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1501:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1528:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1520:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:40:7"
									},
									"src": "1466:75:7"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1547:64:7",
										"text": " @dev The default royalty receiver is invalid."
									},
									"errorSelector": "b6d9900a",
									"id": 1513,
									"name": "ERC2981InvalidDefaultRoyaltyReceiver",
									"nameLocation": "1622:36:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1667:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1659:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:18:7"
									},
									"src": "1616:61:7"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1683:114:7",
										"text": " @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "dfd1fc1b",
									"id": 1522,
									"name": "ERC2981InvalidTokenRoyalty",
									"nameLocation": "1808:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1843:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1835:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1860:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1852:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1879:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1871:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:57:7"
									},
									"src": "1802:90:7"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "1898:70:7",
										"text": " @dev The royalty receiver for `tokenId` is invalid."
									},
									"errorSelector": "969f0852",
									"id": 1529,
									"name": "ERC2981InvalidTokenRoyaltyReceiver",
									"nameLocation": "1979:34:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2022:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2014:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2039:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2031:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:35:7"
									},
									"src": "1973:76:7"
								},
								{
									"baseFunctions": [
										2038,
										2050
									],
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "2224:105:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1540,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "2241:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1542,
																		"name": "IERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "2261:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$167_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$167_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	],
																	"id": 1541,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2256:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2256:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$167",
																	"typeString": "type(contract IERC2981)"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2271:11:7",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2256:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2241:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1548,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2310:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1546,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC2981_$1730_$",
																	"typeString": "type(contract super ERC2981)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2292:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2038,
															"src": "2286:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2241:81:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1551,
												"nodeType": "Return",
												"src": "2234:88:7"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2055:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2125:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1536,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1534,
												"name": "IERC165",
												"nameLocations": [
													"2192:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2051,
												"src": "2192:7:7"
											},
											{
												"id": 1535,
												"name": "ERC165",
												"nameLocations": [
													"2201:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2039,
												"src": "2201:6:7"
											}
										],
										"src": "2183:25:7"
									},
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2150:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2143:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2143:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:20:7"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2218:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2218:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:6:7"
									},
									"scope": 1730,
									"src": "2116:213:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "2483:315:7",
										"statements": [
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "royalty",
														"nameLocation": "2512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "2493:26:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo"
														},
														"typeName": {
															"id": 1566,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1565,
																"name": "RoyaltyInfo",
																"nameLocations": [
																	"2493:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1493,
																"src": "2493:11:7"
															},
															"referencedDeclaration": 1493,
															"src": "2493:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
																"typeString": "struct ERC2981.RoyaltyInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"baseExpression": {
														"id": 1568,
														"name": "_tokenRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2522:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
															"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
														}
													},
													"id": 1570,
													"indexExpression": {
														"id": 1569,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "2540:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2522:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2493:55:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1572,
															"name": "royalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2563:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																"typeString": "struct ERC2981.RoyaltyInfo memory"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2571:8:7",
														"memberName": "receiver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1490,
														"src": "2563:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2583:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1574,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2583:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2583:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2563:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "2559:90:7",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "2595:54:7",
													"statements": [
														{
															"expression": {
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1579,
																	"name": "royalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "2609:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																		"typeString": "struct ERC2981.RoyaltyInfo memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1580,
																	"name": "_defaultRoyaltyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "2619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
																		"typeString": "struct ERC2981.RoyaltyInfo storage ref"
																	}
																},
																"src": "2609:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																	"typeString": "struct ERC2981.RoyaltyInfo memory"
																}
															},
															"id": 1582,
															"nodeType": "ExpressionStatement",
															"src": "2609:29:7"
														}
													]
												}
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "royaltyAmount",
														"nameLocation": "2667:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "2659:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2659:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1587,
																	"name": "salePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "2684:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 1588,
																		"name": "royalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "2696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																			"typeString": "struct ERC2981.RoyaltyInfo memory"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2704:15:7",
																	"memberName": "royaltyFraction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1492,
																	"src": "2696:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "2684:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1591,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2683:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1592,
															"name": "_feeDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2723:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
																"typeString": "function () pure returns (uint96)"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2683:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:81:7"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1596,
																"name": "royalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "2759:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																	"typeString": "struct ERC2981.RoyaltyInfo memory"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2767:8:7",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1490,
															"src": "2759:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "royaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2777:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1599,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2758:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1600,
												"nodeType": "Return",
												"src": "2751:40:7"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2335:39:7",
										"text": " @inheritdoc IERC2981"
									},
									"functionSelector": "2a55205a",
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2388:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "2425:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2417:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:36:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2465:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2474:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:18:7"
									},
									"scope": 1730,
									"src": "2379:419:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "3139:29:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3130303030",
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												"functionReturnParameters": 1607,
												"id": 1609,
												"nodeType": "Return",
												"src": "3149:12:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2804:264:7",
										"text": " @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_feeDenominator",
									"nameLocation": "3082:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3097:2:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3131:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1605,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3131:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:8:7"
									},
									"scope": 1730,
									"src": "3073:95:7",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "3513:423:7",
										"statements": [
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "3531:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "3523:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3523:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1621,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "3545:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3545:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3523:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1624,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3576:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1625,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "3591:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3576:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "3572:173:7",
												"trueBody": {
													"id": 1632,
													"nodeType": "Block",
													"src": "3604:141:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1628,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1616,
																		"src": "3708:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1629,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "3722:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1627,
																	"name": "ERC2981InvalidDefaultRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "3679:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3679:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1631,
															"nodeType": "RevertStatement",
															"src": "3672:62:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1634,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3758:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3778:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3770:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3770:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3770:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3758:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "3754:108:7",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "3782:80:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3848:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3840:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1641,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3840:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3840:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1640,
																	"name": "ERC2981InvalidDefaultRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "3803:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3803:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1646,
															"nodeType": "RevertStatement",
															"src": "3796:55:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1649,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "3872:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1651,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "3906:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1652,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3916:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 1650,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3894:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$1493_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3894:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "3872:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "3872:57:7"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "3174:250:7",
										"text": " @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDefaultRoyalty",
									"nameLocation": "3438:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3465:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3457:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "3482:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3475:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1615,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3475:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:39:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:7"
									},
									"scope": 1730,
									"src": "3429:507:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "4057:43:7",
										"statements": [
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4067:26:7",
													"subExpression": {
														"id": 1661,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "4074:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "4067:26:7"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3942:60:7",
										"text": " @dev Removes default royalty information."
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deleteDefaultRoyalty",
									"nameLocation": "4016:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4037:2:7"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4057:0:7"
									},
									"scope": 1730,
									"src": "4007:93:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "4469:444:7",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "4487:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "4479:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4479:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1677,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "4501:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4501:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4479:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1680,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "4532:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1681,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4547:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4532:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "4528:180:7",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "4560:148:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1684,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "4662:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1685,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "4671:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1686,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "4685:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1683,
																	"name": "ERC2981InvalidTokenRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4635:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4635:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "4628:69:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "4721:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4741:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4733:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4733:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4733:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4721:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1706,
												"nodeType": "IfStatement",
												"src": "4717:115:7",
												"trueBody": {
													"id": 1705,
													"nodeType": "Block",
													"src": "4745:87:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "4801:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4818:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4810:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4810:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4810:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1697,
																	"name": "ERC2981InvalidTokenRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "4766:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (uint256,address) pure returns (error)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4766:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1704,
															"nodeType": "RevertStatement",
															"src": "4759:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1707,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "4842:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 1709,
														"indexExpression": {
															"id": 1708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4860:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4842:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1711,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "4883:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1712,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "4893:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 1710,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "4871:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$1493_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4871:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "4842:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "4842:64:7"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "4106:259:7",
										"text": " @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "4379:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4404:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4396:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4421:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4413:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "4438:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4431:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1671,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4431:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:56:7"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4469:0:7"
									},
									"scope": 1730,
									"src": "4370:543:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "5081:50:7",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5091:33:7",
													"subExpression": {
														"baseExpression": {
															"id": 1723,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "5098:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 1725,
														"indexExpression": {
															"id": 1724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "5116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5098:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "5091:33:7"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "4919:95:7",
										"text": " @dev Resets royalty information for the token id back to the global default."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_resetTokenRoyalty",
									"nameLocation": "5028:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5055:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "5047:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:17:7"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5081:0:7"
									},
									"scope": 1730,
									"src": "5019:112:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1731,
							"src": "1106:4027:7",
							"usedErrors": [
								1508,
								1513,
								1522,
								1529
							],
							"usedEvents": []
						}
					],
					"src": "108:5026:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1760
						]
					},
					"id": 1761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1760,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1747,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1749,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1760,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1755,
												"id": 1757,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1760,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1761,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3105
						],
						"SignedMath": [
							3210
						],
						"Strings": [
							2015
						]
					},
					"id": 2016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1762,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 3106,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1763,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3105,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2016,
							"sourceUnit": 3211,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1765,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3210,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1767,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2015,
							"linearizedBaseContracts": [
								2015
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1770,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1768,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1769,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1773,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2015,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1771,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1772,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1780,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1826,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1789
														],
														"declarations": [
															{
																"constant": false,
																"id": 1789,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1826,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1788,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1796,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1792,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1790,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3105,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3105_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2925,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1798
														],
														"declarations": [
															{
																"constant": false,
																"id": 1798,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1826,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1797,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1803,
														"initialValue": {
															"arguments": [
																{
																	"id": 1801,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1789,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1799,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1805
														],
														"declarations": [
															{
																"constant": false,
																"id": 1805,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1826,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1804,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1806,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1798,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1789,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1805,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1807,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1822,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1809,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1805,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1811,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1770,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1805,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1783,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1812,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1813,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1816,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1817,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1821,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1820,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1823,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1824,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1787,
														"id": 1825,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2015,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1839,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1846,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3210_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3209,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1845,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1836,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1852,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1830,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2015,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 1872,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1863,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1857,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1866,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1857,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1864,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3105,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3105_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3047,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1862,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1874,
																	1957,
																	1977
																],
																"referencedDeclaration": 1957,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1861,
														"id": 1871,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2015,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													1885
												],
												"declarations": [
													{
														"constant": false,
														"id": 1885,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1956,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1887,
												"initialValue": {
													"id": 1886,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1877,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1956,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1898,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1893,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1890,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1899,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1901,
														"indexExpression": {
															"hexValue": "30",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1905,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1907,
														"indexExpression": {
															"hexValue": "31",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 1939,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1925,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1927,
																	"indexExpression": {
																		"id": 1926,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1928,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1770,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1932,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1929,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1885,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1934,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1935,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1938,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1919,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1940,
												"initializationExpression": {
													"assignments": [
														1912
													],
													"declarations": [
														{
															"constant": false,
															"id": 1912,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1940,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1911,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1918,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1914,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 1922,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1924,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1941,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1950,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 1949,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1945,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1877,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1946,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1944,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1948,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1953,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1951,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1955,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1881,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2015,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1970,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1960,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1968,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1973,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1965,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1874,
															1957,
															1977
														],
														"referencedDeclaration": 1957,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1975,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1962,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2015,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1989,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1980,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1987,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1994,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1982,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1992,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2001,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1999,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1998,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2007,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2005,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2004,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1986,
												"id": 2012,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 1978,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1979,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2015,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2016,
							"src": "251:2847:9",
							"usedErrors": [
								1780
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2039
						],
						"IERC165": [
							2051
						]
					},
					"id": 2040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2040,
							"sourceUnit": 2052,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2018,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2021,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "687:7:10"
									},
									"id": 2022,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2020,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2039,
							"linearizedBaseContracts": [
								2039,
								2051
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2050
									],
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2030,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2032,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2051_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2031,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2051",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2036,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2039,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2040,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2042,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2051,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2052,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3105
						]
					},
					"id": 3106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2054,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3105,
							"linearizedBaseContracts": [
								3105
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2055,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2057,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2062,
									"members": [
										{
											"id": 2058,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2059,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2060,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2061,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2092,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2075
														],
														"declarations": [
															{
																"constant": false,
																"id": 2075,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2092,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2074,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2079,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2077,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2067,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2081,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2065,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2085,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2073,
															"id": 2086,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2089,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2090,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2073,
														"id": 2091,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2063,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3105,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2120,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2106,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2099,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2107,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2113,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2105,
															"id": 2112,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2115,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2116,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2118,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2105,
														"id": 2119,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3105,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2162,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2134,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2141,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2140,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2143
														],
														"declarations": [
															{
																"constant": false,
																"id": 2143,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2162,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2142,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2148,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2149,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2151,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2157,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2133,
															"id": 2156,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2159,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2160,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2133,
														"id": 2161,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3105,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2190,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2183,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2181,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2175,
															"id": 2182,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2185,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2186,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2169,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2188,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2175,
														"id": 2189,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3105,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2219,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2218,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2204,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2197,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2211,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2203,
															"id": 2210,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2213,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2214,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2216,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2203,
														"id": 2217,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3105,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2230,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2223,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2231,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2234,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2233,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2223,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2229,
												"id": 2236,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3105,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2248,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2249,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2243,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2243,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2241,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2247,
												"id": 2254,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3105,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2266,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2267,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2270,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2271,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2261,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2273,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2277,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3105,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2289,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2297,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2296,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2293,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2284,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2288,
															"id": 2295,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2298,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2302,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2282,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2306,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2284,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2288,
												"id": 2311,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2280,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3105,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2438,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2437,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2326
														],
														"declarations": [
															{
																"constant": false,
																"id": 2326,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2325,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2330,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2316,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2328,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2332
														],
														"declarations": [
															{
																"constant": false,
																"id": 2332,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2331,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2333,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2318,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2334,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2335,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2326,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2339,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2324,
																	"id": 2341,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2345,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2351,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2350,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2347,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2057,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2349,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2353
														],
														"declarations": [
															{
																"constant": false,
																"id": 2353,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2352,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2354,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2332,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2353,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2316,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2318,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2355,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2357
														],
														"declarations": [
															{
																"constant": false,
																"id": 2357,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2356,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2364,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2358,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2360,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2320,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2326,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2357,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2365,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2366,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2367,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2368,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2371,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2373
														],
														"declarations": [
															{
																"constant": false,
																"id": 2373,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2437,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2380,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2375,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2381,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2383,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2384,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2388,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2389,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2391,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2392,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2396,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2397,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2399,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2400,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2404,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2405,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2407,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2408,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2412,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2413,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2415,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2416,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2420,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2421,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2423,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2320,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2424,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2373,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2428,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2429,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2323,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2430,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2431,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2434,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2435,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2324,
														"id": 2436,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3105,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2455
												],
												"declarations": [
													{
														"constant": false,
														"id": 2455,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2461,
												"initialValue": {
													"arguments": [
														{
															"id": 2457,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2458,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2444,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2459,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2446,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2456,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2439,
															2482
														],
														"referencedDeclaration": 2439,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2463,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2062",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2062",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2462,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3104,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2466,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2467,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2444,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2468,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2446,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2465,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2478,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2477,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2473,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2455,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2476,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2479,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2455,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2453,
												"id": 2480,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2447,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3105,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2593,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2490,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2495,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2489,
															"id": 2494,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2498
												],
												"declarations": [
													{
														"constant": false,
														"id": 2498,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2593,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2507,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2501,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2500,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2761,
																			2796
																		],
																		"referencedDeclaration": 2761,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2505,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2592,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2508,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2509,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2510,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2511,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2514,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2518,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2519,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2520,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2521,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2522,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2525,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2529,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2531,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2532,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2533,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2536,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2540,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2541,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2542,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2543,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2544,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2547,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2551,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2552,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2553,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2554,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2555,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2558,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2562,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2563,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2564,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2565,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2566,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2569,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2573,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2574,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2498,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2575,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2498,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2576,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2485,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2577,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2498,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2580,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2584,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2586,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2498,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2587,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2588,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2498,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2585,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2489,
														"id": 2591,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3105,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2628,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2627,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2606
														],
														"declarations": [
															{
																"constant": false,
																"id": 2606,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2627,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2605,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2610,
														"initialValue": {
															"arguments": [
																{
																	"id": 2608,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2607,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2594,
																	2629
																],
																"referencedDeclaration": 2594,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2611,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2606,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2613,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2600,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2612,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2615,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2616,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2606,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2618,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2597,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2624,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2604,
														"id": 2626,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2598,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2629,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3105,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2638
												],
												"declarations": [
													{
														"constant": false,
														"id": 2638,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2760,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2640,
												"initialValue": {
													"hexValue": "30",
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2757,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2655,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2654,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2646,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2649,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2671,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2685,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2684,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2679,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2680,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2683,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2686,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2700,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2699,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2694,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2695,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2701,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2715,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2714,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2706,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2709,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2716,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2730,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2729,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2721,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2724,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2725,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2728,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2731,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2745,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2744,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2736,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2632,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2756,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2755,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2638,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2754,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2758,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2638,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2636,
												"id": 2759,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2630,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3105,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2794,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2773
														],
														"declarations": [
															{
																"constant": false,
																"id": 2773,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2794,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2777,
														"initialValue": {
															"arguments": [
																{
																	"id": 2775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2764,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2774,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2761,
																	2796
																],
																"referencedDeclaration": 2761,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2778,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2780,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2767,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2779,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2784,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2782,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2783,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2773,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2785,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2764,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2771,
														"id": 2793,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2762,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2766,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2765,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3105,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2924,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2805
												],
												"declarations": [
													{
														"constant": false,
														"id": 2805,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2924,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2807,
												"initialValue": {
													"hexValue": "30",
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2921,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2808,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2824,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2823,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2813,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2822,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2825,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2841,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2840,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2830,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2836,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2839,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2842,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2858,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2857,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2847,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2852,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2856,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2875,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2874,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2869,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2870,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2873,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2876,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2892,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2891,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2890,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2893,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2909,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2908,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2799,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2903,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2907,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2910,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2920,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2919,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2805,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2922,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2805,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2803,
												"id": 2923,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2925,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3105,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2959,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2958,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2937
														],
														"declarations": [
															{
																"constant": false,
																"id": 2937,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2958,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2936,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2941,
														"initialValue": {
															"arguments": [
																{
																	"id": 2939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2928,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2938,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2925,
																	2960
																],
																"referencedDeclaration": 2925,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2937,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2944,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2931,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2943,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2948,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2946,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2947,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2937,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2949,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2928,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2935,
														"id": 2957,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2930,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2929,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2960,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3105,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3046,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2969
												],
												"declarations": [
													{
														"constant": false,
														"id": 2969,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3046,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2971,
												"initialValue": {
													"hexValue": "30",
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3043,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2972,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2986,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2985,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2977,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2980,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2981,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2984,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2987,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3001,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3000,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2992,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2995,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2996,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2999,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3002,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3016,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3015,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3010,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3011,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3014,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3031,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3030,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3022,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2963,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3025,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3026,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3029,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3032,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2963,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3042,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3041,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3037,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3040,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3044,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2969,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2967,
												"id": 3045,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3047,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3105,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3084,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3083,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3059
														],
														"declarations": [
															{
																"constant": false,
																"id": 3059,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3083,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3063,
														"initialValue": {
															"arguments": [
																{
																	"id": 3061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3050,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3060,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3047,
																	3085
																],
																"referencedDeclaration": 3047,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3064,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3059,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3066,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3053,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2062",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3065,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3104,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2062_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3068,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3071,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3069,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3059,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3070,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3072,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3074,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3050,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3080,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3057,
														"id": 3082,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3048,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3051,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3085,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3105,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3103,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3096,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3089,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2062",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2062",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3094,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3093,
												"id": 3102,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3086,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2062",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2062,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2062,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2062",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3105,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3106,
							"src": "203:14914:12",
							"usedErrors": [
								2057
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3210
						]
					},
					"id": 3211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3108,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3210,
							"linearizedBaseContracts": [
								3210
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3113,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3113,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3111,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3117,
												"id": 3124,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3112,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3115,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3210,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3143,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3136,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3137,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3131,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3135,
												"id": 3142,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3128,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3130,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3133,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3210,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3187,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3155
												],
												"declarations": [
													{
														"constant": false,
														"id": 3155,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3187,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3154,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3168,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3156,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3147,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3157,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3149,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3159,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3160,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3147,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3161,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3149,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3163,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3166,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3169,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3155,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3174,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3155,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3172,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3170,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3179,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3147,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3180,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3149,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3182,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3184,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3186,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3188,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3210,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3208,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3207,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3198,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3202,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3191,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3201,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3191,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3196,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3195,
														"id": 3206,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3189,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3190,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3210,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3211,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"totalEclipseNFT.sol": {
				"ast": {
					"absolutePath": "totalEclipseNFT.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"ERC165": [
							2039
						],
						"ERC2981": [
							1730
						],
						"ERC721": [
							1313
						],
						"IERC165": [
							2051
						],
						"IERC2981": [
							167
						],
						"IERC721": [
							1430
						],
						"IERC721Errors": [
							257
						],
						"IERC721Metadata": [
							1476
						],
						"IERC721Receiver": [
							1448
						],
						"Ownable": [
							147
						],
						"Strings": [
							2015
						],
						"totalEclipseNFT": [
							3342
						]
					},
					"id": 3343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3212,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 1314,
							"src": "61:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 148,
							"src": "120:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/common/ERC2981.sol",
							"file": "@openzeppelin/contracts/token/common/ERC2981.sol",
							"id": 3215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 1731,
							"src": "174:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3216,
										"name": "ERC721",
										"nameLocations": [
											"264:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1313,
										"src": "264:6:14"
									},
									"id": 3217,
									"nodeType": "InheritanceSpecifier",
									"src": "264:6:14"
								},
								{
									"baseName": {
										"id": 3218,
										"name": "Ownable",
										"nameLocations": [
											"272:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "272:7:14"
									},
									"id": 3219,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:14"
								},
								{
									"baseName": {
										"id": 3220,
										"name": "ERC2981",
										"nameLocations": [
											"281:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "281:7:14"
									},
									"id": 3221,
									"nodeType": "InheritanceSpecifier",
									"src": "281:7:14"
								}
							],
							"canonicalName": "totalEclipseNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3342,
							"linearizedBaseContracts": [
								3342,
								1730,
								147,
								1313,
								257,
								1476,
								1430,
								2039,
								167,
								2051,
								1760
							],
							"name": "totalEclipseNFT",
							"nameLocation": "245:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3224,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "312:12:14",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "296:32:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3222,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "296:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "327:1:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3258,
										"nodeType": "Block",
										"src": "870:402:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3243,
															"name": "_royaltyReceiverAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "896:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3244,
															"name": "_royaltyFeesInBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "921:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3242,
														"name": "setRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3325,
														"src": "881:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,uint96)"
														}
													},
													"id": 3245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:59:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3246,
												"nodeType": "ExpressionStatement",
												"src": "881:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3248,
															"name": "_royaltyReceiverAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "993:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 3249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1018:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"id": 3247,
														"name": "collectiveMinting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3300,
														"src": "975:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3251,
												"nodeType": "ExpressionStatement",
												"src": "975:46:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3253,
															"name": "_royaltyReceiverAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "1099:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3254,
															"name": "_approvalToVaultAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3231,
															"src": "1137:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3252,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "1066:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:124:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3257,
												"nodeType": "ExpressionStatement",
												"src": "1066:124:14"
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "368:304:14",
										"text": " @param _royaltyFeesInBips The royalty fee percentage in basis points (1% = 100 bips).\n @param _royaltyReceiverAddress The address that will receive royalty payments.\n @param _approvalToVaultAddress The address approved to operate all NFTs (e.g., for fractionalization)."
									},
									"id": 3259,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f74616c2045636c69707365",
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "826:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_87c5ce216ba9d4001f543ad2ff5a15a155a38149ca64edf5ac57b008a31326c0",
														"typeString": "literal_string \"Total Eclipse\""
													},
													"value": "Total Eclipse"
												},
												{
													"hexValue": "544541",
													"id": 3235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "843:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b8a6bc9ecdd41d9b326fac3690485614525b6548d76be40fae6c865fdcb8bc65",
														"typeString": "literal_string \"TEA\""
													},
													"value": "TEA"
												}
											],
											"id": 3236,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3233,
												"name": "ERC721",
												"nameLocations": [
													"819:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1313,
												"src": "819:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "819:30:14"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3238,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "858:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "862:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "858:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3240,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3237,
												"name": "Ownable",
												"nameLocations": [
													"850:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "850:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "850:19:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "_royaltyFeesInBips",
												"nameLocation": "709:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "702:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3226,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "702:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "_royaltyReceiverAddress",
												"nameLocation": "746:23:14",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "738:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "_approvalToVaultAddress",
												"nameLocation": "788:23:14",
												"nodeType": "VariableDeclaration",
												"scope": 3259,
												"src": "780:31:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "691:127:14"
									},
									"returnParameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:0:14"
									},
									"scope": 3342,
									"src": "680:592:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "1410:152:14",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f697066732e66696c65626173652e696f2f697066732f516d586341317245656f5576634d6e4c5165464a76334c7655456558696a66426b714a6745354c434761394d41502f",
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1441:79:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_528dd67e901864c021e91bc02682ccaf0f079aa4e76798fe2da7da838db9c5cf",
														"typeString": "literal_string \"https://ipfs.filebase.io/ipfs/QmXcA1rEeoUvcMnLQeFJv3LvUEeXijfBkqJgE5LCGa9MAP/\""
													},
													"value": "https://ipfs.filebase.io/ipfs/QmXcA1rEeoUvcMnLQeFJv3LvUEeXijfBkqJgE5LCGa9MAP/"
												},
												"functionReturnParameters": 3264,
												"id": 3266,
												"nodeType": "Return",
												"src": "1421:99:14"
											}
										]
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1352:8:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1377:8:14"
									},
									"parameters": {
										"id": 3260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:14"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "1395:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1395:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:15:14"
									},
									"scope": 3342,
									"src": "1343:219:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "1738:157:14",
										"statements": [
											{
												"body": {
													"id": 3297,
													"nodeType": "Block",
													"src": "1791:97:14",
													"statements": [
														{
															"assignments": [
																3288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3288,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "1814:7:14",
																	"nodeType": "VariableDeclaration",
																	"scope": 3297,
																	"src": "1806:15:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3287,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1806:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3291,
															"initialValue": {
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1824:14:14",
																"subExpression": {
																	"id": 3289,
																	"name": "_nextTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3224,
																	"src": "1824:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1806:32:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3293,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3270,
																		"src": "1863:3:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3294,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3288,
																		"src": "1868:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3292,
																	"name": "_safeMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		935,
																		961
																	],
																	"referencedDeclaration": 935,
																	"src": "1853:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1853:23:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3296,
															"nodeType": "ExpressionStatement",
															"src": "1853:23:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3281,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3278,
														"src": "1769:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3282,
														"name": "_mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3272,
														"src": "1773:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1769:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3298,
												"initializationExpression": {
													"assignments": [
														3278
													],
													"declarations": [
														{
															"constant": false,
															"id": 3278,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1762:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3298,
															"src": "1754:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3277,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1754:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3280,
													"initialValue": {
														"hexValue": "30",
														"id": 3279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1766:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1754:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1786:3:14",
														"subExpression": {
															"id": 3284,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3278,
															"src": "1786:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3286,
													"nodeType": "ExpressionStatement",
													"src": "1786:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1749:139:14"
											}
										]
									},
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3275,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3274,
												"name": "onlyOwner",
												"nameLocations": [
													"1723:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1723:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1723:9:14"
										}
									],
									"name": "collectiveMinting",
									"nameLocation": "1645:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1671:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "1663:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "1684:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "1676:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:34:14"
									},
									"returnParameters": {
										"id": 3276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:0:14"
									},
									"scope": 3342,
									"src": "1636:259:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3309,
										"nodeType": "Block",
										"src": "1987:85:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3305,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "2005:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 3306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2020:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2005:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3304,
												"id": 3308,
												"nodeType": "Return",
												"src": "1998:23:14"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 3310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1943:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1954:2:14"
									},
									"returnParameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3310,
												"src": "1978:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1977:9:14"
									},
									"scope": 3342,
									"src": "1934:138:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3324,
										"nodeType": "Block",
										"src": "2244:68:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3320,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3312,
															"src": "2274:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3321,
															"name": "_royaltyFeesInBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3314,
															"src": "2285:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3319,
														"name": "_setDefaultRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "2255:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,uint96)"
														}
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2255:49:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3323,
												"nodeType": "ExpressionStatement",
												"src": "2255:49:14"
											}
										]
									},
									"functionSelector": "02fa7c47",
									"id": 3325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3316,
												"name": "onlyOwner",
												"nameLocations": [
													"2229:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2229:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2229:9:14"
										}
									],
									"name": "setRoyaltyInfo",
									"nameLocation": "2143:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2166:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3325,
												"src": "2158:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3314,
												"mutability": "mutable",
												"name": "_royaltyFeesInBips",
												"nameLocation": "2184:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 3325,
												"src": "2177:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3313,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "2177:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:46:14"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2244:0:14"
									},
									"scope": 3342,
									"src": "2134:178:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										405,
										1553
									],
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "2461:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3337,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3327,
															"src": "2503:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3335,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2479:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_totalEclipseNFT_$3342_$",
																"typeString": "type(contract super totalEclipseNFT)"
															}
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2485:17:14",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1553,
														"src": "2479:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2479:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3334,
												"id": 3339,
												"nodeType": "Return",
												"src": "2472:43:14"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2329:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3331,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3329,
												"name": "ERC721",
												"nameLocations": [
													"2415:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1313,
												"src": "2415:6:14"
											},
											{
												"id": 3330,
												"name": "ERC2981",
												"nameLocations": [
													"2423:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1730,
												"src": "2423:7:14"
											}
										],
										"src": "2406:25:14"
									},
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3327,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2354:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "2347:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3326,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2347:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:20:14"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "2450:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2450:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2449:6:14"
									},
									"scope": 3342,
									"src": "2320:203:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3343,
							"src": "236:2290:14",
							"usedErrors": [
								13,
								18,
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256,
								1508,
								1513,
								1522,
								1529
							],
							"usedEvents": [
								24,
								1329,
								1338,
								1347
							]
						}
					],
					"src": "33:2493:14"
				},
				"id": 14
			}
		}
	}
}