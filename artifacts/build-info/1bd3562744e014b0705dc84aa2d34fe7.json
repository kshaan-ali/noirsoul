{
	"id": "1bd3562744e014b0705dc84aa2d34fe7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"GumdropsAlbumNFT1.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\ncontract EuphoriaAlbumNFT is ERC721, Ownable, ERC2981 {\r\nusing Counters for Counters.Counter;\r\n// Track Metadata Structure\r\nstruct Track {\r\nstring title;\r\nstring isrc;\r\nuint256 pricePerShare;\r\nuint256 sharesRemaining;\r\nbool isAvailable;\r\nuint256 totalRoyalty;\r\nmapping(address => uint256) shareOwnership; // Map owner to their share count\r\n}\r\n// Track Mapping by ID\r\nmapping(uint256 => Track) public tracks;\r\nCounters.Counter private _trackCounter;\r\n// Constants\r\nuint256 public constant MAX_SHARES_PER_TRACK = 1250;\r\nuint256 public constant SHARE_PRICE_USD = 1250; // $12.50 USD in cents (convert to$MATIC for actual purchase)\r\n// Events\r\nevent TrackCreated(uint256 trackId, string title, string isrc);\r\nevent SharePurchased(uint256 trackId, address buyer, uint256 shares);\r\nevent RoyaltyAccrued(uint256 trackId, uint256 amount);\r\nevent RoyaltyWithdrawn(uint256 trackId, address owner, uint256 amount);\r\nconstructor(uint96 _royaltyFeesInBips, address _royaltyReceiverAddress)\r\nERC721(\"Euphoria Album\", \"TEA\") Ownable(msg.sender)\r\n{\r\n// Set royalty information\r\nsetRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips);\r\n// Transfer ownership to Noir Soul Syndicateâ€™s wallet address\r\ntransferOwnership(0xA39c821C6999acC27D71882b1Ca49fDdfA264cCA);\r\n}\r\n// Base URI for metadata\r\nfunction _baseURI() internal pure override returns (string memory) {\r\nreturn\r\n\"https://inherent-scarlet-tarsier.myfilebase.com/ipfs/QmP5gNDvoREGxY4XBTthA93s46YWu34Yek5is6PgzgWgpG/\";\r\n}\r\n// Create a new track as an NFT\r\nfunction createTrack(string memory _title, string memory _isrc) public onlyOwner {\r\nuint256 trackId = _trackCounter.current();\r\n_safeMint(msg.sender, trackId);\r\nTrack storage track = tracks[trackId];\r\ntrack.title = _title;\r\ntrack.isrc = _isrc;\r\ntrack.pricePerShare = SHARE_PRICE_USD;\r\ntrack.sharesRemaining = MAX_SHARES_PER_TRACK;\r\ntrack.isAvailable = true;\r\n_trackCounter.increment();\r\nemit TrackCreated(trackId, _title, _isrc);\r\n}\r\n// Purchase shares of a track\r\nfunction purchaseShares(uint256 trackId, uint256 numShares) public payable {\r\nTrack storage track = tracks[trackId];\r\nrequire(track.isAvailable, \"Track not available\");\r\nrequire(numShares > 0 && numShares <= track.sharesRemaining, \"Invalid number ofshares\");\r\nrequire(msg.value >= numShares * track.pricePerShare * 1e16, \"Insufficient payment\"); //Convert cents to MATIC\r\ntrack.shareOwnership[msg.sender] += numShares;\r\ntrack.sharesRemaining -= numShares;\r\n// Transfer funds to the contract owner\r\npayable(owner()).transfer(msg.value);\r\nemit SharePurchased(trackId, msg.sender, numShares);\r\n}\r\n// Accumulate royalty for a specific track\r\nfunction accumulateRoyalty(uint256 trackId) public payable onlyOwner {\r\nTrack storage track = tracks[trackId];\r\nrequire(msg.value > 0, \"Royalty amount must be greater than zero\");\r\ntrack.totalRoyalty += msg.value;\r\nemit RoyaltyAccrued(trackId, msg.value);\r\n}\r\n// Calculate the share percentage of an owner for a track\r\nfunction getOwnerSharePercentage(uint256 trackId, address owner) public view returns\r\n(uint256) {\r\nTrack storage track = tracks[trackId];\r\nuint256 ownerShares = track.shareOwnership[owner];\r\nreturn (ownerShares * 1e18) / MAX_SHARES_PER_TRACK; // Return percentage in basispoints (e.g., 5000 = 5%)\r\n}\r\n// Withdraw accumulated royalty based on share ownership\r\nfunction withdrawRoyalty(uint256 trackId) public {\r\nTrack storage track = tracks[trackId];\r\nuint256 ownerShares = track.shareOwnership[msg.sender];\r\nrequire(ownerShares > 0, \"You do not own any shares of this track\");\r\n// Calculate owner's share of the royalty\r\nuint256 ownerPercentage = getOwnerSharePercentage(trackId, msg.sender);\r\nuint256 ownerRoyalty = (track.totalRoyalty * ownerPercentage) / 1e18; // Calculate royalty in basis points\r\nrequire(ownerRoyalty > 0, \"No royalty available for withdrawal\");\r\n// Deduct the royalty amount from the track's total royalty\r\ntrack.totalRoyalty -= ownerRoyalty;\r\n// Transfer the calculated royalty amount to the shareholder\r\npayable(msg.sender).transfer(ownerRoyalty);\r\nemit RoyaltyWithdrawn(trackId, msg.sender, ownerRoyalty);\r\n}\r\n// Check total supply of tracks minted\r\nfunction totalSupply() public view returns (uint256) {\r\nreturn _trackCounter.current();\r\n}\r\n// Set royalty information for all NFTs in this contract\r\nfunction setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {\r\n_setDefaultRoyalty(_receiver, _royaltyFeesInBips);\r\n}\r\n// Check supported interfaces for compatibility\r\nfunction supportsInterface(bytes4 interfaceId)\r\npublic\r\nview\r\noverride(ERC721, ERC2981)\r\nreturns (bool)\r\n{\r\nreturn super.supportsInterface(interfaceId);\r\n}\r\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC2981} from \"../../interfaces/IERC2981.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 tokenId => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidDefaultRoyalty(uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The default royalty receiver is invalid.\n     */\n    error ERC2981InvalidDefaultRoyaltyReceiver(address receiver);\n\n    /**\n     * @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\n     */\n    error ERC2981InvalidTokenRoyalty(uint256 tokenId, uint256 numerator, uint256 denominator);\n\n    /**\n     * @dev The royalty receiver for `tokenId` is invalid.\n     */\n    error ERC2981InvalidTokenRoyaltyReceiver(uint256 tokenId, address receiver);\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidDefaultRoyalty(feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidDefaultRoyaltyReceiver(address(0));\n        }\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        uint256 denominator = _feeDenominator();\n        if (feeNumerator > denominator) {\n            // Royalty fee will exceed the sale price\n            revert ERC2981InvalidTokenRoyalty(tokenId, feeNumerator, denominator);\n        }\n        if (receiver == address(0)) {\n            revert ERC2981InvalidTokenRoyaltyReceiver(tokenId, address(0));\n        }\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 339,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 343,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 347,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 357,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"ERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.",
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\",\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}]},\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1496,
								"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(RoyaltyInfo)1493_storage"
							},
							{
								"astId": 1501,
								"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)1493_storage"
							},
							"t_struct(RoyaltyInfo)1493_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 1490,
										"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1492,
										"contract": "@openzeppelin/contracts/token/common/ERC2981.sol:ERC2981",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208c4d9cd15ea5475262e681aad0ed26e5802440c1bbce7df6938ff570fd6fe42c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208c4d9cd15ea5475262e681aad0ed26e5802440c1bbce7df6938ff570fd6fe42c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x4D SWAP13 0xD1 MCOPY 0xA5 SELFBALANCE MSTORE PUSH3 0xE681AA 0xD0 0xED 0x26 0xE5 DUP1 0x24 BLOCKHASH 0xC1 0xBB 0xCE PUSH30 0xF6938FF570FD6FE42C64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208c4d9cd15ea5475262e681aad0ed26e5802440c1bbce7df6938ff570fd6fe42c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x4D SWAP13 0xD1 MCOPY 0xA5 SELFBALANCE MSTORE PUSH3 0xE681AA 0xD0 0xED 0x26 0xE5 DUP1 0x24 BLOCKHASH 0xC1 0xBB 0xCE PUSH30 0xF6938FF570FD6FE42C64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c4d9cd15ea5475262e681aad0ed26e5802440c1bbce7df6938ff570fd6fe42c64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GumdropsAlbumNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP1 DUP8 0x2C 0xB2 PUSH9 0x84AAAFE3F376290398 0x29 PUSH13 0x63C68953AD1EDA79CDF5E48222 0xF8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 SWAP1 DUP8 0x2C 0xB2 PUSH9 0x84AAAFE3F376290398 0x29 PUSH13 0x63C68953AD1EDA79CDF5E48222 0xF8 INVALID PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209590872cb26884aaafe3f376290398296c63c68953ad1eda79cdf5e48222f8fe64736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GumdropsAlbumNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6505DA2BE565CC900B837DD23F71E2D480F646698CA33C38 SDIV DUP8 EXP 0xAD CODESIZE 0xE9 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x6505DA2BE565CC900B837DD23F71E2D480F646698CA33C38 SDIV DUP8 EXP 0xAD CODESIZE 0xE9 0xC7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220776505da2be565cc900b837dd23f71e2d480f646698ca33c3805870aad38e9c764736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GumdropsAlbumNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR CREATE2 0xBF ADD 0xE6 CALLVALUE 0xF7 PREVRANDAO SWAP1 DUP2 0xCB PUSH31 0xA2C906E5D3E4AF570F4BBB3C5AC35646E607949464736F6C634300081A0033 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR CREATE2 0xBF ADD 0xE6 CALLVALUE 0xF7 PREVRANDAO SWAP1 DUP2 0xCB PUSH31 0xA2C906E5D3E4AF570F4BBB3C5AC35646E607949464736F6C634300081A0033 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018f5bf01e634f7449081cb7ea2c906e5d3e4af570f4bbb3c5ac35646e607949464736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GumdropsAlbumNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GumdropsAlbumNFT1.sol": {
				"EuphoriaAlbumNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_royaltyFeesInBips",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "_royaltyReceiverAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidDefaultRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidDefaultRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "denominator",
									"type": "uint256"
								}
							],
							"name": "ERC2981InvalidTokenRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC2981InvalidTokenRoyaltyReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RoyaltyAccrued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RoyaltyWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "SharePurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "isrc",
									"type": "string"
								}
							],
							"name": "TrackCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_SHARES_PER_TRACK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SHARE_PRICE_USD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								}
							],
							"name": "accumulateRoyalty",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_isrc",
									"type": "string"
								}
							],
							"name": "createTrack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "getOwnerSharePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numShares",
									"type": "uint256"
								}
							],
							"name": "purchaseShares",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_royaltyFeesInBips",
									"type": "uint96"
								}
							],
							"name": "setRoyaltyInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tracks",
							"outputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "isrc",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "pricePerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sharesRemaining",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAvailable",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "totalRoyalty",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "trackId",
									"type": "uint256"
								}
							],
							"name": "withdrawRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC2981InvalidDefaultRoyalty(uint256,uint256)": [
								{
									"details": "The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidDefaultRoyaltyReceiver(address)": [
								{
									"details": "The default royalty receiver is invalid."
								}
							],
							"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)": [
								{
									"details": "The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
								}
							],
							"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)": [
								{
									"details": "The royalty receiver for `tokenId` is invalid."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GumdropsAlbumNFT1.sol\":286:4887  contract EuphoriaAlbumNFT is ERC721, Ownable, ERC2981 {... */\n  mstore(0x40, 0x80)\n    /* \"GumdropsAlbumNFT1.sol\":1191:1540  constructor(uint96 _royaltyFeesInBips, address _royaltyReceiverAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GumdropsAlbumNFT1.sol\":1304:1314  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x90, 0x457570686f72696120416c62756d)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x544541)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3269:3320   */\n  mstore\n    /* \"#utility.yul\":3242:3260   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"GumdropsAlbumNFT1.sol\":1348:1407  setRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips) */\n  tag_18\n    /* \"GumdropsAlbumNFT1.sol\":1363:1386  _royaltyReceiverAddress */\n  dup2\n    /* \"GumdropsAlbumNFT1.sol\":1388:1406  _royaltyFeesInBips */\n  dup4\n    /* \"GumdropsAlbumNFT1.sol\":1348:1362  setRoyaltyInfo */\n  tag_19\n    /* \"GumdropsAlbumNFT1.sol\":1348:1407  setRoyaltyInfo(_royaltyReceiverAddress, _royaltyFeesInBips) */\n  jump\t// in\ntag_18:\n    /* \"GumdropsAlbumNFT1.sol\":1475:1536  transferOwnership(0xA39c821C6999acC27D71882b1Ca49fDdfA264cCA) */\n  tag_20\n    /* \"GumdropsAlbumNFT1.sol\":1493:1535  0xA39c821C6999acC27D71882b1Ca49fDdfA264cCA */\n  0xa39c821c6999acc27d71882b1ca49fddfa264cca\n    /* \"GumdropsAlbumNFT1.sol\":1475:1492  transferOwnership */\n  tag_21\n    /* \"GumdropsAlbumNFT1.sol\":1475:1536  transferOwnership(0xA39c821C6999acC27D71882b1Ca49fDdfA264cCA) */\n  jump\t// in\ntag_20:\n    /* \"GumdropsAlbumNFT1.sol\":1191:1540  constructor(uint96 _royaltyFeesInBips, address _royaltyReceiverAddress)... */\n  pop\n  pop\n    /* \"GumdropsAlbumNFT1.sol\":286:4887  contract EuphoriaAlbumNFT is ERC721, Ownable, ERC2981 {... */\n  jump(tag_60)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x06\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"GumdropsAlbumNFT1.sol\":4535:4678  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_25\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_26\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_25:\n    /* \"GumdropsAlbumNFT1.sol\":4625:4674  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n  tag_28\n    /* \"GumdropsAlbumNFT1.sol\":4644:4653  _receiver */\n  dup3\n    /* \"GumdropsAlbumNFT1.sol\":4655:4673  _royaltyFeesInBips */\n  dup3\n    /* \"GumdropsAlbumNFT1.sol\":4625:4643  _setDefaultRoyalty */\n  tag_29\n    /* \"GumdropsAlbumNFT1.sol\":4625:4674  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n  jump\t// in\ntag_28:\n    /* \"GumdropsAlbumNFT1.sol\":4535:4678  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_26\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3269:3320   */\n  mstore\n    /* \"#utility.yul\":3242:3260   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3123:3326   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_35\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  shl(0xe0, 0x118cdaa7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3269:3320   */\n  mstore\n    /* \"#utility.yul\":3242:3260   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  tag_13\n    /* \"#utility.yul\":3123:3326   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n  0x2710\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3576:3602  feeNumerator > denominator */\n  dup3\n  and\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n  iszero\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  mload(0x40)\n  shl(0xe0, 0x6f483d09)\n  dup2\n  mstore\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"#utility.yul\":3522:3553   */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3504:3554   */\n  mstore\n    /* \"#utility.yul\":3570:3588   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3563:3597   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3477:3495   */\n  0x44\n  add\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n  tag_13\n    /* \"#utility.yul\":3331:3603   */\n  jump\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\ntag_47:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3758:3780  receiver == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe1, 0x5b6cc805)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3848:3849  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3269:3320   */\n  mstore\n    /* \"#utility.yul\":3242:3260   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3123:3326   */\n  jump\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\ntag_50:\n  pop\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3894:3929  RoyaltyInfo(receiver, feeNumerator) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  dup1\n  dup4\n  mstore\n  sub(shl(0x60, 0x01), 0x01)\n  swap1\n  swap2\n  and\n  0x20\n  swap1\n  swap3\n  add\n  dup3\n  swap1\n  mstore\n  shl(0xa0, 0x01)\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n  swap1\n  swap2\n  mul\n  or\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3891  _defaultRoyaltyInfo */\n  0x07\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n  sstore\n    /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:477   */\ntag_3:\n    /* \"#utility.yul\":92:98   */\n  0x00\n    /* \"#utility.yul\":100:106   */\n  dup1\n    /* \"#utility.yul\":153:155   */\n  0x40\n    /* \"#utility.yul\":141:150   */\n  dup4\n    /* \"#utility.yul\":132:139   */\n  dup6\n    /* \"#utility.yul\":128:151   */\n  sub\n    /* \"#utility.yul\":124:156   */\n  slt\n    /* \"#utility.yul\":121:173   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":169:170   */\n  0x00\n    /* \"#utility.yul\":166:167   */\n  dup1\n    /* \"#utility.yul\":159:171   */\n  revert\n    /* \"#utility.yul\":121:173   */\ntag_62:\n    /* \"#utility.yul\":195:211   */\n  dup3\n  mload\n  sub(shl(0x60, 0x01), 0x01)\n    /* \"#utility.yul\":240:270   */\n  dup2\n  and\n    /* \"#utility.yul\":230:271   */\n  dup2\n  eq\n    /* \"#utility.yul\":220:289   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":285:286   */\n  0x00\n    /* \"#utility.yul\":282:283   */\n  dup1\n    /* \"#utility.yul\":275:287   */\n  revert\n    /* \"#utility.yul\":220:289   */\ntag_63:\n    /* \"#utility.yul\":358:360   */\n  0x20\n    /* \"#utility.yul\":343:361   */\n  dup5\n  add\n    /* \"#utility.yul\":337:362   */\n  mload\n    /* \"#utility.yul\":308:313   */\n  swap1\n  swap3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":393:426   */\n  dup2\n  and\n    /* \"#utility.yul\":381:427   */\n  dup2\n  eq\n    /* \"#utility.yul\":371:445   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":441:442   */\n  0x00\n    /* \"#utility.yul\":438:439   */\n  dup1\n    /* \"#utility.yul\":431:443   */\n  revert\n    /* \"#utility.yul\":371:445   */\ntag_64:\n    /* \"#utility.yul\":464:471   */\n  dup1\n    /* \"#utility.yul\":454:471   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":14:477   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":482:609   */\ntag_55:\n    /* \"#utility.yul\":543:553   */\n  0x4e487b71\n    /* \"#utility.yul\":538:541   */\n  0xe0\n    /* \"#utility.yul\":534:554   */\n  shl\n    /* \"#utility.yul\":531:532   */\n  0x00\n    /* \"#utility.yul\":524:555   */\n  mstore\n    /* \"#utility.yul\":574:578   */\n  0x41\n    /* \"#utility.yul\":571:572   */\n  0x04\n    /* \"#utility.yul\":564:579   */\n  mstore\n    /* \"#utility.yul\":598:602   */\n  0x24\n    /* \"#utility.yul\":595:596   */\n  0x00\n    /* \"#utility.yul\":588:603   */\n  revert\n    /* \"#utility.yul\":614:994   */\ntag_56:\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":689:701   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":736:748   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":757:818   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":811:815   */\n  0x7f\n    /* \"#utility.yul\":803:809   */\n  dup3\n    /* \"#utility.yul\":799:816   */\n  and\n    /* \"#utility.yul\":789:816   */\n  swap2\n  pop\n    /* \"#utility.yul\":757:818   */\ntag_67:\n    /* \"#utility.yul\":864:866   */\n  0x20\n    /* \"#utility.yul\":856:862   */\n  dup3\n    /* \"#utility.yul\":853:867   */\n  lt\n    /* \"#utility.yul\":833:851   */\n  dup2\n    /* \"#utility.yul\":830:868   */\n  sub\n    /* \"#utility.yul\":827:988   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":910:920   */\n  0x4e487b71\n    /* \"#utility.yul\":905:908   */\n  0xe0\n    /* \"#utility.yul\":901:921   */\n  shl\n    /* \"#utility.yul\":898:899   */\n  0x00\n    /* \"#utility.yul\":891:922   */\n  mstore\n    /* \"#utility.yul\":945:949   */\n  0x22\n    /* \"#utility.yul\":942:943   */\n  0x04\n    /* \"#utility.yul\":935:950   */\n  mstore\n    /* \"#utility.yul\":973:977   */\n  0x24\n    /* \"#utility.yul\":970:971   */\n  0x00\n    /* \"#utility.yul\":963:978   */\n  revert\n    /* \"#utility.yul\":827:988   */\ntag_68:\n  pop\n    /* \"#utility.yul\":614:994   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1125:1643   */\ntag_58:\n    /* \"#utility.yul\":1227:1229   */\n  0x1f\n    /* \"#utility.yul\":1222:1225   */\n  dup3\n    /* \"#utility.yul\":1219:1230   */\n  gt\n    /* \"#utility.yul\":1216:1637   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1263:1268   */\n  dup1\n    /* \"#utility.yul\":1260:1261   */\n  0x00\n    /* \"#utility.yul\":1253:1269   */\n  mstore\n    /* \"#utility.yul\":1307:1311   */\n  0x20\n    /* \"#utility.yul\":1304:1305   */\n  0x00\n    /* \"#utility.yul\":1294:1312   */\n  keccak256\n    /* \"#utility.yul\":1377:1379   */\n  0x1f\n    /* \"#utility.yul\":1365:1375   */\n  dup5\n    /* \"#utility.yul\":1361:1380   */\n  add\n    /* \"#utility.yul\":1358:1359   */\n  0x05\n    /* \"#utility.yul\":1354:1381   */\n  shr\n    /* \"#utility.yul\":1348:1352   */\n  dup2\n    /* \"#utility.yul\":1344:1382   */\n  add\n    /* \"#utility.yul\":1413:1417   */\n  0x20\n    /* \"#utility.yul\":1401:1411   */\n  dup6\n    /* \"#utility.yul\":1398:1418   */\n  lt\n    /* \"#utility.yul\":1395:1442   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":1436:1440   */\n  dup1\n    /* \"#utility.yul\":1395:1442   */\ntag_72:\n    /* \"#utility.yul\":1491:1493   */\n  0x1f\n    /* \"#utility.yul\":1486:1489   */\n  dup5\n    /* \"#utility.yul\":1482:1494   */\n  add\n    /* \"#utility.yul\":1479:1480   */\n  0x05\n    /* \"#utility.yul\":1475:1495   */\n  shr\n    /* \"#utility.yul\":1469:1473   */\n  dup3\n    /* \"#utility.yul\":1465:1496   */\n  add\n    /* \"#utility.yul\":1455:1496   */\n  swap2\n  pop\n    /* \"#utility.yul\":1546:1627   */\ntag_73:\n    /* \"#utility.yul\":1564:1566   */\n  dup2\n    /* \"#utility.yul\":1557:1562   */\n  dup2\n    /* \"#utility.yul\":1554:1567   */\n  lt\n    /* \"#utility.yul\":1546:1627   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1623:1624   */\n  0x00\n    /* \"#utility.yul\":1609:1625   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1590:1591   */\n  0x01\n    /* \"#utility.yul\":1579:1592   */\n  add\n    /* \"#utility.yul\":1546:1627   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1550:1553   */\n  pop\n  pop\n    /* \"#utility.yul\":1216:1637   */\ntag_71:\n    /* \"#utility.yul\":1125:1643   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1819:3118   */\ntag_9:\n    /* \"#utility.yul\":1939:1949   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1961:1991   */\n  dup2\n  gt\n    /* \"#utility.yul\":1958:2014   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1994:2012   */\n  tag_79\n  tag_55\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2023:2120   */\n  tag_80\n    /* \"#utility.yul\":2113:2119   */\n  dup2\n    /* \"#utility.yul\":2073:2111   */\n  tag_81\n    /* \"#utility.yul\":2105:2109   */\n  dup5\n    /* \"#utility.yul\":2099:2110   */\n  sload\n    /* \"#utility.yul\":2073:2111   */\n  tag_56\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2067:2071   */\n  dup5\n    /* \"#utility.yul\":2023:2120   */\n  tag_58\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2169:2173   */\n  0x20\n    /* \"#utility.yul\":2200:2202   */\n  0x1f\n    /* \"#utility.yul\":2189:2203   */\n  dup3\n  gt\n    /* \"#utility.yul\":2217:2218   */\n  0x01\n    /* \"#utility.yul\":2212:2861   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2905:2906   */\n  0x00\n    /* \"#utility.yul\":2922:2928   */\n  dup4\n    /* \"#utility.yul\":2919:3008   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2974:2993   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2968:2994   */\n  mload\n    /* \"#utility.yul\":2919:3008   */\ntag_84:\n  not(0x00)\n    /* \"#utility.yul\":1776:1777   */\n  0x03\n    /* \"#utility.yul\":1772:1783   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1768:1792   */\n  shr\n    /* \"#utility.yul\":1764:1793   */\n  not\n    /* \"#utility.yul\":1754:1794   */\n  and\n    /* \"#utility.yul\":1800:1801   */\n  0x01\n    /* \"#utility.yul\":1796:1807   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1751:1808   */\n  or\n    /* \"#utility.yul\":3021:3102   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2182:3112   */\n  jump(tag_75)\n    /* \"#utility.yul\":2212:2861   */\ntag_83:\n    /* \"#utility.yul\":1072:1073   */\n  0x00\n    /* \"#utility.yul\":1065:1079   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1109:1113   */\n  0x20\n    /* \"#utility.yul\":1096:1114   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2248:2268   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2366:2588   */\ntag_87:\n    /* \"#utility.yul\":2380:2387   */\n  dup3\n    /* \"#utility.yul\":2377:2378   */\n  dup2\n    /* \"#utility.yul\":2374:2388   */\n  lt\n    /* \"#utility.yul\":2366:2588   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2462:2481   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2456:2482   */\n  mload\n    /* \"#utility.yul\":2441:2483   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2569:2573   */\n  0x20\n    /* \"#utility.yul\":2554:2574   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2522:2523   */\n  0x01\n    /* \"#utility.yul\":2510:2524   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2396:2408   */\n  add\n    /* \"#utility.yul\":2366:2588   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":2370:2373   */\n  pop\n    /* \"#utility.yul\":2616:2622   */\n  dup5\n    /* \"#utility.yul\":2607:2614   */\n  dup3\n    /* \"#utility.yul\":2604:2623   */\n  lt\n    /* \"#utility.yul\":2601:2802   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2677:2696   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2671:2697   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2760:2761   */\n  0x03\n    /* \"#utility.yul\":2756:2770   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2772:2775   */\n  0xf8\n    /* \"#utility.yul\":2752:2776   */\n  and\n    /* \"#utility.yul\":2748:2785   */\n  shr\n    /* \"#utility.yul\":2744:2786   */\n  not\n    /* \"#utility.yul\":2729:2787   */\n  and\n    /* \"#utility.yul\":2714:2788   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2601:2802   */\ntag_90:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2848:2849   */\n  0x01\n    /* \"#utility.yul\":2832:2846   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2828:2850   */\n  add\n    /* \"#utility.yul\":2815:2851   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1819:3118   */\n  jump\t// out\n    /* \"#utility.yul\":3331:3603   */\ntag_60:\n    /* \"GumdropsAlbumNFT1.sol\":286:4887  contract EuphoriaAlbumNFT is ERC721, Ownable, ERC2981 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GumdropsAlbumNFT1.sol\":286:4887  contract EuphoriaAlbumNFT is ERC721, Ownable, ERC2981 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbb86759f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd2bcdc60\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf3720cca\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa2e34586\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x293945b4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2a55205a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x343e988c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x414e8029\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x57a2eda9\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x02fa7c47\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"GumdropsAlbumNFT1.sol\":4729:4884  function supportsInterface(bytes4 interfaceId)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"GumdropsAlbumNFT1.sol\":4729:4884  function supportsInterface(bytes4 interfaceId)... */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GumdropsAlbumNFT1.sol\":4535:4678  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_40\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":4385:4475  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":2572:2597   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2545:2563   */\n      add\n        /* \"GumdropsAlbumNFT1.sol\":4385:4475  function totalSupply() public view returns (uint256) {... */\n      tag_37\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_40\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":750:801  uint256 public constant MAX_SHARES_PER_TRACK = 1250 */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_62\n        /* \"GumdropsAlbumNFT1.sol\":797:801  1250 */\n      0x04e2\n        /* \"GumdropsAlbumNFT1.sol\":750:801  uint256 public constant MAX_SHARES_PER_TRACK = 1250 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3530:3562   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3512:3563   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3579:3597   */\n      dup4\n      add\n        /* \"#utility.yul\":3572:3606   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3485:3503   */\n      add\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n      tag_37\n        /* \"#utility.yul\":3338:3612   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":3209:3508  function getOwnerSharePercentage(uint256 trackId, address owner) public view returns... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_62\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_40\n      tag_94\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":3568:4343  function withdrawRoyalty(uint256 trackId) public {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_40\n      tag_98\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_50\n      tag_102\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_62\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_40\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_50)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_45\n      tag_120\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_40\n      tag_124\n      calldatasize\n      0x04\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":653:692  mapping(uint256 => Track) public tracks */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      tag_129\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_37\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_40\n      tag_135\n      calldatasize\n      0x04\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":2890:3148  function accumulateRoyalty(uint256 trackId) public payable onlyOwner {... */\n    tag_23:\n      tag_40\n      tag_139\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_139:\n      tag_140\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_45\n      tag_143\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":2252:2844  function purchaseShares(uint256 trackId, uint256 numShares) public payable {... */\n    tag_25:\n      tag_40\n      tag_147\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_33\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_40\n      tag_157\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":1787:2219  function createTrack(string memory _title, string memory _isrc) public onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_40\n      tag_161\n      calldatasize\n      0x04\n      tag_162\n      jump\t// in\n    tag_161:\n      tag_163\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":4729:4884  function supportsInterface(bytes4 interfaceId)... */\n    tag_36:\n        /* \"GumdropsAlbumNFT1.sol\":4827:4831  bool */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":4844:4880  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"GumdropsAlbumNFT1.sol\":4868:4879  interfaceId */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":4844:4867  super.supportsInterface */\n      tag_166\n        /* \"GumdropsAlbumNFT1.sol\":4844:4880  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_165:\n        /* \"GumdropsAlbumNFT1.sol\":4837:4880  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"GumdropsAlbumNFT1.sol\":4729:4884  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":4535:4678  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"GumdropsAlbumNFT1.sol\":4625:4674  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n      tag_171\n        /* \"GumdropsAlbumNFT1.sol\":4644:4653  _receiver */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":4655:4673  _royaltyFeesInBips */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":4625:4643  _setDefaultRoyalty */\n      tag_172\n        /* \"GumdropsAlbumNFT1.sol\":4625:4674  _setDefaultRoyalty(_receiver, _royaltyFeesInBips) */\n      jump\t// in\n    tag_171:\n        /* \"GumdropsAlbumNFT1.sol\":4535:4678  function setRoyaltyInfo(address _receiver, uint96 _royaltyFeesInBips) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_181:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":4385:4475  function totalSupply() public view returns (uint256) {... */\n    tag_63:\n        /* \"GumdropsAlbumNFT1.sol\":4429:4436  uint256 */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":4448:4471  _trackCounter.current() */\n      tag_191\n        /* \"GumdropsAlbumNFT1.sol\":4448:4461  _trackCounter */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":4448:4471  _trackCounter.current() */\n    tag_191:\n        /* \"GumdropsAlbumNFT1.sol\":4441:4471  return _trackCounter.current() */\n      swap1\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":4385:4475  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8381:8413   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8363:8414   */\n      mstore\n        /* \"#utility.yul\":8430:8448   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8423:8457   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8493:8525   */\n      dup3\n      and\n        /* \"#utility.yul\":8473:8491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8466:8526   */\n      mstore\n        /* \"#utility.yul\":8336:8354   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_195\n        /* \"#utility.yul\":8161:8532   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2465:2472  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2548  _tokenRoyaltyInfo[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2539  _tokenRoyaltyInfo */\n      0x08\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2522:2548  _tokenRoyaltyInfo[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2493:2548  RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId] */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2465:2472  address */\n      dup3\n      swap2\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2559:2649  if (royalty.receiver == address(0)) {... */\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2609:2638  royalty = _defaultRoyaltyInfo */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2619:2638  _defaultRoyaltyInfo */\n      0x07\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2609:2638  royalty = _defaultRoyaltyInfo */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup3\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      div\n      sub(shl(0x60, 0x01), 0x01)\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2559:2649  if (royalty.receiver == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2696:2719  royalty.royaltyFraction */\n      0x20\n      dup2\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2659:2680  uint256 royaltyAmount */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n      0x2710\n      swap1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2719  salePrice * royalty.royaltyFraction */\n      tag_206\n      swap1\n      sub(shl(0x60, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2693  salePrice */\n      dup8\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2684:2719  salePrice * royalty.royaltyFraction */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2683:2740  (salePrice * royalty.royaltyFraction) / _feeDenominator() */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2759:2775  royalty.receiver */\n      swap2\n      mload\n      swap7\n      swap2\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2379:2798  function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual returns (address, uint256) {... */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":3209:3508  function getOwnerSharePercentage(uint256 trackId, address owner) public view returns... */\n    tag_86:\n        /* \"GumdropsAlbumNFT1.sol\":3296:3303  uint256 */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":3330:3345  tracks[trackId] */\n      dup3\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3330:3336  tracks */\n      0x09\n        /* \"GumdropsAlbumNFT1.sol\":3330:3345  tracks[trackId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GumdropsAlbumNFT1.sol\":3370:3397  track.shareOwnership[owner] */\n      dup6\n      and\n      dup5\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3370:3390  track.shareOwnership */\n      0x06\n      dup2\n      add\n        /* \"GumdropsAlbumNFT1.sol\":3370:3397  track.shareOwnership[owner] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":797:801  1250 */\n      0x04e2\n        /* \"GumdropsAlbumNFT1.sol\":3408:3426  ownerShares * 1e18 */\n      tag_211\n        /* \"GumdropsAlbumNFT1.sol\":3370:3397  track.shareOwnership[owner] */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":3422:3426  1e18 */\n      0x0de0b6b3a7640000\n        /* \"GumdropsAlbumNFT1.sol\":3408:3426  ownerShares * 1e18 */\n      tag_207\n      jump\t// in\n    tag_211:\n        /* \"GumdropsAlbumNFT1.sol\":3407:3450  (ownerShares * 1e18) / MAX_SHARES_PER_TRACK */\n      tag_212\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_212:\n        /* \"GumdropsAlbumNFT1.sol\":3400:3450  return (ownerShares * 1e18) / MAX_SHARES_PER_TRACK */\n      swap6\n        /* \"GumdropsAlbumNFT1.sol\":3209:3508  function getOwnerSharePercentage(uint256 trackId, address owner) public view returns... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":3568:4343  function withdrawRoyalty(uint256 trackId) public {... */\n    tag_99:\n        /* \"GumdropsAlbumNFT1.sol\":3620:3639  Track storage track */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":3642:3657  tracks[trackId] */\n      dup2\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3642:3648  tracks */\n      0x09\n        /* \"GumdropsAlbumNFT1.sol\":3642:3657  tracks[trackId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"GumdropsAlbumNFT1.sol\":3703:3713  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":3682:3714  track.shareOwnership[msg.sender] */\n      dup5\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3682:3702  track.shareOwnership */\n      0x06\n      dup2\n      add\n        /* \"GumdropsAlbumNFT1.sol\":3682:3714  track.shareOwnership[msg.sender] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":3725:3740  ownerShares > 0 */\n      dup1\n        /* \"GumdropsAlbumNFT1.sol\":3717:3784  require(ownerShares > 0, \"You do not own any shares of this track\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9398:9400   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":3717:3784  require(ownerShares > 0, \"You do not own any shares of this track\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9380:9401   */\n      mstore\n        /* \"#utility.yul\":9437:9439   */\n      0x27\n        /* \"#utility.yul\":9417:9435   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9410:9440   */\n      mstore\n        /* \"#utility.yul\":9476:9510   */\n      0x596f7520646f206e6f74206f776e20616e7920736861726573206f6620746869\n        /* \"#utility.yul\":9456:9474   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9449:9511   */\n      mstore\n      shl(0xc8, 0x7320747261636b)\n        /* \"#utility.yul\":9527:9545   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9520:9557   */\n      mstore\n        /* \"#utility.yul\":9574:9593   */\n      0x84\n      add\n        /* \"GumdropsAlbumNFT1.sol\":3717:3784  require(ownerShares > 0, \"You do not own any shares of this track\") */\n      tag_195\n        /* \"#utility.yul\":9196:9599   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":3717:3784  require(ownerShares > 0, \"You do not own any shares of this track\") */\n    tag_216:\n        /* \"GumdropsAlbumNFT1.sol\":3830:3853  uint256 ownerPercentage */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":3856:3900  getOwnerSharePercentage(trackId, msg.sender) */\n      tag_219\n        /* \"GumdropsAlbumNFT1.sol\":3880:3887  trackId */\n      dup5\n        /* \"GumdropsAlbumNFT1.sol\":3889:3899  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":3856:3879  getOwnerSharePercentage */\n      tag_86\n        /* \"GumdropsAlbumNFT1.sol\":3856:3900  getOwnerSharePercentage(trackId, msg.sender) */\n      jump\t// in\n    tag_219:\n        /* \"GumdropsAlbumNFT1.sol\":3830:3900  uint256 ownerPercentage = getOwnerSharePercentage(trackId, msg.sender) */\n      swap1\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":3903:3923  uint256 ownerRoyalty */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":3967:3971  1e18 */\n      0x0de0b6b3a7640000\n        /* \"GumdropsAlbumNFT1.sol\":3948:3963  ownerPercentage */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":3927:3932  track */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":3927:3945  track.totalRoyalty */\n      0x05\n      add\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":3927:3963  track.totalRoyalty * ownerPercentage */\n      tag_220\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_220:\n        /* \"GumdropsAlbumNFT1.sol\":3926:3971  (track.totalRoyalty * ownerPercentage) / 1e18 */\n      tag_221\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_221:\n        /* \"GumdropsAlbumNFT1.sol\":3903:3971  uint256 ownerRoyalty = (track.totalRoyalty * ownerPercentage) / 1e18 */\n      swap1\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":4034:4035  0 */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":4019:4031  ownerRoyalty */\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":4019:4035  ownerRoyalty > 0 */\n      gt\n        /* \"GumdropsAlbumNFT1.sol\":4011:4075  require(ownerRoyalty > 0, \"No royalty available for withdrawal\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9806:9808   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":4011:4075  require(ownerRoyalty > 0, \"No royalty available for withdrawal\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9788:9809   */\n      mstore\n        /* \"#utility.yul\":9845:9847   */\n      0x23\n        /* \"#utility.yul\":9825:9843   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9818:9848   */\n      mstore\n        /* \"#utility.yul\":9884:9918   */\n      0x4e6f20726f79616c747920617661696c61626c6520666f722077697468647261\n        /* \"#utility.yul\":9864:9882   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9857:9919   */\n      mstore\n      shl(0xea, 0x1dd85b)\n        /* \"#utility.yul\":9935:9953   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9928:9961   */\n      mstore\n        /* \"#utility.yul\":9978:9997   */\n      0x84\n      add\n        /* \"GumdropsAlbumNFT1.sol\":4011:4075  require(ownerRoyalty > 0, \"No royalty available for withdrawal\") */\n      tag_195\n        /* \"#utility.yul\":9604:10003   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":4011:4075  require(ownerRoyalty > 0, \"No royalty available for withdrawal\") */\n    tag_222:\n        /* \"GumdropsAlbumNFT1.sol\":4161:4173  ownerRoyalty */\n      dup1\n        /* \"GumdropsAlbumNFT1.sol\":4139:4144  track */\n      dup5\n        /* \"GumdropsAlbumNFT1.sol\":4139:4157  track.totalRoyalty */\n      0x05\n      add\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":4139:4173  track.totalRoyalty -= ownerRoyalty */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":4238:4280  payable(msg.sender).transfer(ownerRoyalty) */\n      mload(0x40)\n        /* \"GumdropsAlbumNFT1.sol\":4246:4256  msg.sender */\n      caller\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":4238:4280  payable(msg.sender).transfer(ownerRoyalty) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":4267:4279  ownerRoyalty */\n      dup4\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":4238:4280  payable(msg.sender).transfer(ownerRoyalty) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":4267:4279  ownerRoyalty */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":4246:4256  msg.sender */\n      dup9\n        /* \"GumdropsAlbumNFT1.sol\":4238:4280  payable(msg.sender).transfer(ownerRoyalty) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":4288:4339  RoyaltyWithdrawn(trackId, msg.sender, ownerRoyalty) */\n      0xd6ce75900eecaacadb4848f3b1a4e89cba8434d748d82adab2caf1bf248b5d17\n        /* \"GumdropsAlbumNFT1.sol\":4305:4312  trackId */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":4314:4324  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":4326:4338  ownerRoyalty */\n      dup4\n        /* \"GumdropsAlbumNFT1.sol\":4288:4339  RoyaltyWithdrawn(trackId, msg.sender, ownerRoyalty) */\n      mload(0x40)\n      tag_229\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GumdropsAlbumNFT1.sol\":3617:4343  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":3568:4343  function withdrawRoyalty(uint256 trackId) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_234:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":653:692  mapping(uint256 => Track) public tracks */\n    tag_130:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_252\n      swap1\n      tag_175\n      jump\t// in\n    tag_252:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_253\n      swap1\n      tag_175\n      jump\t// in\n    tag_253:\n      dup1\n      iszero\n      tag_254\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_255\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_254)\n    tag_255:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_257\n      swap1\n      tag_175\n      jump\t// in\n    tag_257:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_258\n      swap1\n      tag_175\n      jump\t// in\n    tag_258:\n      dup1\n      iszero\n      tag_259\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_260\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_259)\n    tag_260:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_261:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_261\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_259:\n      pop\n      pop\n      pop\n      0x02\n      dup5\n      add\n      sload\n      0x03\n      dup6\n      add\n      sload\n      0x04\n      dup7\n      add\n      sload\n      0x05\n      swap1\n      swap7\n      add\n      sload\n      swap5\n      swap6\n      swap2\n      swap5\n      swap1\n      swap4\n      pop\n      0xff\n      swap1\n      swap2\n      and\n      swap2\n      pop\n      dup7\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"GumdropsAlbumNFT1.sol\":2890:3148  function accumulateRoyalty(uint256 trackId) public payable onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"GumdropsAlbumNFT1.sol\":2962:2981  Track storage track */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":2984:2999  tracks[trackId] */\n      dup2\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":2984:2990  tracks */\n      0x09\n        /* \"GumdropsAlbumNFT1.sol\":2984:2999  tracks[trackId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GumdropsAlbumNFT1.sol\":3010:3019  msg.value */\n      callvalue\n        /* \"GumdropsAlbumNFT1.sol\":3002:3068  require(msg.value > 0, \"Royalty amount must be greater than zero\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10693:10695   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":3002:3068  require(msg.value > 0, \"Royalty amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10675:10696   */\n      mstore\n        /* \"#utility.yul\":10732:10734   */\n      0x28\n        /* \"#utility.yul\":10712:10730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10705:10735   */\n      mstore\n        /* \"#utility.yul\":10771:10805   */\n      0x526f79616c747920616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":10751:10769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10744:10806   */\n      mstore\n      shl(0xc0, 0x68616e207a65726f)\n        /* \"#utility.yul\":10822:10840   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10815:10853   */\n      mstore\n        /* \"#utility.yul\":10870:10889   */\n      0x84\n      add\n        /* \"GumdropsAlbumNFT1.sol\":3002:3068  require(msg.value > 0, \"Royalty amount must be greater than zero\") */\n      tag_195\n        /* \"#utility.yul\":10491:10895   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":3002:3068  require(msg.value > 0, \"Royalty amount must be greater than zero\") */\n    tag_269:\n        /* \"GumdropsAlbumNFT1.sol\":3093:3102  msg.value */\n      callvalue\n        /* \"GumdropsAlbumNFT1.sol\":3071:3076  track */\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":3071:3089  track.totalRoyalty */\n      0x05\n      add\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":3071:3102  track.totalRoyalty += msg.value */\n      dup3\n      dup3\n      sload\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":3110:3144  RoyaltyAccrued(trackId, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11204:11229   */\n      dup4\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3134:3143  msg.value */\n      callvalue\n        /* \"#utility.yul\":11260:11262   */\n      0x20\n        /* \"#utility.yul\":11245:11263   */\n      dup3\n      add\n        /* \"#utility.yul\":11238:11272   */\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":3110:3144  RoyaltyAccrued(trackId, msg.value) */\n      0xe03872bdffa6568df2cc485cf9f211d60a716c99c5633e1edc87102d16112500\n      swap2\n        /* \"#utility.yul\":11177:11195   */\n      add\n        /* \"GumdropsAlbumNFT1.sol\":3110:3144  RoyaltyAccrued(trackId, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GumdropsAlbumNFT1.sol\":2959:3148  {... */\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2890:3148  function accumulateRoyalty(uint256 trackId) public payable onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_277:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_280\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_281)\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":2252:2844  function purchaseShares(uint256 trackId, uint256 numShares) public payable {... */\n    tag_148:\n        /* \"GumdropsAlbumNFT1.sol\":2330:2349  Track storage track */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":2352:2367  tracks[trackId] */\n      dup3\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":2352:2358  tracks */\n      0x09\n        /* \"GumdropsAlbumNFT1.sol\":2352:2367  tracks[trackId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GumdropsAlbumNFT1.sol\":2378:2395  track.isAvailable */\n      0x04\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"GumdropsAlbumNFT1.sol\":2370:2419  require(track.isAvailable, \"Track not available\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11974:11976   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":2370:2419  require(track.isAvailable, \"Track not available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11956:11977   */\n      mstore\n        /* \"#utility.yul\":12013:12015   */\n      0x13\n        /* \"#utility.yul\":11993:12011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11986:12016   */\n      mstore\n      shl(0x68, 0x547261636b206e6f7420617661696c61626c65)\n        /* \"#utility.yul\":12032:12050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12025:12074   */\n      mstore\n        /* \"#utility.yul\":12091:12109   */\n      0x64\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2370:2419  require(track.isAvailable, \"Track not available\") */\n      tag_195\n        /* \"#utility.yul\":11772:12115   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":2370:2419  require(track.isAvailable, \"Track not available\") */\n    tag_287:\n        /* \"GumdropsAlbumNFT1.sol\":2442:2443  0 */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":2430:2439  numShares */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":2430:2443  numShares > 0 */\n      gt\n        /* \"GumdropsAlbumNFT1.sol\":2430:2481  numShares > 0 && numShares <= track.sharesRemaining */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2460:2465  track */\n      dup1\n        /* \"GumdropsAlbumNFT1.sol\":2460:2481  track.sharesRemaining */\n      0x03\n      add\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":2447:2456  numShares */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":2447:2481  numShares <= track.sharesRemaining */\n      gt\n      iszero\n        /* \"GumdropsAlbumNFT1.sol\":2430:2481  numShares > 0 && numShares <= track.sharesRemaining */\n    tag_290:\n        /* \"GumdropsAlbumNFT1.sol\":2422:2509  require(numShares > 0 && numShares <= track.sharesRemaining, \"Invalid number ofshares\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12322:12324   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":2422:2509  require(numShares > 0 && numShares <= track.sharesRemaining, \"Invalid number ofshares\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12304:12325   */\n      mstore\n        /* \"#utility.yul\":12361:12363   */\n      0x17\n        /* \"#utility.yul\":12341:12359   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12334:12364   */\n      mstore\n      shl(0x48, 0x496e76616c6964206e756d626572206f66736861726573)\n        /* \"#utility.yul\":12380:12398   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12373:12426   */\n      mstore\n        /* \"#utility.yul\":12443:12461   */\n      0x64\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2422:2509  require(numShares > 0 && numShares <= track.sharesRemaining, \"Invalid number ofshares\") */\n      tag_195\n        /* \"#utility.yul\":12120:12467   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":2422:2509  require(numShares > 0 && numShares <= track.sharesRemaining, \"Invalid number ofshares\") */\n    tag_291:\n        /* \"GumdropsAlbumNFT1.sol\":2545:2564  track.pricePerShare */\n      0x02\n      dup2\n      add\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":2533:2564  numShares * track.pricePerShare */\n      tag_294\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2533:2542  numShares */\n      dup4\n        /* \"GumdropsAlbumNFT1.sol\":2533:2564  numShares * track.pricePerShare */\n      tag_207\n      jump\t// in\n    tag_294:\n        /* \"GumdropsAlbumNFT1.sol\":2533:2571  numShares * track.pricePerShare * 1e16 */\n      tag_295\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2567:2571  1e16 */\n      0x2386f26fc10000\n        /* \"GumdropsAlbumNFT1.sol\":2533:2571  numShares * track.pricePerShare * 1e16 */\n      tag_207\n      jump\t// in\n    tag_295:\n        /* \"GumdropsAlbumNFT1.sol\":2520:2529  msg.value */\n      callvalue\n        /* \"GumdropsAlbumNFT1.sol\":2520:2571  msg.value >= numShares * track.pricePerShare * 1e16 */\n      lt\n      iszero\n        /* \"GumdropsAlbumNFT1.sol\":2512:2596  require(msg.value >= numShares * track.pricePerShare * 1e16, \"Insufficient payment\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12674:12676   */\n      0x20\n        /* \"GumdropsAlbumNFT1.sol\":2512:2596  require(msg.value >= numShares * track.pricePerShare * 1e16, \"Insufficient payment\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12656:12677   */\n      mstore\n        /* \"#utility.yul\":12713:12715   */\n      0x14\n        /* \"#utility.yul\":12693:12711   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12686:12716   */\n      mstore\n      shl(0x62, 0x125b9cdd59999a58da595b9d081c185e5b595b9d)\n        /* \"#utility.yul\":12732:12750   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12725:12775   */\n      mstore\n        /* \"#utility.yul\":12792:12810   */\n      0x64\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2512:2596  require(msg.value >= numShares * track.pricePerShare * 1e16, \"Insufficient payment\") */\n      tag_195\n        /* \"#utility.yul\":12472:12816   */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":2512:2596  require(msg.value >= numShares * track.pricePerShare * 1e16, \"Insufficient payment\") */\n    tag_296:\n        /* \"GumdropsAlbumNFT1.sol\":2645:2655  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":2624:2656  track.shareOwnership[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":2624:2644  track.shareOwnership */\n      0x06\n      dup3\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2624:2656  track.shareOwnership[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"GumdropsAlbumNFT1.sol\":2624:2669  track.shareOwnership[msg.sender] += numShares */\n      dup1\n      sload\n        /* \"GumdropsAlbumNFT1.sol\":2660:2669  numShares */\n      dup5\n      swap3\n        /* \"GumdropsAlbumNFT1.sol\":2624:2656  track.shareOwnership[msg.sender] */\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2624:2669  track.shareOwnership[msg.sender] += numShares */\n      tag_299\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2660:2669  numShares */\n      dup5\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2624:2669  track.shareOwnership[msg.sender] += numShares */\n      tag_273\n      jump\t// in\n    tag_299:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2697:2706  numShares */\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":2672:2677  track */\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":2672:2693  track.sharesRemaining */\n      0x03\n      add\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":2672:2706  track.sharesRemaining -= numShares */\n      dup3\n      dup3\n      sload\n      tag_300\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_300:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x06)\n        /* \"GumdropsAlbumNFT1.sol\":2750:2786  payable(owner()).transfer(msg.value) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"GumdropsAlbumNFT1.sol\":2776:2785  msg.value */\n      callvalue\n        /* \"GumdropsAlbumNFT1.sol\":2750:2786  payable(owner()).transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"GumdropsAlbumNFT1.sol\":2776:2785  msg.value */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"GumdropsAlbumNFT1.sol\":2750:2786  payable(owner()).transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2794:2840  SharePurchased(trackId, msg.sender, numShares) */\n      0xa5afafc7c052a234f91512f360beeb7b6db7a0692bbd017ab5632d80a03a4bc0\n        /* \"GumdropsAlbumNFT1.sol\":2809:2816  trackId */\n      dup4\n        /* \"GumdropsAlbumNFT1.sol\":2818:2828  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":2830:2839  numShares */\n      dup5\n        /* \"GumdropsAlbumNFT1.sol\":2794:2840  SharePurchased(trackId, msg.sender, numShares) */\n      mload(0x40)\n      tag_304\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GumdropsAlbumNFT1.sol\":2327:2844  {... */\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2252:2844  function purchaseShares(uint256 trackId, uint256 numShares) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_307\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":1787:2219  function createTrack(string memory _title, string memory _isrc) public onlyOwner {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_313:\n        /* \"GumdropsAlbumNFT1.sol\":1871:1886  uint256 trackId */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":1889:1912  _trackCounter.current() */\n      tag_315\n        /* \"GumdropsAlbumNFT1.sol\":1889:1902  _trackCounter */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":1889:1912  _trackCounter.current() */\n    tag_315:\n        /* \"GumdropsAlbumNFT1.sol\":1871:1912  uint256 trackId = _trackCounter.current() */\n      swap1\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":1915:1945  _safeMint(msg.sender, trackId) */\n      tag_316\n        /* \"GumdropsAlbumNFT1.sol\":1925:1935  msg.sender */\n      caller\n        /* \"GumdropsAlbumNFT1.sol\":1937:1944  trackId */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":1915:1924  _safeMint */\n      tag_317\n        /* \"GumdropsAlbumNFT1.sol\":1915:1945  _safeMint(msg.sender, trackId) */\n      jump\t// in\n    tag_316:\n        /* \"GumdropsAlbumNFT1.sol\":1948:1967  Track storage track */\n      0x00\n        /* \"GumdropsAlbumNFT1.sol\":1970:1985  tracks[trackId] */\n      dup2\n      dup2\n      mstore\n        /* \"GumdropsAlbumNFT1.sol\":1970:1976  tracks */\n      0x09\n        /* \"GumdropsAlbumNFT1.sol\":1970:1985  tracks[trackId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n        /* \"GumdropsAlbumNFT1.sol\":1988:2008  track.title = _title */\n      tag_318\n        /* \"GumdropsAlbumNFT1.sol\":2002:2008  _title */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":1970:1985  tracks[trackId] */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":1988:2008  track.title = _title */\n      tag_319\n      jump\t// in\n    tag_318:\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":2011:2021  track.isrc */\n      0x01\n      dup2\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2011:2029  track.isrc = _isrc */\n      tag_320\n        /* \"GumdropsAlbumNFT1.sol\":2024:2029  _isrc */\n      dup5\n        /* \"GumdropsAlbumNFT1.sol\":2011:2021  track.isrc */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":2011:2029  track.isrc = _isrc */\n      tag_319\n      jump\t// in\n    tag_320:\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":846:850  1250 */\n      0x04e2\n        /* \"GumdropsAlbumNFT1.sol\":2032:2051  track.pricePerShare */\n      0x02\n      dup3\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2032:2069  track.pricePerShare = SHARE_PRICE_USD */\n      dup2\n      swap1\n      sstore\n        /* \"GumdropsAlbumNFT1.sol\":2072:2093  track.sharesRemaining */\n      0x03\n      dup3\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2072:2116  track.sharesRemaining = MAX_SHARES_PER_TRACK */\n      sstore\n        /* \"GumdropsAlbumNFT1.sol\":2119:2136  track.isAvailable */\n      0x04\n      dup2\n      add\n        /* \"GumdropsAlbumNFT1.sol\":2119:2143  track.isAvailable = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"GumdropsAlbumNFT1.sol\":2139:2143  true */\n      0x01\n        /* \"GumdropsAlbumNFT1.sol\":2119:2143  track.isAvailable = true */\n      or\n      swap1\n      sstore\n        /* \"GumdropsAlbumNFT1.sol\":2146:2171  _trackCounter.increment() */\n      tag_321\n        /* \"GumdropsAlbumNFT1.sol\":2146:2159  _trackCounter */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"GumdropsAlbumNFT1.sol\":2146:2171  _trackCounter.increment() */\n    tag_321:\n        /* \"GumdropsAlbumNFT1.sol\":2179:2215  TrackCreated(trackId, _title, _isrc) */\n      0x21579433a032855e20e8afc48e980ddae0b6285e4aa03370f03192be12bea28b\n        /* \"GumdropsAlbumNFT1.sol\":2192:2199  trackId */\n      dup3\n        /* \"GumdropsAlbumNFT1.sol\":2201:2207  _title */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":2209:2214  _isrc */\n      dup6\n        /* \"GumdropsAlbumNFT1.sol\":2179:2215  TrackCreated(trackId, _title, _isrc) */\n      mload(0x40)\n      tag_323\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GumdropsAlbumNFT1.sol\":1868:2219  {... */\n      pop\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":1787:2219  function createTrack(string memory _title, string memory _isrc) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2116:2329  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2218:2222  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2241:2282  interfaceId == type(IERC2981).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x152a902d)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2241:2322  interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId) */\n      tag_165\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2322  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2310:2321  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2309  super.supportsInterface */\n      tag_328\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":2286:2322  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3156:3161  10000 */\n      0x2710\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3576:3602  feeNumerator > denominator */\n      dup3\n      and\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      mload(0x40)\n      shl(0xe0, 0x6f483d09)\n      dup2\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":15617:15656   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15599:15657   */\n      mstore\n        /* \"#utility.yul\":15673:15691   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15666:15700   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":15572:15590   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3679:3734  ERC2981InvalidDefaultRoyalty(feeNumerator, denominator) */\n      tag_195\n        /* \"#utility.yul\":15426:15706   */\n      jump\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3572:3745  if (feeNumerator > denominator) {... */\n    tag_337:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3758:3780  receiver == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3848:3849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3803:3851  ERC2981InvalidDefaultRoyaltyReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x5b6cc805)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3754:3862  if (receiver == address(0)) {... */\n    tag_340:\n      pop\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3894:3929  RoyaltyInfo(receiver, feeNumerator) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup1\n      dup4\n      mstore\n      sub(shl(0x60, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      0x20\n      swap1\n      swap3\n      add\n      dup3\n      swap1\n      mstore\n      shl(0xa0, 0x01)\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n      swap1\n      swap2\n      mul\n      or\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3891  _defaultRoyaltyInfo */\n      0x07\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3872:3929  _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator) */\n      sstore\n        /* \"@openzeppelin/contracts/token/common/ERC2981.sol\":3429:3936  function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2572:2597   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2545:2563   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_195\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_359:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_360\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x06\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_265:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_370\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_371\n      jump\t// in\n    tag_370:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_373\n      swap2\n      dup2\n      add\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      0x01\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_375\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_380\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_379)\n    tag_380:\n      0x60\n      swap2\n      pop\n    tag_379:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_375:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GumdropsAlbumNFT1.sol\":1568:1752  function _baseURI() internal pure override returns (string memory) {... */\n    tag_279:\n        /* \"GumdropsAlbumNFT1.sol\":1620:1633  string memory */\n      0x60\n        /* \"GumdropsAlbumNFT1.sol\":1638:1748  return... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x64\n      dup2\n      mstore\n      0x20\n      add\n      data_7771773f702b4e939e4f13bb3109b5b3069fc424947ed7997233d08ce9476e9b\n      0x64\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"GumdropsAlbumNFT1.sol\":1568:1752  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_389\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_390\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      dup2\n      gt\n      iszero\n      tag_392\n      jumpi\n      tag_392\n      tag_393\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_394\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_394:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_395:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_395\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_406\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_165\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_412\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_414\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_415\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_416\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_417\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_416:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_413:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_422\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_423\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_422:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_214\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2572:2597   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2545:2563   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_195\n        /* \"#utility.yul\":2426:2603   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_425:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3530:3562   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3512:3563   */\n      mstore\n        /* \"#utility.yul\":3579:3597   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3572:3606   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3485:3503   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_195\n        /* \"#utility.yul\":3338:3612   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_430\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_436\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_436:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_439\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_442\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_442:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_445\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_450\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_451\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_423:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_458\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_457\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_457\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_458\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_458:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_451:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_461\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_461:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_463\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_463:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n        /* \"#utility.yul\":14:145   */\n    tag_466:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_35:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_480:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_281\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_466\n      jump\t// in\n        /* \"#utility.yul\":592:765   */\n    tag_467:\n        /* \"#utility.yul\":660:680   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":709:740   */\n      dup2\n      and\n        /* \"#utility.yul\":699:741   */\n      dup2\n      eq\n        /* \"#utility.yul\":689:759   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":755:756   */\n      0x00\n        /* \"#utility.yul\":752:753   */\n      dup1\n        /* \"#utility.yul\":745:757   */\n      revert\n        /* \"#utility.yul\":689:759   */\n    tag_484:\n        /* \"#utility.yul\":592:765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":770:1136   */\n    tag_42:\n        /* \"#utility.yul\":837:843   */\n      0x00\n        /* \"#utility.yul\":845:851   */\n      dup1\n        /* \"#utility.yul\":898:900   */\n      0x40\n        /* \"#utility.yul\":886:895   */\n      dup4\n        /* \"#utility.yul\":877:884   */\n      dup6\n        /* \"#utility.yul\":873:896   */\n      sub\n        /* \"#utility.yul\":869:901   */\n      slt\n        /* \"#utility.yul\":866:918   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":911:912   */\n      dup1\n        /* \"#utility.yul\":904:916   */\n      revert\n        /* \"#utility.yul\":866:918   */\n    tag_486:\n        /* \"#utility.yul\":937:966   */\n      tag_487\n        /* \"#utility.yul\":956:965   */\n      dup4\n        /* \"#utility.yul\":937:966   */\n      tag_467\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":927:966   */\n      swap2\n      pop\n        /* \"#utility.yul\":1016:1018   */\n      0x20\n        /* \"#utility.yul\":1005:1014   */\n      dup4\n        /* \"#utility.yul\":1001:1019   */\n      add\n        /* \"#utility.yul\":988:1020   */\n      calldataload\n      sub(shl(0x60, 0x01), 0x01)\n        /* \"#utility.yul\":1053:1058   */\n      dup2\n        /* \"#utility.yul\":1049:1087   */\n      and\n        /* \"#utility.yul\":1042:1047   */\n      dup2\n        /* \"#utility.yul\":1039:1088   */\n      eq\n        /* \"#utility.yul\":1029:1106   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":1102:1103   */\n      0x00\n        /* \"#utility.yul\":1099:1100   */\n      dup1\n        /* \"#utility.yul\":1092:1104   */\n      revert\n        /* \"#utility.yul\":1029:1106   */\n    tag_488:\n        /* \"#utility.yul\":1125:1130   */\n      dup1\n        /* \"#utility.yul\":1115:1130   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":770:1136   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1441   */\n    tag_468:\n        /* \"#utility.yul\":1194:1197   */\n      0x00\n        /* \"#utility.yul\":1232:1237   */\n      dup2\n        /* \"#utility.yul\":1226:1238   */\n      mload\n        /* \"#utility.yul\":1259:1265   */\n      dup1\n        /* \"#utility.yul\":1254:1257   */\n      dup5\n        /* \"#utility.yul\":1247:1266   */\n      mstore\n        /* \"#utility.yul\":1315:1321   */\n      dup1\n        /* \"#utility.yul\":1308:1312   */\n      0x20\n        /* \"#utility.yul\":1301:1306   */\n      dup5\n        /* \"#utility.yul\":1297:1313   */\n      add\n        /* \"#utility.yul\":1290:1294   */\n      0x20\n        /* \"#utility.yul\":1285:1288   */\n      dup7\n        /* \"#utility.yul\":1281:1295   */\n      add\n        /* \"#utility.yul\":1275:1322   */\n      mcopy\n        /* \"#utility.yul\":1367:1368   */\n      0x00\n        /* \"#utility.yul\":1360:1364   */\n      0x20\n        /* \"#utility.yul\":1351:1357   */\n      dup3\n        /* \"#utility.yul\":1346:1349   */\n      dup7\n        /* \"#utility.yul\":1342:1358   */\n      add\n        /* \"#utility.yul\":1338:1365   */\n      add\n        /* \"#utility.yul\":1331:1369   */\n      mstore\n        /* \"#utility.yul\":1430:1434   */\n      0x20\n        /* \"#utility.yul\":1423:1425   */\n      0x1f\n        /* \"#utility.yul\":1419:1426   */\n      not\n        /* \"#utility.yul\":1414:1416   */\n      0x1f\n        /* \"#utility.yul\":1406:1412   */\n      dup4\n        /* \"#utility.yul\":1402:1417   */\n      add\n        /* \"#utility.yul\":1398:1427   */\n      and\n        /* \"#utility.yul\":1393:1396   */\n      dup6\n        /* \"#utility.yul\":1389:1428   */\n      add\n        /* \"#utility.yul\":1385:1435   */\n      add\n        /* \"#utility.yul\":1378:1435   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1141:1441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1446:1677   */\n    tag_48:\n        /* \"#utility.yul\":1595:1597   */\n      0x20\n        /* \"#utility.yul\":1584:1593   */\n      dup2\n        /* \"#utility.yul\":1577:1598   */\n      mstore\n        /* \"#utility.yul\":1558:1562   */\n      0x00\n        /* \"#utility.yul\":1615:1671   */\n      tag_281\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1656:1665   */\n      dup4\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1615:1671   */\n      tag_468\n      jump\t// in\n        /* \"#utility.yul\":1682:1908   */\n    tag_52:\n        /* \"#utility.yul\":1741:1747   */\n      0x00\n        /* \"#utility.yul\":1794:1796   */\n      0x20\n        /* \"#utility.yul\":1782:1791   */\n      dup3\n        /* \"#utility.yul\":1773:1780   */\n      dup5\n        /* \"#utility.yul\":1769:1792   */\n      sub\n        /* \"#utility.yul\":1765:1797   */\n      slt\n        /* \"#utility.yul\":1762:1814   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1807:1808   */\n      dup1\n        /* \"#utility.yul\":1800:1812   */\n      revert\n        /* \"#utility.yul\":1762:1814   */\n    tag_493:\n      pop\n        /* \"#utility.yul\":1855:1878   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1682:1908   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2116   */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2077:2109   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2059:2110   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2047:2049   */\n      0x20\n        /* \"#utility.yul\":2032:2050   */\n      add\n      swap1\n        /* \"#utility.yul\":1913:2116   */\n      jump\t// out\n        /* \"#utility.yul\":2121:2421   */\n    tag_59:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_496:\n        /* \"#utility.yul\":2289:2318   */\n      tag_497\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_467\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2279:2318   */\n      swap5\n        /* \"#utility.yul\":2387:2389   */\n      0x20\n        /* \"#utility.yul\":2372:2390   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2359:2391   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2121:2421   */\n      jump\t// out\n        /* \"#utility.yul\":2608:2982   */\n    tag_69:\n        /* \"#utility.yul\":2685:2691   */\n      0x00\n        /* \"#utility.yul\":2693:2699   */\n      dup1\n        /* \"#utility.yul\":2701:2707   */\n      0x00\n        /* \"#utility.yul\":2754:2756   */\n      0x60\n        /* \"#utility.yul\":2742:2751   */\n      dup5\n        /* \"#utility.yul\":2733:2740   */\n      dup7\n        /* \"#utility.yul\":2729:2752   */\n      sub\n        /* \"#utility.yul\":2725:2757   */\n      slt\n        /* \"#utility.yul\":2722:2774   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":2770:2771   */\n      0x00\n        /* \"#utility.yul\":2767:2768   */\n      dup1\n        /* \"#utility.yul\":2760:2772   */\n      revert\n        /* \"#utility.yul\":2722:2774   */\n    tag_500:\n        /* \"#utility.yul\":2793:2822   */\n      tag_501\n        /* \"#utility.yul\":2812:2821   */\n      dup5\n        /* \"#utility.yul\":2793:2822   */\n      tag_467\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":2783:2822   */\n      swap3\n      pop\n        /* \"#utility.yul\":2841:2879   */\n      tag_502\n        /* \"#utility.yul\":2875:2877   */\n      0x20\n        /* \"#utility.yul\":2864:2873   */\n      dup6\n        /* \"#utility.yul\":2860:2878   */\n      add\n        /* \"#utility.yul\":2841:2879   */\n      tag_467\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2608:2982   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2831:2879   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2948:2950   */\n      0x40\n        /* \"#utility.yul\":2933:2951   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2920:2952   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2608:2982   */\n      jump\t// out\n        /* \"#utility.yul\":2987:3333   */\n    tag_78:\n        /* \"#utility.yul\":3055:3061   */\n      0x00\n        /* \"#utility.yul\":3063:3069   */\n      dup1\n        /* \"#utility.yul\":3116:3118   */\n      0x40\n        /* \"#utility.yul\":3104:3113   */\n      dup4\n        /* \"#utility.yul\":3095:3102   */\n      dup6\n        /* \"#utility.yul\":3091:3114   */\n      sub\n        /* \"#utility.yul\":3087:3119   */\n      slt\n        /* \"#utility.yul\":3084:3136   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":3132:3133   */\n      0x00\n        /* \"#utility.yul\":3129:3130   */\n      dup1\n        /* \"#utility.yul\":3122:3134   */\n      revert\n        /* \"#utility.yul\":3084:3136   */\n    tag_504:\n      pop\n      pop\n        /* \"#utility.yul\":3177:3200   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3297:3299   */\n      0x20\n        /* \"#utility.yul\":3282:3300   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3269:3301   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2987:3333   */\n      jump\t// out\n        /* \"#utility.yul\":3617:3917   */\n    tag_85:\n        /* \"#utility.yul\":3685:3691   */\n      0x00\n        /* \"#utility.yul\":3693:3699   */\n      dup1\n        /* \"#utility.yul\":3746:3748   */\n      0x40\n        /* \"#utility.yul\":3734:3743   */\n      dup4\n        /* \"#utility.yul\":3725:3732   */\n      dup6\n        /* \"#utility.yul\":3721:3744   */\n      sub\n        /* \"#utility.yul\":3717:3749   */\n      slt\n        /* \"#utility.yul\":3714:3766   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":3762:3763   */\n      0x00\n        /* \"#utility.yul\":3759:3760   */\n      dup1\n        /* \"#utility.yul\":3752:3764   */\n      revert\n        /* \"#utility.yul\":3714:3766   */\n    tag_507:\n        /* \"#utility.yul\":3807:3830   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3873:3911   */\n      tag_508\n        /* \"#utility.yul\":3907:3909   */\n      0x20\n        /* \"#utility.yul\":3892:3910   */\n      dup5\n      add\n        /* \"#utility.yul\":3873:3911   */\n      tag_467\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":3863:3911   */\n      swap1\n      pop\n        /* \"#utility.yul\":3617:3917   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4108   */\n    tag_108:\n        /* \"#utility.yul\":3981:3987   */\n      0x00\n        /* \"#utility.yul\":4034:4036   */\n      0x20\n        /* \"#utility.yul\":4022:4031   */\n      dup3\n        /* \"#utility.yul\":4013:4020   */\n      dup5\n        /* \"#utility.yul\":4009:4032   */\n      sub\n        /* \"#utility.yul\":4005:4037   */\n      slt\n        /* \"#utility.yul\":4002:4054   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":4050:4051   */\n      0x00\n        /* \"#utility.yul\":4047:4048   */\n      dup1\n        /* \"#utility.yul\":4040:4052   */\n      revert\n        /* \"#utility.yul\":4002:4054   */\n    tag_510:\n        /* \"#utility.yul\":4073:4102   */\n      tag_281\n        /* \"#utility.yul\":4092:4101   */\n      dup3\n        /* \"#utility.yul\":4073:4102   */\n      tag_467\n      jump\t// in\n        /* \"#utility.yul\":4113:4460   */\n    tag_125:\n        /* \"#utility.yul\":4178:4184   */\n      0x00\n        /* \"#utility.yul\":4186:4192   */\n      dup1\n        /* \"#utility.yul\":4239:4241   */\n      0x40\n        /* \"#utility.yul\":4227:4236   */\n      dup4\n        /* \"#utility.yul\":4218:4225   */\n      dup6\n        /* \"#utility.yul\":4214:4237   */\n      sub\n        /* \"#utility.yul\":4210:4242   */\n      slt\n        /* \"#utility.yul\":4207:4259   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":4255:4256   */\n      0x00\n        /* \"#utility.yul\":4252:4253   */\n      dup1\n        /* \"#utility.yul\":4245:4257   */\n      revert\n        /* \"#utility.yul\":4207:4259   */\n    tag_513:\n        /* \"#utility.yul\":4278:4307   */\n      tag_514\n        /* \"#utility.yul\":4297:4306   */\n      dup4\n        /* \"#utility.yul\":4278:4307   */\n      tag_467\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":4268:4307   */\n      swap2\n      pop\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4346:4355   */\n      dup4\n        /* \"#utility.yul\":4342:4360   */\n      add\n        /* \"#utility.yul\":4329:4361   */\n      calldataload\n        /* \"#utility.yul\":4404:4409   */\n      dup1\n        /* \"#utility.yul\":4397:4410   */\n      iszero\n        /* \"#utility.yul\":4390:4411   */\n      iszero\n        /* \"#utility.yul\":4383:4388   */\n      dup2\n        /* \"#utility.yul\":4380:4412   */\n      eq\n        /* \"#utility.yul\":4370:4430   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":4426:4427   */\n      0x00\n        /* \"#utility.yul\":4423:4424   */\n      dup1\n        /* \"#utility.yul\":4416:4428   */\n      revert\n        /* \"#utility.yul\":4465:5168   */\n    tag_132:\n        /* \"#utility.yul\":4768:4771   */\n      0xc0\n        /* \"#utility.yul\":4757:4766   */\n      dup2\n        /* \"#utility.yul\":4750:4772   */\n      mstore\n        /* \"#utility.yul\":4731:4735   */\n      0x00\n        /* \"#utility.yul\":4795:4852   */\n      tag_517\n        /* \"#utility.yul\":4847:4850   */\n      0xc0\n        /* \"#utility.yul\":4836:4845   */\n      dup4\n        /* \"#utility.yul\":4832:4851   */\n      add\n        /* \"#utility.yul\":4824:4830   */\n      dup10\n        /* \"#utility.yul\":4795:4852   */\n      tag_468\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4900:4909   */\n      dup3\n        /* \"#utility.yul\":4892:4898   */\n      dup2\n        /* \"#utility.yul\":4888:4910   */\n      sub\n        /* \"#utility.yul\":4883:4885   */\n      0x20\n        /* \"#utility.yul\":4872:4881   */\n      dup5\n        /* \"#utility.yul\":4868:4886   */\n      add\n        /* \"#utility.yul\":4861:4911   */\n      mstore\n        /* \"#utility.yul\":4928:4972   */\n      tag_518\n        /* \"#utility.yul\":4965:4971   */\n      dup2\n        /* \"#utility.yul\":4957:4963   */\n      dup10\n        /* \"#utility.yul\":4928:4972   */\n      tag_468\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":5003:5005   */\n      0x40\n        /* \"#utility.yul\":4988:5006   */\n      dup5\n      add\n        /* \"#utility.yul\":4981:5015   */\n      swap8\n      swap1\n      swap8\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":5046:5048   */\n      0x60\n        /* \"#utility.yul\":5031:5049   */\n      dup2\n      add\n        /* \"#utility.yul\":5024:5058   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":5102:5116   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5095:5117   */\n      iszero\n        /* \"#utility.yul\":5089:5092   */\n      0x80\n        /* \"#utility.yul\":5074:5093   */\n      dup4\n      add\n        /* \"#utility.yul\":5067:5118   */\n      mstore\n        /* \"#utility.yul\":5149:5152   */\n      0xa0\n        /* \"#utility.yul\":5134:5153   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5127:5162   */\n      mstore\n        /* \"#utility.yul\":4920:4972   */\n      swap3\n        /* \"#utility.yul\":4465:5168   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5173:5300   */\n    tag_393:\n        /* \"#utility.yul\":5234:5244   */\n      0x4e487b71\n        /* \"#utility.yul\":5229:5232   */\n      0xe0\n        /* \"#utility.yul\":5225:5245   */\n      shl\n        /* \"#utility.yul\":5222:5223   */\n      0x00\n        /* \"#utility.yul\":5215:5246   */\n      mstore\n        /* \"#utility.yul\":5265:5269   */\n      0x41\n        /* \"#utility.yul\":5262:5263   */\n      0x04\n        /* \"#utility.yul\":5255:5270   */\n      mstore\n        /* \"#utility.yul\":5289:5293   */\n      0x24\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5279:5294   */\n      revert\n        /* \"#utility.yul\":5305:6020   */\n    tag_469:\n        /* \"#utility.yul\":5369:5374   */\n      0x00\n        /* \"#utility.yul\":5401:5402   */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5417:5423   */\n      dup5\n        /* \"#utility.yul\":5414:5444   */\n      gt\n        /* \"#utility.yul\":5411:5467   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":5447:5465   */\n      tag_522\n      tag_393\n      jump\t// in\n    tag_522:\n      pop\n        /* \"#utility.yul\":5602:5604   */\n      0x40\n        /* \"#utility.yul\":5596:5605   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":5515:5517   */\n      0x1f\n        /* \"#utility.yul\":5494:5509   */\n      dup6\n      add\n        /* \"#utility.yul\":5490:5519   */\n      dup2\n      and\n        /* \"#utility.yul\":5660:5662   */\n      0x3f\n        /* \"#utility.yul\":5648:5663   */\n      add\n        /* \"#utility.yul\":5644:5673   */\n      and\n        /* \"#utility.yul\":5632:5674   */\n      dup2\n      add\n        /* \"#utility.yul\":5725:5747   */\n      dup2\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5689:5723   */\n      dup3\n      gt\n        /* \"#utility.yul\":5686:5748   */\n      or\n        /* \"#utility.yul\":5683:5771   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":5751:5769   */\n      tag_524\n      tag_393\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":5787:5789   */\n      0x40\n        /* \"#utility.yul\":5780:5802   */\n      mstore\n        /* \"#utility.yul\":5835:5857   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5820:5826   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":5872:5888   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":5869:5894   */\n      dup6\n      lt\n        /* \"#utility.yul\":5866:5911   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":5907:5908   */\n      0x00\n        /* \"#utility.yul\":5904:5905   */\n      dup1\n        /* \"#utility.yul\":5897:5909   */\n      revert\n        /* \"#utility.yul\":5866:5911   */\n    tag_525:\n        /* \"#utility.yul\":5957:5963   */\n      dup4\n        /* \"#utility.yul\":5952:5955   */\n      dup4\n        /* \"#utility.yul\":5945:5949   */\n      0x20\n        /* \"#utility.yul\":5937:5943   */\n      dup4\n        /* \"#utility.yul\":5933:5950   */\n      add\n        /* \"#utility.yul\":5920:5964   */\n      calldatacopy\n        /* \"#utility.yul\":6012:6013   */\n      0x00\n        /* \"#utility.yul\":6005:6009   */\n      0x20\n        /* \"#utility.yul\":5996:6002   */\n      dup6\n        /* \"#utility.yul\":5988:5994   */\n      dup4\n        /* \"#utility.yul\":5984:6003   */\n      add\n        /* \"#utility.yul\":5980:6010   */\n      add\n        /* \"#utility.yul\":5973:6014   */\n      mstore\n      pop\n        /* \"#utility.yul\":5305:6020   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6025:6737   */\n    tag_136:\n        /* \"#utility.yul\":6120:6126   */\n      0x00\n        /* \"#utility.yul\":6128:6134   */\n      dup1\n        /* \"#utility.yul\":6136:6142   */\n      0x00\n        /* \"#utility.yul\":6144:6150   */\n      dup1\n        /* \"#utility.yul\":6197:6200   */\n      0x80\n        /* \"#utility.yul\":6185:6194   */\n      dup6\n        /* \"#utility.yul\":6176:6183   */\n      dup8\n        /* \"#utility.yul\":6172:6195   */\n      sub\n        /* \"#utility.yul\":6168:6201   */\n      slt\n        /* \"#utility.yul\":6165:6218   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":6214:6215   */\n      0x00\n        /* \"#utility.yul\":6211:6212   */\n      dup1\n        /* \"#utility.yul\":6204:6216   */\n      revert\n        /* \"#utility.yul\":6165:6218   */\n    tag_527:\n        /* \"#utility.yul\":6237:6266   */\n      tag_528\n        /* \"#utility.yul\":6256:6265   */\n      dup6\n        /* \"#utility.yul\":6237:6266   */\n      tag_467\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6227:6266   */\n      swap4\n      pop\n        /* \"#utility.yul\":6285:6323   */\n      tag_529\n        /* \"#utility.yul\":6319:6321   */\n      0x20\n        /* \"#utility.yul\":6308:6317   */\n      dup7\n        /* \"#utility.yul\":6304:6322   */\n      add\n        /* \"#utility.yul\":6285:6323   */\n      tag_467\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6275:6323   */\n      swap3\n      pop\n        /* \"#utility.yul\":6392:6394   */\n      0x40\n        /* \"#utility.yul\":6377:6395   */\n      dup6\n      add\n        /* \"#utility.yul\":6364:6396   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":6471:6473   */\n      0x60\n        /* \"#utility.yul\":6456:6474   */\n      dup6\n      add\n        /* \"#utility.yul\":6443:6475   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6487:6517   */\n      dup2\n      gt\n        /* \"#utility.yul\":6484:6534   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":6530:6531   */\n      0x00\n        /* \"#utility.yul\":6527:6528   */\n      dup1\n        /* \"#utility.yul\":6520:6532   */\n      revert\n        /* \"#utility.yul\":6484:6534   */\n    tag_530:\n        /* \"#utility.yul\":6553:6575   */\n      dup6\n      add\n        /* \"#utility.yul\":6606:6610   */\n      0x1f\n        /* \"#utility.yul\":6598:6611   */\n      dup2\n      add\n        /* \"#utility.yul\":6594:6621   */\n      dup8\n      sgt\n        /* \"#utility.yul\":6584:6639   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":6635:6636   */\n      0x00\n        /* \"#utility.yul\":6632:6633   */\n      dup1\n        /* \"#utility.yul\":6625:6637   */\n      revert\n        /* \"#utility.yul\":6584:6639   */\n    tag_531:\n        /* \"#utility.yul\":6658:6731   */\n      tag_532\n        /* \"#utility.yul\":6723:6730   */\n      dup8\n        /* \"#utility.yul\":6718:6720   */\n      dup3\n        /* \"#utility.yul\":6705:6721   */\n      calldataload\n        /* \"#utility.yul\":6700:6702   */\n      0x20\n        /* \"#utility.yul\":6696:6698   */\n      dup5\n        /* \"#utility.yul\":6692:6703   */\n      add\n        /* \"#utility.yul\":6658:6731   */\n      tag_469\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":6648:6731   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6025:6737   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6742:7002   */\n    tag_152:\n        /* \"#utility.yul\":6810:6816   */\n      0x00\n        /* \"#utility.yul\":6818:6824   */\n      dup1\n        /* \"#utility.yul\":6871:6873   */\n      0x40\n        /* \"#utility.yul\":6859:6868   */\n      dup4\n        /* \"#utility.yul\":6850:6857   */\n      dup6\n        /* \"#utility.yul\":6846:6869   */\n      sub\n        /* \"#utility.yul\":6842:6874   */\n      slt\n        /* \"#utility.yul\":6839:6891   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6884:6885   */\n      dup1\n        /* \"#utility.yul\":6877:6889   */\n      revert\n        /* \"#utility.yul\":6839:6891   */\n    tag_534:\n        /* \"#utility.yul\":6910:6939   */\n      tag_535\n        /* \"#utility.yul\":6929:6938   */\n      dup4\n        /* \"#utility.yul\":6910:6939   */\n      tag_467\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":6900:6939   */\n      swap2\n      pop\n        /* \"#utility.yul\":6958:6996   */\n      tag_508\n        /* \"#utility.yul\":6992:6994   */\n      0x20\n        /* \"#utility.yul\":6981:6990   */\n      dup5\n        /* \"#utility.yul\":6977:6995   */\n      add\n        /* \"#utility.yul\":6958:6996   */\n      tag_467\n      jump\t// in\n        /* \"#utility.yul\":7007:7228   */\n    tag_470:\n        /* \"#utility.yul\":7050:7055   */\n      0x00\n        /* \"#utility.yul\":7103:7106   */\n      dup3\n        /* \"#utility.yul\":7096:7100   */\n      0x1f\n        /* \"#utility.yul\":7088:7094   */\n      dup4\n        /* \"#utility.yul\":7084:7101   */\n      add\n        /* \"#utility.yul\":7080:7107   */\n      slt\n        /* \"#utility.yul\":7070:7125   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7118:7119   */\n      dup1\n        /* \"#utility.yul\":7111:7123   */\n      revert\n        /* \"#utility.yul\":7070:7125   */\n    tag_538:\n        /* \"#utility.yul\":7143:7222   */\n      tag_281\n        /* \"#utility.yul\":7218:7221   */\n      dup4\n        /* \"#utility.yul\":7209:7215   */\n      dup4\n        /* \"#utility.yul\":7196:7216   */\n      calldataload\n        /* \"#utility.yul\":7189:7193   */\n      0x20\n        /* \"#utility.yul\":7181:7187   */\n      dup6\n        /* \"#utility.yul\":7177:7194   */\n      add\n        /* \"#utility.yul\":7143:7222   */\n      tag_469\n      jump\t// in\n        /* \"#utility.yul\":7233:7771   */\n    tag_162:\n        /* \"#utility.yul\":7321:7327   */\n      0x00\n        /* \"#utility.yul\":7329:7335   */\n      dup1\n        /* \"#utility.yul\":7382:7384   */\n      0x40\n        /* \"#utility.yul\":7370:7379   */\n      dup4\n        /* \"#utility.yul\":7361:7368   */\n      dup6\n        /* \"#utility.yul\":7357:7380   */\n      sub\n        /* \"#utility.yul\":7353:7385   */\n      slt\n        /* \"#utility.yul\":7350:7402   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":7398:7399   */\n      0x00\n        /* \"#utility.yul\":7395:7396   */\n      dup1\n        /* \"#utility.yul\":7388:7400   */\n      revert\n        /* \"#utility.yul\":7350:7402   */\n    tag_541:\n        /* \"#utility.yul\":7438:7447   */\n      dup3\n        /* \"#utility.yul\":7425:7448   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7463:7469   */\n      dup2\n        /* \"#utility.yul\":7460:7490   */\n      gt\n        /* \"#utility.yul\":7457:7507   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":7503:7504   */\n      0x00\n        /* \"#utility.yul\":7500:7501   */\n      dup1\n        /* \"#utility.yul\":7493:7505   */\n      revert\n        /* \"#utility.yul\":7457:7507   */\n    tag_542:\n        /* \"#utility.yul\":7526:7576   */\n      tag_543\n        /* \"#utility.yul\":7568:7575   */\n      dup6\n        /* \"#utility.yul\":7559:7565   */\n      dup3\n        /* \"#utility.yul\":7548:7557   */\n      dup7\n        /* \"#utility.yul\":7544:7566   */\n      add\n        /* \"#utility.yul\":7526:7576   */\n      tag_470\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":7516:7576   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7629:7631   */\n      0x20\n        /* \"#utility.yul\":7618:7627   */\n      dup4\n        /* \"#utility.yul\":7614:7632   */\n      add\n        /* \"#utility.yul\":7601:7633   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":7648:7656   */\n      dup2\n        /* \"#utility.yul\":7645:7677   */\n      gt\n        /* \"#utility.yul\":7642:7694   */\n      iszero\n      tag_544\n      jumpi\n        /* \"#utility.yul\":7690:7691   */\n      0x00\n        /* \"#utility.yul\":7687:7688   */\n      dup1\n        /* \"#utility.yul\":7680:7692   */\n      revert\n        /* \"#utility.yul\":7642:7694   */\n    tag_544:\n        /* \"#utility.yul\":7713:7765   */\n      tag_545\n        /* \"#utility.yul\":7757:7764   */\n      dup6\n        /* \"#utility.yul\":7746:7754   */\n      dup3\n        /* \"#utility.yul\":7735:7744   */\n      dup7\n        /* \"#utility.yul\":7731:7755   */\n      add\n        /* \"#utility.yul\":7713:7765   */\n      tag_470\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":7703:7765   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7233:7771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7776:8156   */\n    tag_175:\n        /* \"#utility.yul\":7855:7856   */\n      0x01\n        /* \"#utility.yul\":7851:7863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7898:7910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7919:7980   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":7973:7977   */\n      0x7f\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7961:7978   */\n      and\n        /* \"#utility.yul\":7951:7978   */\n      swap2\n      pop\n        /* \"#utility.yul\":7919:7980   */\n    tag_547:\n        /* \"#utility.yul\":8026:8028   */\n      0x20\n        /* \"#utility.yul\":8018:8024   */\n      dup3\n        /* \"#utility.yul\":8015:8029   */\n      lt\n        /* \"#utility.yul\":7995:8013   */\n      dup2\n        /* \"#utility.yul\":7992:8030   */\n      sub\n        /* \"#utility.yul\":7989:8150   */\n      tag_548\n      jumpi\n        /* \"#utility.yul\":8072:8082   */\n      0x4e487b71\n        /* \"#utility.yul\":8067:8070   */\n      0xe0\n        /* \"#utility.yul\":8063:8083   */\n      shl\n        /* \"#utility.yul\":8060:8061   */\n      0x00\n        /* \"#utility.yul\":8053:8084   */\n      mstore\n        /* \"#utility.yul\":8107:8111   */\n      0x22\n        /* \"#utility.yul\":8104:8105   */\n      0x04\n        /* \"#utility.yul\":8097:8112   */\n      mstore\n        /* \"#utility.yul\":8135:8139   */\n      0x24\n        /* \"#utility.yul\":8132:8133   */\n      0x00\n        /* \"#utility.yul\":8125:8140   */\n      revert\n        /* \"#utility.yul\":7989:8150   */\n    tag_548:\n      pop\n        /* \"#utility.yul\":7776:8156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8537:8664   */\n    tag_471:\n        /* \"#utility.yul\":8598:8608   */\n      0x4e487b71\n        /* \"#utility.yul\":8593:8596   */\n      0xe0\n        /* \"#utility.yul\":8589:8609   */\n      shl\n        /* \"#utility.yul\":8586:8587   */\n      0x00\n        /* \"#utility.yul\":8579:8610   */\n      mstore\n        /* \"#utility.yul\":8629:8633   */\n      0x11\n        /* \"#utility.yul\":8626:8627   */\n      0x04\n        /* \"#utility.yul\":8619:8634   */\n      mstore\n        /* \"#utility.yul\":8653:8657   */\n      0x24\n        /* \"#utility.yul\":8650:8651   */\n      0x00\n        /* \"#utility.yul\":8643:8658   */\n      revert\n        /* \"#utility.yul\":8669:8837   */\n    tag_207:\n        /* \"#utility.yul\":8742:8751   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8773:8782   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8790:8805   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8784:8806   */\n      dup5\n      eq\n        /* \"#utility.yul\":8770:8807   */\n      or\n        /* \"#utility.yul\":8760:8831   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":8811:8829   */\n      tag_165\n      tag_471\n      jump\t// in\n        /* \"#utility.yul\":8974:9191   */\n    tag_209:\n        /* \"#utility.yul\":9014:9015   */\n      0x00\n        /* \"#utility.yul\":9040:9041   */\n      dup3\n        /* \"#utility.yul\":9030:9162   */\n      tag_556\n      jumpi\n        /* \"#utility.yul\":9084:9094   */\n      0x4e487b71\n        /* \"#utility.yul\":9079:9082   */\n      0xe0\n        /* \"#utility.yul\":9075:9095   */\n      shl\n        /* \"#utility.yul\":9072:9073   */\n      0x00\n        /* \"#utility.yul\":9065:9096   */\n      mstore\n        /* \"#utility.yul\":9119:9123   */\n      0x12\n        /* \"#utility.yul\":9116:9117   */\n      0x04\n        /* \"#utility.yul\":9109:9124   */\n      mstore\n        /* \"#utility.yul\":9147:9151   */\n      0x24\n        /* \"#utility.yul\":9144:9145   */\n      0x00\n        /* \"#utility.yul\":9137:9152   */\n      revert\n        /* \"#utility.yul\":9030:9162   */\n    tag_556:\n      pop\n        /* \"#utility.yul\":9176:9185   */\n      div\n      swap1\n        /* \"#utility.yul\":8974:9191   */\n      jump\t// out\n        /* \"#utility.yul\":10008:10136   */\n    tag_226:\n        /* \"#utility.yul\":10075:10084   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10096:10107   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10093:10130   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":10110:10128   */\n      tag_165\n      tag_471\n      jump\t// in\n        /* \"#utility.yul\":10141:10486   */\n    tag_230:\n        /* \"#utility.yul\":10343:10368   */\n      swap3\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10404:10436   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":10399:10401   */\n      0x20\n        /* \"#utility.yul\":10384:10402   */\n      dup4\n      add\n        /* \"#utility.yul\":10377:10437   */\n      mstore\n        /* \"#utility.yul\":10468:10470   */\n      0x40\n        /* \"#utility.yul\":10453:10471   */\n      dup3\n      add\n        /* \"#utility.yul\":10446:10480   */\n      mstore\n        /* \"#utility.yul\":10331:10333   */\n      0x60\n        /* \"#utility.yul\":10316:10334   */\n      add\n      swap1\n        /* \"#utility.yul\":10141:10486   */\n      jump\t// out\n        /* \"#utility.yul\":10900:11025   */\n    tag_273:\n        /* \"#utility.yul\":10965:10974   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10986:10996   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10983:11019   */\n      iszero\n      tag_165\n      jumpi\n        /* \"#utility.yul\":10999:11017   */\n      tag_165\n      tag_471\n      jump\t// in\n        /* \"#utility.yul\":11283:11495   */\n    tag_472:\n        /* \"#utility.yul\":11325:11328   */\n      0x00\n        /* \"#utility.yul\":11363:11368   */\n      dup2\n        /* \"#utility.yul\":11357:11369   */\n      mload\n        /* \"#utility.yul\":11407:11413   */\n      dup1\n        /* \"#utility.yul\":11400:11404   */\n      0x20\n        /* \"#utility.yul\":11393:11398   */\n      dup5\n        /* \"#utility.yul\":11389:11405   */\n      add\n        /* \"#utility.yul\":11384:11387   */\n      dup6\n        /* \"#utility.yul\":11378:11414   */\n      mcopy\n        /* \"#utility.yul\":11469:11470   */\n      0x00\n        /* \"#utility.yul\":11433:11449   */\n      swap4\n      add\n        /* \"#utility.yul\":11458:11471   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":11433:11449   */\n      swap1\n      swap2\n        /* \"#utility.yul\":11283:11495   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11500:11767   */\n    tag_285:\n        /* \"#utility.yul\":11679:11682   */\n      0x00\n        /* \"#utility.yul\":11704:11761   */\n      tag_458\n        /* \"#utility.yul\":11730:11760   */\n      tag_571\n        /* \"#utility.yul\":11756:11759   */\n      dup4\n        /* \"#utility.yul\":11748:11754   */\n      dup7\n        /* \"#utility.yul\":11730:11760   */\n      tag_472\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11722:11728   */\n      dup5\n        /* \"#utility.yul\":11704:11761   */\n      tag_472\n      jump\t// in\n        /* \"#utility.yul\":12947:13465   */\n    tag_474:\n        /* \"#utility.yul\":13049:13051   */\n      0x1f\n        /* \"#utility.yul\":13044:13047   */\n      dup3\n        /* \"#utility.yul\":13041:13052   */\n      gt\n        /* \"#utility.yul\":13038:13459   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":13085:13090   */\n      dup1\n        /* \"#utility.yul\":13082:13083   */\n      0x00\n        /* \"#utility.yul\":13075:13091   */\n      mstore\n        /* \"#utility.yul\":13129:13133   */\n      0x20\n        /* \"#utility.yul\":13126:13127   */\n      0x00\n        /* \"#utility.yul\":13116:13134   */\n      keccak256\n        /* \"#utility.yul\":13199:13201   */\n      0x1f\n        /* \"#utility.yul\":13187:13197   */\n      dup5\n        /* \"#utility.yul\":13183:13202   */\n      add\n        /* \"#utility.yul\":13180:13181   */\n      0x05\n        /* \"#utility.yul\":13176:13203   */\n      shr\n        /* \"#utility.yul\":13170:13174   */\n      dup2\n        /* \"#utility.yul\":13166:13204   */\n      add\n        /* \"#utility.yul\":13235:13239   */\n      0x20\n        /* \"#utility.yul\":13223:13233   */\n      dup6\n        /* \"#utility.yul\":13220:13240   */\n      lt\n        /* \"#utility.yul\":13217:13264   */\n      iszero\n      tag_578\n      jumpi\n      pop\n        /* \"#utility.yul\":13258:13262   */\n      dup1\n        /* \"#utility.yul\":13217:13264   */\n    tag_578:\n        /* \"#utility.yul\":13313:13315   */\n      0x1f\n        /* \"#utility.yul\":13308:13311   */\n      dup5\n        /* \"#utility.yul\":13304:13316   */\n      add\n        /* \"#utility.yul\":13301:13302   */\n      0x05\n        /* \"#utility.yul\":13297:13317   */\n      shr\n        /* \"#utility.yul\":13291:13295   */\n      dup3\n        /* \"#utility.yul\":13287:13318   */\n      add\n        /* \"#utility.yul\":13277:13318   */\n      swap2\n      pop\n        /* \"#utility.yul\":13368:13449   */\n    tag_579:\n        /* \"#utility.yul\":13386:13388   */\n      dup2\n        /* \"#utility.yul\":13379:13384   */\n      dup2\n        /* \"#utility.yul\":13376:13389   */\n      lt\n        /* \"#utility.yul\":13368:13449   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":13445:13446   */\n      0x00\n        /* \"#utility.yul\":13431:13447   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13412:13413   */\n      0x01\n        /* \"#utility.yul\":13401:13414   */\n      add\n        /* \"#utility.yul\":13368:13449   */\n      jump(tag_579)\n        /* \"#utility.yul\":13641:14940   */\n    tag_319:\n        /* \"#utility.yul\":13767:13770   */\n      dup2\n        /* \"#utility.yul\":13761:13771   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":13786:13792   */\n      dup2\n        /* \"#utility.yul\":13783:13813   */\n      gt\n        /* \"#utility.yul\":13780:13836   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":13816:13834   */\n      tag_585\n      tag_393\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":13845:13942   */\n      tag_586\n        /* \"#utility.yul\":13935:13941   */\n      dup2\n        /* \"#utility.yul\":13895:13933   */\n      tag_587\n        /* \"#utility.yul\":13927:13931   */\n      dup5\n        /* \"#utility.yul\":13921:13932   */\n      sload\n        /* \"#utility.yul\":13895:13933   */\n      tag_175\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":13889:13893   */\n      dup5\n        /* \"#utility.yul\":13845:13942   */\n      tag_474\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13991:13995   */\n      0x20\n        /* \"#utility.yul\":14022:14024   */\n      0x1f\n        /* \"#utility.yul\":14011:14025   */\n      dup3\n      gt\n        /* \"#utility.yul\":14039:14040   */\n      0x01\n        /* \"#utility.yul\":14034:14683   */\n      dup2\n      eq\n      tag_589\n      jumpi\n        /* \"#utility.yul\":14727:14728   */\n      0x00\n        /* \"#utility.yul\":14744:14750   */\n      dup4\n        /* \"#utility.yul\":14741:14830   */\n      iszero\n      tag_590\n      jumpi\n      pop\n        /* \"#utility.yul\":14796:14815   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":14790:14816   */\n      mload\n        /* \"#utility.yul\":14741:14830   */\n    tag_590:\n      not(0x00)\n        /* \"#utility.yul\":13598:13599   */\n      0x03\n        /* \"#utility.yul\":13594:13605   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":13590:13614   */\n      shr\n        /* \"#utility.yul\":13586:13615   */\n      not\n        /* \"#utility.yul\":13576:13616   */\n      and\n        /* \"#utility.yul\":13622:13623   */\n      0x01\n        /* \"#utility.yul\":13618:13629   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":13573:13630   */\n      or\n        /* \"#utility.yul\":14843:14924   */\n      dup5\n      sstore\n        /* \"#utility.yul\":14004:14934   */\n      jump(tag_385)\n        /* \"#utility.yul\":14034:14683   */\n    tag_589:\n        /* \"#utility.yul\":12894:12895   */\n      0x00\n        /* \"#utility.yul\":12887:12901   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":12931:12935   */\n      0x20\n        /* \"#utility.yul\":12918:12936   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":14070:14090   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":14188:14410   */\n    tag_593:\n        /* \"#utility.yul\":14202:14209   */\n      dup3\n        /* \"#utility.yul\":14199:14200   */\n      dup2\n        /* \"#utility.yul\":14196:14210   */\n      lt\n        /* \"#utility.yul\":14188:14410   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":14284:14303   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":14278:14304   */\n      mload\n        /* \"#utility.yul\":14263:14305   */\n      dup3\n      sstore\n        /* \"#utility.yul\":14391:14395   */\n      0x20\n        /* \"#utility.yul\":14376:14396   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":14344:14345   */\n      0x01\n        /* \"#utility.yul\":14332:14346   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":14218:14230   */\n      add\n        /* \"#utility.yul\":14188:14410   */\n      jump(tag_593)\n    tag_595:\n        /* \"#utility.yul\":14192:14195   */\n      pop\n        /* \"#utility.yul\":14438:14444   */\n      dup5\n        /* \"#utility.yul\":14429:14436   */\n      dup3\n        /* \"#utility.yul\":14426:14445   */\n      lt\n        /* \"#utility.yul\":14423:14624   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":14499:14518   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":14493:14519   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":14582:14583   */\n      0x03\n        /* \"#utility.yul\":14578:14592   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":14594:14597   */\n      0xf8\n        /* \"#utility.yul\":14574:14598   */\n      and\n        /* \"#utility.yul\":14570:14607   */\n      shr\n        /* \"#utility.yul\":14566:14608   */\n      not\n        /* \"#utility.yul\":14551:14609   */\n      and\n        /* \"#utility.yul\":14536:14610   */\n      dup2\n      sstore\n        /* \"#utility.yul\":14423:14624   */\n    tag_596:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14670:14671   */\n      0x01\n        /* \"#utility.yul\":14654:14668   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":14650:14672   */\n      add\n        /* \"#utility.yul\":14637:14673   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":13641:14940   */\n      jump\t// out\n        /* \"#utility.yul\":14945:15421   */\n    tag_324:\n        /* \"#utility.yul\":15170:15176   */\n      dup4\n        /* \"#utility.yul\":15159:15168   */\n      dup2\n        /* \"#utility.yul\":15152:15177   */\n      mstore\n        /* \"#utility.yul\":15213:15215   */\n      0x60\n        /* \"#utility.yul\":15208:15210   */\n      0x20\n        /* \"#utility.yul\":15197:15206   */\n      dup3\n        /* \"#utility.yul\":15193:15211   */\n      add\n        /* \"#utility.yul\":15186:15216   */\n      mstore\n        /* \"#utility.yul\":15133:15137   */\n      0x00\n        /* \"#utility.yul\":15239:15295   */\n      tag_598\n        /* \"#utility.yul\":15291:15293   */\n      0x60\n        /* \"#utility.yul\":15280:15289   */\n      dup4\n        /* \"#utility.yul\":15276:15294   */\n      add\n        /* \"#utility.yul\":15268:15274   */\n      dup6\n        /* \"#utility.yul\":15239:15295   */\n      tag_468\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":15343:15352   */\n      dup3\n        /* \"#utility.yul\":15335:15341   */\n      dup2\n        /* \"#utility.yul\":15331:15353   */\n      sub\n        /* \"#utility.yul\":15326:15328   */\n      0x40\n        /* \"#utility.yul\":15315:15324   */\n      dup5\n        /* \"#utility.yul\":15311:15329   */\n      add\n        /* \"#utility.yul\":15304:15354   */\n      mstore\n        /* \"#utility.yul\":15371:15415   */\n      tag_599\n        /* \"#utility.yul\":15408:15414   */\n      dup2\n        /* \"#utility.yul\":15400:15406   */\n      dup6\n        /* \"#utility.yul\":15371:15415   */\n      tag_468\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":15363:15415   */\n      swap7\n        /* \"#utility.yul\":14945:15421   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15711:16207   */\n    tag_371:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15942:15974   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":15924:15975   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16011:16043   */\n      dup5\n      and\n        /* \"#utility.yul\":16006:16008   */\n      0x20\n        /* \"#utility.yul\":15991:16009   */\n      dup3\n      add\n        /* \"#utility.yul\":15984:16044   */\n      mstore\n        /* \"#utility.yul\":16075:16077   */\n      0x40\n        /* \"#utility.yul\":16060:16078   */\n      dup2\n      add\n        /* \"#utility.yul\":16053:16087   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16123:16126   */\n      0x80\n        /* \"#utility.yul\":16118:16120   */\n      0x60\n        /* \"#utility.yul\":16103:16121   */\n      dup3\n      add\n        /* \"#utility.yul\":16096:16127   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":16144:16201   */\n      tag_599\n      swap1\n        /* \"#utility.yul\":16181:16200   */\n      dup4\n      add\n        /* \"#utility.yul\":16173:16179   */\n      dup5\n        /* \"#utility.yul\":16144:16201   */\n      tag_468\n      jump\t// in\n        /* \"#utility.yul\":16212:16461   */\n    tag_374:\n        /* \"#utility.yul\":16281:16287   */\n      0x00\n        /* \"#utility.yul\":16334:16336   */\n      0x20\n        /* \"#utility.yul\":16322:16331   */\n      dup3\n        /* \"#utility.yul\":16313:16320   */\n      dup5\n        /* \"#utility.yul\":16309:16332   */\n      sub\n        /* \"#utility.yul\":16305:16337   */\n      slt\n        /* \"#utility.yul\":16302:16354   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":16350:16351   */\n      0x00\n        /* \"#utility.yul\":16347:16348   */\n      dup1\n        /* \"#utility.yul\":16340:16352   */\n      revert\n        /* \"#utility.yul\":16302:16354   */\n    tag_604:\n        /* \"#utility.yul\":16382:16391   */\n      dup2\n        /* \"#utility.yul\":16376:16392   */\n      mload\n        /* \"#utility.yul\":16401:16431   */\n      tag_281\n        /* \"#utility.yul\":16425:16430   */\n      dup2\n        /* \"#utility.yul\":16401:16431   */\n      tag_466\n      jump\t// in\n    stop\n    data_7771773f702b4e939e4f13bb3109b5b3069fc424947ed7997233d08ce9476e9b 68747470733a2f2f696e686572656e742d736361726c65742d746172736965722e6d7966696c65626173652e636f6d2f697066732f516d5035674e44766f5245477859345842547468413933733436595775333459656b3569733650677a67576770472f\n\n    auxdata: 0xa2646970667358221220cc50976b0df94dd12a9ee7c6a94e938982609508a82e8eb79645b7b724f3580e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3386": {
									"entryPoint": null,
									"id": 3386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 410,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_feeDenominator_1611": {
									"entryPoint": null,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1742": {
									"entryPoint": null,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setDefaultRoyalty_1657": {
									"entryPoint": 457,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 246,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setRoyaltyInfo_3710": {
									"entryPoint": 327,
									"id": 3710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 349,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint96t_address_fromMemory": {
									"entryPoint": 619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3605:16",
										"nodeType": "YulBlock",
										"src": "0:3605:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "111:366:16",
													"nodeType": "YulBlock",
													"src": "111:366:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "157:16:16",
																"nodeType": "YulBlock",
																"src": "157:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "166:1:16",
																					"nodeType": "YulLiteral",
																					"src": "166:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "169:1:16",
																					"nodeType": "YulLiteral",
																					"src": "169:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "159:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "159:6:16"
																			},
																			"nativeSrc": "159:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "159:12:16"
																		},
																		"nativeSrc": "159:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "159:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "132:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "132:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "141:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "141:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "128:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "128:3:16"
																		},
																		"nativeSrc": "128:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "128:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "153:2:16",
																		"nodeType": "YulLiteral",
																		"src": "153:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "124:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "124:3:16"
																},
																"nativeSrc": "124:32:16",
																"nodeType": "YulFunctionCall",
																"src": "124:32:16"
															},
															"nativeSrc": "121:52:16",
															"nodeType": "YulIf",
															"src": "121:52:16"
														},
														{
															"nativeSrc": "182:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "182:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "201:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "201:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "195:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "195:5:16"
																},
																"nativeSrc": "195:16:16",
																"nodeType": "YulFunctionCall",
																"src": "195:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "186:5:16",
																	"nodeType": "YulTypedName",
																	"src": "186:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "273:16:16",
																"nodeType": "YulBlock",
																"src": "273:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "282:1:16",
																					"nodeType": "YulLiteral",
																					"src": "282:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "285:1:16",
																					"nodeType": "YulLiteral",
																					"src": "285:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "275:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "275:6:16"
																			},
																			"nativeSrc": "275:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "275:12:16"
																		},
																		"nativeSrc": "275:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "275:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "233:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "233:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "244:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "244:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "259:2:16",
																										"nodeType": "YulLiteral",
																										"src": "259:2:16",
																										"type": "",
																										"value": "96"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "263:1:16",
																										"nodeType": "YulLiteral",
																										"src": "263:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "255:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "255:3:16"
																								},
																								"nativeSrc": "255:10:16",
																								"nodeType": "YulFunctionCall",
																								"src": "255:10:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "267:1:16",
																								"nodeType": "YulLiteral",
																								"src": "267:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "251:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "251:3:16"
																						},
																						"nativeSrc": "251:18:16",
																						"nodeType": "YulFunctionCall",
																						"src": "251:18:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "240:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "240:3:16"
																				},
																				"nativeSrc": "240:30:16",
																				"nodeType": "YulFunctionCall",
																				"src": "240:30:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "230:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "230:2:16"
																		},
																		"nativeSrc": "230:41:16",
																		"nodeType": "YulFunctionCall",
																		"src": "230:41:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:16"
																},
																"nativeSrc": "223:49:16",
																"nodeType": "YulFunctionCall",
																"src": "223:49:16"
															},
															"nativeSrc": "220:69:16",
															"nodeType": "YulIf",
															"src": "220:69:16"
														},
														{
															"nativeSrc": "298:15:16",
															"nodeType": "YulAssignment",
															"src": "298:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "308:5:16",
																"nodeType": "YulIdentifier",
																"src": "308:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "298:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:16"
																}
															]
														},
														{
															"nativeSrc": "322:40:16",
															"nodeType": "YulVariableDeclaration",
															"src": "322:40:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "347:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "347:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "358:2:16",
																				"nodeType": "YulLiteral",
																				"src": "358:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "343:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "343:3:16"
																		},
																		"nativeSrc": "343:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "343:18:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "337:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "337:5:16"
																},
																"nativeSrc": "337:25:16",
																"nodeType": "YulFunctionCall",
																"src": "337:25:16"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "326:7:16",
																	"nodeType": "YulTypedName",
																	"src": "326:7:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:16:16",
																"nodeType": "YulBlock",
																"src": "429:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "438:1:16",
																					"nodeType": "YulLiteral",
																					"src": "438:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "441:1:16",
																					"nodeType": "YulLiteral",
																					"src": "441:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "431:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "431:6:16"
																			},
																			"nativeSrc": "431:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "431:12:16"
																		},
																		"nativeSrc": "431:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "431:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "384:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "397:7:16",
																						"nodeType": "YulIdentifier",
																						"src": "397:7:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "414:3:16",
																										"nodeType": "YulLiteral",
																										"src": "414:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "419:1:16",
																										"nodeType": "YulLiteral",
																										"src": "419:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "410:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "410:3:16"
																								},
																								"nativeSrc": "410:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "410:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "423:1:16",
																								"nodeType": "YulLiteral",
																								"src": "423:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "406:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "406:3:16"
																						},
																						"nativeSrc": "406:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "406:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "393:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "393:3:16"
																				},
																				"nativeSrc": "393:33:16",
																				"nodeType": "YulFunctionCall",
																				"src": "393:33:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "381:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "381:2:16"
																		},
																		"nativeSrc": "381:46:16",
																		"nodeType": "YulFunctionCall",
																		"src": "381:46:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "374:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:16"
																},
																"nativeSrc": "374:54:16",
																"nodeType": "YulFunctionCall",
																"src": "374:54:16"
															},
															"nativeSrc": "371:74:16",
															"nodeType": "YulIf",
															"src": "371:74:16"
														},
														{
															"nativeSrc": "454:17:16",
															"nodeType": "YulAssignment",
															"src": "454:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "464:7:16",
																"nodeType": "YulIdentifier",
																"src": "464:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "454:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "454:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_address_fromMemory",
												"nativeSrc": "14:463:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "69:9:16",
														"nodeType": "YulTypedName",
														"src": "69:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "80:7:16",
														"nodeType": "YulTypedName",
														"src": "80:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "92:6:16",
														"nodeType": "YulTypedName",
														"src": "92:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "100:6:16",
														"nodeType": "YulTypedName",
														"src": "100:6:16",
														"type": ""
													}
												],
												"src": "14:463:16"
											},
											{
												"body": {
													"nativeSrc": "514:95:16",
													"nodeType": "YulBlock",
													"src": "514:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "531:1:16",
																		"nodeType": "YulLiteral",
																		"src": "531:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "538:3:16",
																				"nodeType": "YulLiteral",
																				"src": "538:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "543:10:16",
																				"nodeType": "YulLiteral",
																				"src": "543:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "534:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:16"
																		},
																		"nativeSrc": "534:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "534:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "524:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:16"
																},
																"nativeSrc": "524:31:16",
																"nodeType": "YulFunctionCall",
																"src": "524:31:16"
															},
															"nativeSrc": "524:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "524:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "571:1:16",
																		"nodeType": "YulLiteral",
																		"src": "571:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:4:16",
																		"nodeType": "YulLiteral",
																		"src": "574:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "564:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:16"
																},
																"nativeSrc": "564:15:16",
																"nodeType": "YulFunctionCall",
																"src": "564:15:16"
															},
															"nativeSrc": "564:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "564:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "595:1:16",
																		"nodeType": "YulLiteral",
																		"src": "595:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "598:4:16",
																		"nodeType": "YulLiteral",
																		"src": "598:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:16"
																},
																"nativeSrc": "588:15:16",
																"nodeType": "YulFunctionCall",
																"src": "588:15:16"
															},
															"nativeSrc": "588:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "588:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "482:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "482:127:16"
											},
											{
												"body": {
													"nativeSrc": "669:325:16",
													"nodeType": "YulBlock",
													"src": "669:325:16",
													"statements": [
														{
															"nativeSrc": "679:22:16",
															"nodeType": "YulAssignment",
															"src": "679:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "693:1:16",
																		"nodeType": "YulLiteral",
																		"src": "693:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "696:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "696:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "689:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "689:3:16"
																},
																"nativeSrc": "689:12:16",
																"nodeType": "YulFunctionCall",
																"src": "689:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:16"
																}
															]
														},
														{
															"nativeSrc": "710:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "710:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "740:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "746:1:16",
																		"nodeType": "YulLiteral",
																		"src": "746:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "736:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "736:3:16"
																},
																"nativeSrc": "736:12:16",
																"nodeType": "YulFunctionCall",
																"src": "736:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "714:18:16",
																	"nodeType": "YulTypedName",
																	"src": "714:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "787:31:16",
																"nodeType": "YulBlock",
																"src": "787:31:16",
																"statements": [
																	{
																		"nativeSrc": "789:27:16",
																		"nodeType": "YulAssignment",
																		"src": "789:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "803:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "803:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "811:4:16",
																					"nodeType": "YulLiteral",
																					"src": "811:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "799:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "799:3:16"
																			},
																			"nativeSrc": "799:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "799:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "789:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "789:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "767:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "767:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "760:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "760:6:16"
																},
																"nativeSrc": "760:26:16",
																"nodeType": "YulFunctionCall",
																"src": "760:26:16"
															},
															"nativeSrc": "757:61:16",
															"nodeType": "YulIf",
															"src": "757:61:16"
														},
														{
															"body": {
																"nativeSrc": "877:111:16",
																"nodeType": "YulBlock",
																"src": "877:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "898:1:16",
																					"nodeType": "YulLiteral",
																					"src": "898:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "905:3:16",
																							"nodeType": "YulLiteral",
																							"src": "905:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "910:10:16",
																							"nodeType": "YulLiteral",
																							"src": "910:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "901:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "901:3:16"
																					},
																					"nativeSrc": "901:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "901:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "891:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:16"
																			},
																			"nativeSrc": "891:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "891:31:16"
																		},
																		"nativeSrc": "891:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "891:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:16",
																					"nodeType": "YulLiteral",
																					"src": "942:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:16",
																					"nodeType": "YulLiteral",
																					"src": "945:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "935:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "935:6:16"
																			},
																			"nativeSrc": "935:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "935:15:16"
																		},
																		"nativeSrc": "935:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "935:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "970:1:16",
																					"nodeType": "YulLiteral",
																					"src": "970:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "973:4:16",
																					"nodeType": "YulLiteral",
																					"src": "973:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "963:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:16"
																			},
																			"nativeSrc": "963:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "963:15:16"
																		},
																		"nativeSrc": "963:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "963:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "833:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "833:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "856:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "856:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "864:2:16",
																				"nodeType": "YulLiteral",
																				"src": "864:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "853:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "853:2:16"
																		},
																		"nativeSrc": "853:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "853:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "830:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "830:2:16"
																},
																"nativeSrc": "830:38:16",
																"nodeType": "YulFunctionCall",
																"src": "830:38:16"
															},
															"nativeSrc": "827:161:16",
															"nodeType": "YulIf",
															"src": "827:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "614:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "649:4:16",
														"nodeType": "YulTypedName",
														"src": "649:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "658:6:16",
														"nodeType": "YulTypedName",
														"src": "658:6:16",
														"type": ""
													}
												],
												"src": "614:380:16"
											},
											{
												"body": {
													"nativeSrc": "1055:65:16",
													"nodeType": "YulBlock",
													"src": "1055:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1072:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1072:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1075:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1065:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:16"
																},
																"nativeSrc": "1065:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1065:14:16"
															},
															"nativeSrc": "1065:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "1065:14:16"
														},
														{
															"nativeSrc": "1088:26:16",
															"nodeType": "YulAssignment",
															"src": "1088:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1106:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1106:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1109:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1109:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1096:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1096:9:16"
																},
																"nativeSrc": "1096:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1096:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1088:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1088:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "999:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1038:3:16",
														"nodeType": "YulTypedName",
														"src": "1038:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1046:4:16",
														"nodeType": "YulTypedName",
														"src": "1046:4:16",
														"type": ""
													}
												],
												"src": "999:121:16"
											},
											{
												"body": {
													"nativeSrc": "1206:437:16",
													"nodeType": "YulBlock",
													"src": "1206:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1239:398:16",
																"nodeType": "YulBlock",
																"src": "1239:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1260:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1260:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1263:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "1263:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1253:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:16"
																			},
																			"nativeSrc": "1253:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1253:16:16"
																		},
																		"nativeSrc": "1253:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1253:16:16"
																	},
																	{
																		"nativeSrc": "1282:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1307:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1294:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1294:9:16"
																			},
																			"nativeSrc": "1294:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1294:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1286:4:16",
																				"nodeType": "YulTypedName",
																				"src": "1286:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1325:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1325:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1348:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "1348:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1358:1:16",
																							"nodeType": "YulLiteral",
																							"src": "1358:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1365:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "1365:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1377:2:16",
																									"nodeType": "YulLiteral",
																									"src": "1377:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1361:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1361:3:16"
																							},
																							"nativeSrc": "1361:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1361:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1354:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1354:3:16"
																					},
																					"nativeSrc": "1354:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1354:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1344:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1344:3:16"
																			},
																			"nativeSrc": "1344:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1344:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1329:11:16",
																				"nodeType": "YulTypedName",
																				"src": "1329:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1419:23:16",
																			"nodeType": "YulBlock",
																			"src": "1419:23:16",
																			"statements": [
																				{
																					"nativeSrc": "1421:19:16",
																					"nodeType": "YulAssignment",
																					"src": "1421:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1436:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "1436:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1421:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "1421:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1401:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "1401:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1413:4:16",
																					"nodeType": "YulLiteral",
																					"src": "1413:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1398:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1398:2:16"
																			},
																			"nativeSrc": "1398:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1398:20:16"
																		},
																		"nativeSrc": "1395:47:16",
																		"nodeType": "YulIf",
																		"src": "1395:47:16"
																	},
																	{
																		"nativeSrc": "1455:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1455:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1469:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "1469:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1479:1:16",
																							"nodeType": "YulLiteral",
																							"src": "1479:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1486:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1486:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1491:2:16",
																									"nodeType": "YulLiteral",
																									"src": "1491:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1482:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1482:3:16"
																							},
																							"nativeSrc": "1482:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1482:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1475:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1475:3:16"
																					},
																					"nativeSrc": "1475:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1475:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1465:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1465:3:16"
																			},
																			"nativeSrc": "1465:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1465:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1459:2:16",
																				"nodeType": "YulTypedName",
																				"src": "1459:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1509:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1509:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1522:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "1522:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1513:5:16",
																				"nodeType": "YulTypedName",
																				"src": "1513:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1607:20:16",
																			"nodeType": "YulBlock",
																			"src": "1607:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1616:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "1616:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1623:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1623:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1609:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "1609:6:16"
																						},
																						"nativeSrc": "1609:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1609:16:16"
																					},
																					"nativeSrc": "1609:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "1609:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1557:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "1557:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1564:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "1564:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1554:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "1554:2:16"
																			},
																			"nativeSrc": "1554:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1554:13:16"
																		},
																		"nativeSrc": "1546:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1568:26:16",
																			"nodeType": "YulBlock",
																			"src": "1568:26:16",
																			"statements": [
																				{
																					"nativeSrc": "1570:22:16",
																					"nodeType": "YulAssignment",
																					"src": "1570:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1583:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "1583:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1590:1:16",
																								"nodeType": "YulLiteral",
																								"src": "1590:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1579:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1579:3:16"
																						},
																						"nativeSrc": "1579:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1579:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1570:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "1570:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1550:3:16",
																			"nodeType": "YulBlock",
																			"src": "1550:3:16",
																			"statements": []
																		},
																		"src": "1546:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1222:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1222:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1219:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1219:2:16"
																},
																"nativeSrc": "1219:11:16",
																"nodeType": "YulFunctionCall",
																"src": "1219:11:16"
															},
															"nativeSrc": "1216:421:16",
															"nodeType": "YulIf",
															"src": "1216:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1125:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1178:5:16",
														"nodeType": "YulTypedName",
														"src": "1178:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1185:3:16",
														"nodeType": "YulTypedName",
														"src": "1185:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1190:10:16",
														"nodeType": "YulTypedName",
														"src": "1190:10:16",
														"type": ""
													}
												],
												"src": "1125:518:16"
											},
											{
												"body": {
													"nativeSrc": "1733:81:16",
													"nodeType": "YulBlock",
													"src": "1733:81:16",
													"statements": [
														{
															"nativeSrc": "1743:65:16",
															"nodeType": "YulAssignment",
															"src": "1743:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1758:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1758:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1776:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1776:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1779:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "1779:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1772:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1772:3:16"
																								},
																								"nativeSrc": "1772:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1772:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1789:1:16",
																										"nodeType": "YulLiteral",
																										"src": "1789:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1785:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1785:3:16"
																								},
																								"nativeSrc": "1785:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "1785:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1768:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1768:3:16"
																						},
																						"nativeSrc": "1768:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1768:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1764:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1764:3:16"
																				},
																				"nativeSrc": "1764:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1764:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1754:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:16"
																		},
																		"nativeSrc": "1754:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1800:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1800:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1803:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1803:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1796:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:16"
																		},
																		"nativeSrc": "1796:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1796:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1751:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1751:2:16"
																},
																"nativeSrc": "1751:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1751:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1743:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1743:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1648:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1710:4:16",
														"nodeType": "YulTypedName",
														"src": "1710:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1716:3:16",
														"nodeType": "YulTypedName",
														"src": "1716:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1724:4:16",
														"nodeType": "YulTypedName",
														"src": "1724:4:16",
														"type": ""
													}
												],
												"src": "1648:166:16"
											},
											{
												"body": {
													"nativeSrc": "1915:1203:16",
													"nodeType": "YulBlock",
													"src": "1915:1203:16",
													"statements": [
														{
															"nativeSrc": "1925:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1925:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1945:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1945:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1939:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1939:5:16"
																},
																"nativeSrc": "1939:10:16",
																"nodeType": "YulFunctionCall",
																"src": "1939:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1929:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1929:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1992:22:16",
																"nodeType": "YulBlock",
																"src": "1992:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1994:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1994:16:16"
																			},
																			"nativeSrc": "1994:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1994:18:16"
																		},
																		"nativeSrc": "1994:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1994:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1964:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1980:2:16",
																						"nodeType": "YulLiteral",
																						"src": "1980:2:16",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1984:1:16",
																						"nodeType": "YulLiteral",
																						"src": "1984:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1976:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:16"
																				},
																				"nativeSrc": "1976:10:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1988:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1988:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1972:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:16"
																		},
																		"nativeSrc": "1972:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:18:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1961:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1961:2:16"
																},
																"nativeSrc": "1961:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1961:30:16"
															},
															"nativeSrc": "1958:56:16",
															"nodeType": "YulIf",
															"src": "1958:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2067:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2067:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2105:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2105:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2099:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2099:5:16"
																				},
																				"nativeSrc": "2099:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2099:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2073:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "2073:25:16"
																		},
																		"nativeSrc": "2073:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2113:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2113:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2023:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2023:43:16"
																},
																"nativeSrc": "2023:97:16",
																"nodeType": "YulFunctionCall",
																"src": "2023:97:16"
															},
															"nativeSrc": "2023:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "2023:97:16"
														},
														{
															"nativeSrc": "2129:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2129:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2146:1:16",
																"nodeType": "YulLiteral",
																"src": "2146:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2133:9:16",
																	"nodeType": "YulTypedName",
																	"src": "2133:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2156:17:16",
															"nodeType": "YulAssignment",
															"src": "2156:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2169:4:16",
																"nodeType": "YulLiteral",
																"src": "2169:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2156:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "2156:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2219:642:16",
																		"nodeType": "YulBlock",
																		"src": "2219:642:16",
																		"statements": [
																			{
																				"nativeSrc": "2233:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2233:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2252:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2252:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2264:2:16",
																									"nodeType": "YulLiteral",
																									"src": "2264:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2260:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2260:3:16"
																							},
																							"nativeSrc": "2260:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2260:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2248:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2248:3:16"
																					},
																					"nativeSrc": "2248:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2248:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2237:7:16",
																						"nodeType": "YulTypedName",
																						"src": "2237:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2281:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2281:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2325:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "2325:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2295:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "2295:29:16"
																					},
																					"nativeSrc": "2295:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2295:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2285:6:16",
																						"nodeType": "YulTypedName",
																						"src": "2285:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2343:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2343:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2352:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2352:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2347:1:16",
																						"nodeType": "YulTypedName",
																						"src": "2347:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2423:165:16",
																					"nodeType": "YulBlock",
																					"src": "2423:165:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2448:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2448:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2466:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "2466:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2471:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "2471:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2462:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "2462:3:16"
																												},
																												"nativeSrc": "2462:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "2462:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2456:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "2456:5:16"
																										},
																										"nativeSrc": "2456:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2456:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2441:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2441:6:16"
																								},
																								"nativeSrc": "2441:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2441:42:16"
																							},
																							"nativeSrc": "2441:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "2441:42:16"
																						},
																						{
																							"nativeSrc": "2500:24:16",
																							"nodeType": "YulAssignment",
																							"src": "2500:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2514:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2514:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2522:1:16",
																										"nodeType": "YulLiteral",
																										"src": "2522:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2510:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2510:3:16"
																								},
																								"nativeSrc": "2510:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2510:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2500:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2500:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2541:33:16",
																							"nodeType": "YulAssignment",
																							"src": "2541:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2558:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "2558:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2569:4:16",
																										"nodeType": "YulLiteral",
																										"src": "2569:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2554:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2554:3:16"
																								},
																								"nativeSrc": "2554:20:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2554:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2541:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "2541:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2377:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "2377:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2380:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "2380:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2374:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2374:2:16"
																					},
																					"nativeSrc": "2374:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2374:14:16"
																				},
																				"nativeSrc": "2366:222:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2389:21:16",
																					"nodeType": "YulBlock",
																					"src": "2389:21:16",
																					"statements": [
																						{
																							"nativeSrc": "2391:17:16",
																							"nodeType": "YulAssignment",
																							"src": "2391:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2400:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "2400:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2403:4:16",
																										"nodeType": "YulLiteral",
																										"src": "2403:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2396:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2396:3:16"
																								},
																								"nativeSrc": "2396:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2396:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2391:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "2391:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2370:3:16",
																					"nodeType": "YulBlock",
																					"src": "2370:3:16",
																					"statements": []
																				},
																				"src": "2366:222:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "2636:166:16",
																					"nodeType": "YulBlock",
																					"src": "2636:166:16",
																					"statements": [
																						{
																							"nativeSrc": "2654:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2654:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2681:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "2681:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2686:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "2686:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2677:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "2677:3:16"
																										},
																										"nativeSrc": "2677:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2677:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2671:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "2671:5:16"
																								},
																								"nativeSrc": "2671:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2671:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2658:9:16",
																									"nodeType": "YulTypedName",
																									"src": "2658:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2721:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "2721:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2733:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "2733:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2760:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "2760:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2763:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "2763:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2756:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "2756:3:16"
																																		},
																																		"nativeSrc": "2756:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2756:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2772:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "2772:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2752:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "2752:3:16"
																																},
																																"nativeSrc": "2752:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "2752:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2782:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "2782:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2778:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "2778:3:16"
																																},
																																"nativeSrc": "2778:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "2778:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2748:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "2748:3:16"
																														},
																														"nativeSrc": "2748:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "2748:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2744:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "2744:3:16"
																												},
																												"nativeSrc": "2744:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "2744:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2729:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "2729:3:16"
																										},
																										"nativeSrc": "2729:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2729:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2714:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "2714:6:16"
																								},
																								"nativeSrc": "2714:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2714:74:16"
																							},
																							"nativeSrc": "2714:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "2714:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2607:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "2607:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2616:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "2616:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2604:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "2604:2:16"
																					},
																					"nativeSrc": "2604:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2604:19:16"
																				},
																				"nativeSrc": "2601:201:16",
																				"nodeType": "YulIf",
																				"src": "2601:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2822:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "2822:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2836:1:16",
																											"nodeType": "YulLiteral",
																											"src": "2836:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2839:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "2839:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2832:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "2832:3:16"
																									},
																									"nativeSrc": "2832:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "2832:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2848:1:16",
																									"nodeType": "YulLiteral",
																									"src": "2848:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2828:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2828:3:16"
																							},
																							"nativeSrc": "2828:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2828:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2815:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2815:6:16"
																					},
																					"nativeSrc": "2815:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2815:36:16"
																				},
																				"nativeSrc": "2815:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "2815:36:16"
																			}
																		]
																	},
																	"nativeSrc": "2212:649:16",
																	"nodeType": "YulCase",
																	"src": "2212:649:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2217:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2878:234:16",
																		"nodeType": "YulBlock",
																		"src": "2878:234:16",
																		"statements": [
																			{
																				"nativeSrc": "2892:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2892:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2905:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2905:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2896:5:16",
																						"nodeType": "YulTypedName",
																						"src": "2896:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2941:67:16",
																					"nodeType": "YulBlock",
																					"src": "2941:67:16",
																					"statements": [
																						{
																							"nativeSrc": "2959:35:16",
																							"nodeType": "YulAssignment",
																							"src": "2959:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2978:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "2978:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2983:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "2983:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2974:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "2974:3:16"
																										},
																										"nativeSrc": "2974:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "2974:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2968:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "2968:5:16"
																								},
																								"nativeSrc": "2968:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "2968:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2959:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "2959:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2922:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "2922:6:16"
																				},
																				"nativeSrc": "2919:89:16",
																				"nodeType": "YulIf",
																				"src": "2919:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3028:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "3028:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3087:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "3087:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3094:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "3094:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3034:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "3034:52:16"
																							},
																							"nativeSrc": "3034:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3034:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3021:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3021:6:16"
																					},
																					"nativeSrc": "3021:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3021:81:16"
																				},
																				"nativeSrc": "3021:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3021:81:16"
																			}
																		]
																	},
																	"nativeSrc": "2870:242:16",
																	"nodeType": "YulCase",
																	"src": "2870:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2192:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2192:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2200:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2200:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2189:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2189:2:16"
																},
																"nativeSrc": "2189:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2189:14:16"
															},
															"nativeSrc": "2182:930:16",
															"nodeType": "YulSwitch",
															"src": "2182:930:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1819:1299:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1900:4:16",
														"nodeType": "YulTypedName",
														"src": "1900:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1906:3:16",
														"nodeType": "YulTypedName",
														"src": "1906:3:16",
														"type": ""
													}
												],
												"src": "1819:1299:16"
											},
											{
												"body": {
													"nativeSrc": "3224:102:16",
													"nodeType": "YulBlock",
													"src": "3224:102:16",
													"statements": [
														{
															"nativeSrc": "3234:26:16",
															"nodeType": "YulAssignment",
															"src": "3234:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3246:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3242:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:16"
																},
																"nativeSrc": "3242:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3242:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3234:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3234:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3276:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3276:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3291:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3291:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3307:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3307:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3312:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3312:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3303:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3303:3:16"
																						},
																						"nativeSrc": "3303:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3303:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3316:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3316:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3299:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:16"
																				},
																				"nativeSrc": "3299:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3299:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3287:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:16"
																		},
																		"nativeSrc": "3287:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3269:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3269:6:16"
																},
																"nativeSrc": "3269:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3269:51:16"
															},
															"nativeSrc": "3269:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3269:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3123:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3193:9:16",
														"nodeType": "YulTypedName",
														"src": "3193:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3204:6:16",
														"nodeType": "YulTypedName",
														"src": "3204:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3215:4:16",
														"nodeType": "YulTypedName",
														"src": "3215:4:16",
														"type": ""
													}
												],
												"src": "3123:203:16"
											},
											{
												"body": {
													"nativeSrc": "3459:144:16",
													"nodeType": "YulBlock",
													"src": "3459:144:16",
													"statements": [
														{
															"nativeSrc": "3469:26:16",
															"nodeType": "YulAssignment",
															"src": "3469:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3481:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3481:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3492:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3492:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3477:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:16"
																},
																"nativeSrc": "3477:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3477:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3469:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3469:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3511:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3511:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3526:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3526:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3542:2:16",
																								"nodeType": "YulLiteral",
																								"src": "3542:2:16",
																								"type": "",
																								"value": "96"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3546:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3546:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3538:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3538:3:16"
																						},
																						"nativeSrc": "3538:10:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3538:10:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3550:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3550:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3534:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3534:3:16"
																				},
																				"nativeSrc": "3534:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3534:18:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3522:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3522:3:16"
																		},
																		"nativeSrc": "3522:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:31:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3504:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:16"
																},
																"nativeSrc": "3504:50:16",
																"nodeType": "YulFunctionCall",
																"src": "3504:50:16"
															},
															"nativeSrc": "3504:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "3504:50:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3574:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3585:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3585:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3570:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:16"
																		},
																		"nativeSrc": "3570:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3590:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3590:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3563:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:16"
																},
																"nativeSrc": "3563:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3563:34:16"
															},
															"nativeSrc": "3563:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3563:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3331:272:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3420:9:16",
														"nodeType": "YulTypedName",
														"src": "3420:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3431:6:16",
														"nodeType": "YulTypedName",
														"src": "3431:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3439:6:16",
														"nodeType": "YulTypedName",
														"src": "3439:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3450:4:16",
														"nodeType": "YulTypedName",
														"src": "3450:4:16",
														"type": ""
													}
												],
												"src": "3331:272:16"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint96t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(96, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161221738038061221783398101604081905261002e9161026b565b336040518060400160405280600e81526020016d457570686f72696120416c62756d60901b8152506040518060400160405280600381526020016254454160e81b815250815f90816100809190610351565b50600161008d8282610351565b5050506001600160a01b0381166100be57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c7816100f6565b506100d28183610147565b6100ef73a39c821c6999acc27d71882b1ca49fddfa264cca61015d565b505061040b565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61014f61019a565b61015982826101c9565b5050565b61016561019a565b6001600160a01b03811661018e57604051631e4fbdf760e01b81525f60048201526024016100b5565b610197816100f6565b50565b6006546001600160a01b031633146101c75760405163118cdaa760e01b81523360048201526024016100b5565b565b6127106001600160601b03821681101561020857604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016100b5565b6001600160a01b03831661023157604051635b6cc80560e11b81525f60048201526024016100b5565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b5f806040838503121561027c575f80fd5b82516001600160601b0381168114610292575f80fd5b60208401519092506001600160a01b03811681146102ae575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806102e157607f821691505b6020821081036102ff57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561034c57805f5260205f20601f840160051c8101602085101561032a5750805b601f840160051c820191505b81811015610349575f8155600101610336565b50505b505050565b81516001600160401b0381111561036a5761036a6102b9565b61037e8161037884546102cd565b84610305565b6020601f8211600181146103b0575f83156103995750848201515b5f19600385901b1c1916600184901b178455610349565b5f84815260208120601f198516915b828110156103df57878501518255602094850194600190920191016103bf565b50848210156103fc57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b611dff806104185f395ff3fe608060405260043610610168575f3560e01c80636352211e116100c9578063b88d4fde11610078578063b88d4fde146103f1578063bb86759f14610410578063c87b56dd14610423578063d2bcdc6014610442578063e985e9c514610455578063f2fde38b14610474578063f3720cca14610493575f80fd5b80636352211e1461031e57806370a082311461033d578063715018a61461035c5780638da5cb5b1461037057806395d89b411461038d578063a22cb465146103a1578063a2e34586146103c0575f80fd5b806323b872dd1161012557806323b872dd1461024f578063293945b41461026e5780632a55205a14610283578063343e988c146102c1578063414e80291461026e57806342842e0e146102e057806357a2eda9146102ff575f80fd5b806301ffc9a71461016c57806302fa7c47146101a057806306fdde03146101c1578063081812fc146101e2578063095ea7b31461020e57806318160ddd1461022d575b5f80fd5b348015610177575f80fd5b5061018b61018636600461172e565b6104b2565b60405190151581526020015b60405180910390f35b3480156101ab575f80fd5b506101bf6101ba366004611764565b6104c2565b005b3480156101cc575f80fd5b506101d56104d8565b60405161019791906117d2565b3480156101ed575f80fd5b506102016101fc3660046117e4565b610567565b60405161019791906117fb565b348015610219575f80fd5b506101bf61022836600461180f565b61058e565b348015610238575f80fd5b50610241610599565b604051908152602001610197565b34801561025a575f80fd5b506101bf610269366004611837565b6105a8565b348015610279575f80fd5b506102416104e281565b34801561028e575f80fd5b506102a261029d366004611871565b61063a565b604080516001600160a01b039093168352602083019190915201610197565b3480156102cc575f80fd5b506102416102db366004611891565b6106e4565b3480156102eb575f80fd5b506101bf6102fa366004611837565b610732565b34801561030a575f80fd5b506101bf6103193660046117e4565b610751565b348015610329575f80fd5b506102016103383660046117e4565b6108df565b348015610348575f80fd5b506102416103573660046118bb565b6108e9565b348015610367575f80fd5b506101bf61092e565b34801561037b575f80fd5b506006546001600160a01b0316610201565b348015610398575f80fd5b506101d5610941565b3480156103ac575f80fd5b506101bf6103bb3660046118d4565b610950565b3480156103cb575f80fd5b506103df6103da3660046117e4565b61095b565b60405161019796959493929190611902565b3480156103fc575f80fd5b506101bf61040b3660046119d5565b610aa1565b6101bf61041e3660046117e4565b610ab8565b34801561042e575f80fd5b506101d561043d3660046117e4565b610b7f565b6101bf610450366004611871565b610be4565b348015610460575f80fd5b5061018b61046f366004611a4b565b610db0565b34801561047f575f80fd5b506101bf61048e3660046118bb565b610ddd565b34801561049e575f80fd5b506101bf6104ad366004611a91565b610e1a565b5f6104bc82610ecd565b92915050565b6104ca610ef1565b6104d48282610f1e565b5050565b60605f80546104e690611af4565b80601f016020809104026020016040519081016040528092919081815260200182805461051290611af4565b801561055d5780601f106105345761010080835404028352916020019161055d565b820191905f5260205f20905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b5f61057182610fc0565b505f828152600460205260409020546001600160a01b03166104bc565b6104d4828233610ff8565b5f6105a3600a5490565b905090565b6001600160a01b0382166105da575f604051633250574960e11b81526004016105d191906117fb565b60405180910390fd5b5f6105e6838333611005565b9050836001600160a01b0316816001600160a01b031614610634576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105d1565b50505050565b5f8281526008602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916106ae5750604080518082019091526007546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906106cc906001600160601b031687611b40565b6106d69190611b57565b915196919550909350505050565b5f8281526009602090815260408083206001600160a01b0385168452600681019092528220546104e261071f82670de0b6b3a7640000611b40565b6107299190611b57565b95945050505050565b61074c83838360405180602001604052805f815250610aa1565b505050565b5f8181526009602090815260408083203384526006810190925290912054806107cc5760405162461bcd60e51b815260206004820152602760248201527f596f7520646f206e6f74206f776e20616e7920736861726573206f66207468696044820152667320747261636b60c81b60648201526084016105d1565b5f6107d784336106e4565b90505f670de0b6b3a76400008285600501546107f39190611b40565b6107fd9190611b57565b90505f811161085a5760405162461bcd60e51b815260206004820152602360248201527f4e6f20726f79616c747920617661696c61626c6520666f7220776974686472616044820152621dd85b60ea1b60648201526084016105d1565b80846005015f82825461086d9190611b76565b9091555050604051339082156108fc029083905f818181858888f1935050505015801561089c573d5f803e3d5ffd5b507fd6ce75900eecaacadb4848f3b1a4e89cba8434d748d82adab2caf1bf248b5d178533836040516108d093929190611b89565b60405180910390a15050505050565b5f6104bc82610fc0565b5f6001600160a01b038216610913575f6040516322718ad960e21b81526004016105d191906117fb565b506001600160a01b03165f9081526003602052604090205490565b610936610ef1565b61093f5f6110f7565b565b6060600180546104e690611af4565b6104d4338383611148565b60096020525f908152604090208054819061097590611af4565b80601f01602080910402602001604051908101604052809291908181526020018280546109a190611af4565b80156109ec5780601f106109c3576101008083540402835291602001916109ec565b820191905f5260205f20905b8154815290600101906020018083116109cf57829003601f168201915b505050505090806001018054610a0190611af4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d90611af4565b8015610a785780601f10610a4f57610100808354040283529160200191610a78565b820191905f5260205f20905b815481529060010190602001808311610a5b57829003601f168201915b5050506002840154600385015460048601546005909601549495919490935060ff909116915086565b610aac8484846105a8565b610634848484846111dd565b610ac0610ef1565b5f81815260096020526040902034610b2b5760405162461bcd60e51b815260206004820152602860248201527f526f79616c747920616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b60648201526084016105d1565b34816005015f828254610b3e9190611ba8565b9091555050604080518381523460208201527fe03872bdffa6568df2cc485cf9f211d60a716c99c5633e1edc87102d16112500910160405180910390a15050565b6060610b8a82610fc0565b505f610b946112f1565b90505f815111610bb25760405180602001604052805f815250610bdd565b80610bbc84611311565b604051602001610bcd929190611bd2565b6040516020818303038152906040525b9392505050565b5f828152600960205260409020600481015460ff16610c3b5760405162461bcd60e51b8152602060048201526013602482015272547261636b206e6f7420617661696c61626c6560681b60448201526064016105d1565b5f82118015610c4e575080600301548211155b610c945760405162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f6673686172657360481b60448201526064016105d1565b6002810154610ca39083611b40565b610cb490662386f26fc10000611b40565b341015610cfa5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016105d1565b335f90815260068201602052604081208054849290610d1a908490611ba8565b9250508190555081816003015f828254610d349190611b76565b90915550506006546040516001600160a01b03909116903480156108fc02915f818181858888f19350505050158015610d6f573d5f803e3d5ffd5b507fa5afafc7c052a234f91512f360beeb7b6db7a0692bbd017ab5632d80a03a4bc0833384604051610da393929190611b89565b60405180910390a1505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610de5610ef1565b6001600160a01b038116610e0e575f604051631e4fbdf760e01b81526004016105d191906117fb565b610e17816110f7565b50565b610e22610ef1565b5f610e2c600a5490565b9050610e3833826113a0565b5f81815260096020526040902080610e508582611c2a565b5060018101610e5f8482611c2a565b506104e260028201819055600382015560048101805460ff19166001179055610e8c600a80546001019055565b7f21579433a032855e20e8afc48e980ddae0b6285e4aa03370f03192be12bea28b828585604051610ebf93929190611ce4565b60405180910390a150505050565b5f6001600160e01b0319821663152a902d60e11b14806104bc57506104bc826113b9565b6006546001600160a01b0316331461093f573360405163118cdaa760e01b81526004016105d191906117fb565b6127106001600160601b038216811015610f5d57604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016105d1565b6001600160a01b038316610f86575f604051635b6cc80560e11b81526004016105d191906117fb565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b5f818152600260205260408120546001600160a01b0316806104bc57604051637e27328960e01b8152600481018490526024016105d1565b61074c8383836001611408565b5f828152600260205260408120546001600160a01b039081169083161561103157611031818486611503565b6001600160a01b0381161561106b5761104c5f855f80611408565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615611099576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166111715781604051630b61174360e31b81526004016105d191906117fb565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561063457604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061121f903390889087908790600401611d18565b6020604051808303815f875af1925050508015611259575060408051601f3d908101601f1916820190925261125691810190611d4a565b60015b6112b7573d808015611286576040519150601f19603f3d011682016040523d82523d5f602084013e61128b565b606091505b5080515f036112af5783604051633250574960e11b81526004016105d191906117fb565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146112ea5783604051633250574960e11b81526004016105d191906117fb565b5050505050565b60606040518060a0016040528060648152602001611d6660649139905090565b60605f61131d83611567565b60010190505f816001600160401b0381111561133b5761133b61194c565b6040519080825280601f01601f191660200182016040528015611365576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461136f57509392505050565b6104d4828260405180602001604052805f81525061163e565b5f6001600160e01b031982166380ac58cd60e01b14806113e957506001600160e01b03198216635b5e139f60e01b145b806104bc57506301ffc9a760e01b6001600160e01b03198316146104bc565b808061141c57506001600160a01b03821615155b156114d4575f61142b84610fc0565b90506001600160a01b038316158015906114575750826001600160a01b0316816001600160a01b031614155b801561146a57506114688184610db0565b155b1561148a578260405163a9fbf51f60e01b81526004016105d191906117fb565b81156114d25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61150e838383611654565b61074c576001600160a01b03831661153c57604051637e27328960e01b8152600481018290526024016105d1565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105d1565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115a55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106115d1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115ef57662386f26fc10000830492506010015b6305f5e1008310611607576305f5e100830492506008015b612710831061161b57612710830492506004015b6064831061162d576064830492506002015b600a83106104bc5760010192915050565b61164883836116b8565b61074c5f8484846111dd565b5f6001600160a01b038316158015906116b05750826001600160a01b0316846001600160a01b0316148061168d575061168d8484610db0565b806116b057505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b0382166116e1575f604051633250574960e11b81526004016105d191906117fb565b5f6116ed83835f611005565b90506001600160a01b0381161561074c575f6040516339e3563760e11b81526004016105d191906117fb565b6001600160e01b031981168114610e17575f80fd5b5f6020828403121561173e575f80fd5b8135610bdd81611719565b80356001600160a01b038116811461175f575f80fd5b919050565b5f8060408385031215611775575f80fd5b61177e83611749565b915060208301356001600160601b0381168114611799575f80fd5b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610bdd60208301846117a4565b5f602082840312156117f4575f80fd5b5035919050565b6001600160a01b0391909116815260200190565b5f8060408385031215611820575f80fd5b61182983611749565b946020939093013593505050565b5f805f60608486031215611849575f80fd5b61185284611749565b925061186060208501611749565b929592945050506040919091013590565b5f8060408385031215611882575f80fd5b50508035926020909101359150565b5f80604083850312156118a2575f80fd5b823591506118b260208401611749565b90509250929050565b5f602082840312156118cb575f80fd5b610bdd82611749565b5f80604083850312156118e5575f80fd5b6118ee83611749565b915060208301358015158114611799575f80fd5b60c081525f61191460c08301896117a4565b828103602084015261192681896117a4565b604084019790975250506060810193909352901515608083015260a09091015292915050565b634e487b7160e01b5f52604160045260245ffd5b5f806001600160401b038411156119795761197961194c565b50604051601f19601f85018116603f011681018181106001600160401b03821117156119a7576119a761194c565b6040528381529050808284018510156119be575f80fd5b838360208301375f60208583010152509392505050565b5f805f80608085870312156119e8575f80fd5b6119f185611749565b93506119ff60208601611749565b92506040850135915060608501356001600160401b03811115611a20575f80fd5b8501601f81018713611a30575f80fd5b611a3f87823560208401611960565b91505092959194509250565b5f8060408385031215611a5c575f80fd5b611a6583611749565b91506118b260208401611749565b5f82601f830112611a82575f80fd5b610bdd83833560208501611960565b5f8060408385031215611aa2575f80fd5b82356001600160401b03811115611ab7575f80fd5b611ac385828601611a73565b92505060208301356001600160401b03811115611ade575f80fd5b611aea85828601611a73565b9150509250929050565b600181811c90821680611b0857607f821691505b602082108103611b2657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104bc576104bc611b2c565b5f82611b7157634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156104bc576104bc611b2c565b9283526001600160a01b03919091166020830152604082015260600190565b808201808211156104bc576104bc611b2c565b5f81518060208401855e5f93019283525090919050565b5f6116b0611be08386611bbb565b84611bbb565b601f82111561074c57805f5260205f20601f840160051c81016020851015611c0b5750805b601f840160051c820191505b818110156112ea575f8155600101611c17565b81516001600160401b03811115611c4357611c4361194c565b611c5781611c518454611af4565b84611be6565b6020601f821160018114611c89575f8315611c725750848201515b5f19600385901b1c1916600184901b1784556112ea565b5f84815260208120601f198516915b82811015611cb85787850151825560209485019460019092019101611c98565b5084821015611cd557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f611cfc60608301856117a4565b8281036040840152611d0e81856117a4565b9695505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611d0e908301846117a4565b5f60208284031215611d5a575f80fd5b8151610bdd8161171956fe68747470733a2f2f696e686572656e742d736361726c65742d746172736965722e6d7966696c65626173652e636f6d2f697066732f516d5035674e44766f5245477859345842547468413933733436595775333459656b3569733650677a67576770472fa2646970667358221220cc50976b0df94dd12a9ee7c6a94e938982609508a82e8eb79645b7b724f3580e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2217 CODESIZE SUB DUP1 PUSH2 0x2217 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x26B JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x457570686F72696120416C62756D PUSH1 0x90 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x544541 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x8D DUP3 DUP3 PUSH2 0x351 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBE JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7 DUP2 PUSH2 0xF6 JUMP JUMPDEST POP PUSH2 0xD2 DUP2 DUP4 PUSH2 0x147 JUMP JUMPDEST PUSH2 0xEF PUSH20 0xA39C821C6999ACC27D71882B1CA49FDDFA264CCA PUSH2 0x15D JUMP JUMPDEST POP POP PUSH2 0x40B JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x14F PUSH2 0x19A JUMP JUMPDEST PUSH2 0x159 DUP3 DUP3 PUSH2 0x1C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x165 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x18E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0xF6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB5 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0x208 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2FF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x34C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x32A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x349 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x36A JUMPI PUSH2 0x36A PUSH2 0x2B9 JUMP JUMPDEST PUSH2 0x37E DUP2 PUSH2 0x378 DUP5 SLOAD PUSH2 0x2CD JUMP JUMPDEST DUP5 PUSH2 0x305 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3B0 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x399 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x349 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3DF JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x3BF JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x3FC JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1DFF DUP1 PUSH2 0x418 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x168 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xC9 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xBB86759F EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xD2BCDC60 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xF3720CCA EQ PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xA2E34586 EQ PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x293945B4 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x343E988C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x414E8029 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x57A2EDA9 EQ PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4E2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0xECD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 PUSH2 0xF1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x512 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x534 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x571 DUP3 PUSH2 0xFC0 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 CALLER PUSH2 0xFF8 JUMP JUMPDEST PUSH0 PUSH2 0x5A3 PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5E6 DUP4 DUP4 CALLER PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x6AE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x4E2 PUSH2 0x71F DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x74C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP1 PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206F776E20616E7920736861726573206F6620746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7320747261636B PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 CALLER PUSH2 0x6E4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH1 0x5 ADD SLOAD PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F79616C747920617661696C61626C6520666F722077697468647261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1DD85B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST DUP1 DUP5 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xD6CE75900EECAACADB4848F3B1A4E89CBA8434D748D82ADAB2CAF1BF248B5D17 DUP6 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0xFC0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x913 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x936 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x93F PUSH0 PUSH2 0x10F7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x4D4 CALLER DUP4 DUP4 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x975 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A1 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA01 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2D SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA78 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA78 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA5B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 POP DUP7 JUMP JUMPDEST PUSH2 0xAAC DUP5 DUP5 DUP5 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x634 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0xAC0 PUSH2 0xEF1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLVALUE PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST CALLVALUE DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE03872BDFFA6568DF2CC485CF9F211D60A716C99C5633E1EDC87102D16112500 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB8A DUP3 PUSH2 0xFC0 JUMP JUMPDEST POP PUSH0 PUSH2 0xB94 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBDD JUMP JUMPDEST DUP1 PUSH2 0xBBC DUP5 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBCD SWAP3 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x547261636B206E6F7420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xC4E JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C6964206E756D626572206F66736861726573 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xCA3 SWAP1 DUP4 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xCB4 SWAP1 PUSH7 0x2386F26FC10000 PUSH2 0x1B40 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD1A SWAP1 DUP5 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xA5AFAFC7C052A234F91512F360BEEB7B6DB7A0692BBD017AB5632D80A03A4BC0 DUP4 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xDE5 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE0E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0x10F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE22 PUSH2 0xEF1 JUMP JUMPDEST PUSH0 PUSH2 0xE2C PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE38 CALLER DUP3 PUSH2 0x13A0 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 PUSH2 0xE50 DUP6 DUP3 PUSH2 0x1C2A JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0xE5F DUP5 DUP3 PUSH2 0x1C2A JUMP JUMPDEST POP PUSH2 0x4E2 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE8C PUSH1 0xA DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x21579433A032855E20E8AFC48E980DDAE0B6285E4AA03370F03192BE12BEA28B DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4BC JUMPI POP PUSH2 0x4BC DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93F JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x74C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1408 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1031 DUP2 DUP5 DUP7 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x106B JUMPI PUSH2 0x104C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1099 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1171 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x121F SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1259 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1256 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x12AF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x12EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D66 PUSH1 0x64 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x131D DUP4 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x133B JUMPI PUSH2 0x133B PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1365 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x136F JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x163E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x13E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4BC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4BC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x141C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14D4 JUMPI PUSH0 PUSH2 0x142B DUP5 PUSH2 0xFC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1457 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x146A JUMPI POP PUSH2 0x1468 DUP2 DUP5 PUSH2 0xDB0 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x148A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST DUP2 ISZERO PUSH2 0x14D2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x150E DUP4 DUP4 DUP4 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x74C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x153C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x15A5 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15D1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15EF JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1607 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x161B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x162D JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4BC JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1648 DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST PUSH2 0x74C PUSH0 DUP5 DUP5 DUP5 PUSH2 0x11DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16B0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x168D JUMPI POP PUSH2 0x168D DUP5 DUP5 PUSH2 0xDB0 JUMP JUMPDEST DUP1 PUSH2 0x16B0 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH0 PUSH2 0x16ED DUP4 DUP4 PUSH0 PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x74C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBDD DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x175F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177E DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1799 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1820 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1829 DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1852 DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 POP PUSH2 0x1860 PUSH1 0x20 DUP6 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1882 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x18B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP3 PUSH2 0x1749 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18EE DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1799 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH0 PUSH2 0x1914 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x17A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1926 DUP2 DUP10 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1979 PUSH2 0x194C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A7 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x19BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19F1 DUP6 PUSH2 0x1749 JUMP JUMPDEST SWAP4 POP PUSH2 0x19FF PUSH1 0x20 DUP7 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A20 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1A30 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A3F DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A65 DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1749 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A82 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B0 PUSH2 0x1BE0 DUP4 DUP7 PUSH2 0x1BBB JUMP JUMPDEST DUP5 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x74C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C0B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EA JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C17 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C43 JUMPI PUSH2 0x1C43 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x1C57 DUP2 PUSH2 0x1C51 DUP5 SLOAD PUSH2 0x1AF4 JUMP JUMPDEST DUP5 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C89 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1C72 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x12EA JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CB8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1C98 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1CD5 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1CFC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x17A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1D0E DUP2 DUP6 PUSH2 0x17A4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1D0E SWAP1 DUP4 ADD DUP5 PUSH2 0x17A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBDD DUP2 PUSH2 0x1719 JUMP INVALID PUSH9 0x747470733A2F2F696E PUSH9 0x6572656E742D736361 PUSH19 0x6C65742D746172736965722E6D7966696C6562 PUSH2 0x7365 0x2E PUSH4 0x6F6D2F69 PUSH17 0x66732F516D5035674E44766F5245477859 CALLVALUE PC TIMESTAMP SLOAD PUSH21 0x68413933733436595775333459656B356973365067 PUSH27 0x67576770472FA2646970667358221220CC50976B0DF94DD12A9EE7 0xC6 0xA9 0x4E SWAP4 DUP10 DUP3 PUSH1 0x95 ADDMOD 0xA8 0x2E DUP15 0xB7 SWAP7 GASLIMIT 0xB7 0xB7 0x24 RETURN PC 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "286:4601:15:-:0;;;1191:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1304:10;1381:113:3;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:3;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:3;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3269:51:16;3242:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1348:59:15::2;1363:23:::0;1388:18;1348:14:::2;:59::i;:::-;1475:61;1493:42;1475:17;:61::i;:::-;1191:349:::0;;286:4601;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;4535:143:15:-;1531:13:0;:11;:13::i;:::-;4625:49:15::1;4644:9:::0;4655:18;4625::::1;:49::i;:::-;4535:143:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3269:51:16::0;3242:18;;2672:31:0::1;3123:203:16::0;2623:91:0::1;2723:28;2742:8:::0;2723:18:::1;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;3269:51:16;3242:18;;1901:40:0;3123:203:16;1851:101:0;1796:162::o;3429:507:7:-;3156:5;-1:-1:-1;;;;;3576:26:7;;;-1:-1:-1;3572:173:7;;;3679:55;;-1:-1:-1;;;3679:55:7;;-1:-1:-1;;;;;3522:31:16;;3679:55:7;;;3504:50:16;3570:18;;;3563:34;;;3477:18;;3679:55:7;3331:272:16;3572:173:7;-1:-1:-1;;;;;3758:22:7;;3754:108;;3803:48;;-1:-1:-1;;;3803:48:7;;3848:1;3803:48;;;3269:51:16;3242:18;;3803:48:7;3123:203:16;3754:108:7;-1:-1:-1;3894:35:7;;;;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;;;;;-1:-1:-1;;;3872:57:7;;;;:19;:57;3429:507::o;14:463:16:-;92:6;100;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:30:16;;230:41;;220:69;;285:1;282;275:12;220:69;358:2;343:18;;337:25;308:5;;-1:-1:-1;;;;;;393:33:16;;381:46;;371:74;;441:1;438;431:12;371:74;464:7;454:17;;;14:463;;;;;:::o;482:127::-;543:10;538:3;534:20;531:1;524:31;574:4;571:1;564:15;598:4;595:1;588:15;614:380;693:1;689:12;;;;736;;;757:61;;811:4;803:6;799:17;789:27;;757:61;864:2;856:6;853:14;833:18;830:38;827:161;;910:10;905:3;901:20;898:1;891:31;945:4;942:1;935:15;973:4;970:1;963:15;827:161;;614:380;;;:::o;1125:518::-;1227:2;1222:3;1219:11;1216:421;;;1263:5;1260:1;1253:16;1307:4;1304:1;1294:18;1377:2;1365:10;1361:19;1358:1;1354:27;1348:4;1344:38;1413:4;1401:10;1398:20;1395:47;;;-1:-1:-1;1436:4:16;1395:47;1491:2;1486:3;1482:12;1479:1;1475:20;1469:4;1465:31;1455:41;;1546:81;1564:2;1557:5;1554:13;1546:81;;;1623:1;1609:16;;1590:1;1579:13;1546:81;;;1550:3;;1216:421;1125:518;;;:::o;1819:1299::-;1939:10;;-1:-1:-1;;;;;1961:30:16;;1958:56;;;1994:18;;:::i;:::-;2023:97;2113:6;2073:38;2105:4;2099:11;2073:38;:::i;:::-;2067:4;2023:97;:::i;:::-;2169:4;2200:2;2189:14;;2217:1;2212:649;;;;2905:1;2922:6;2919:89;;;-1:-1:-1;2974:19:16;;;2968:26;2919:89;-1:-1:-1;;1776:1:16;1772:11;;;1768:24;1764:29;1754:40;1800:1;1796:11;;;1751:57;3021:81;;2182:930;;2212:649;1072:1;1065:14;;;1109:4;1096:18;;-1:-1:-1;;2248:20:16;;;2366:222;2380:7;2377:1;2374:14;2366:222;;;2462:19;;;2456:26;2441:42;;2569:4;2554:20;;;;2522:1;2510:14;;;;2396:12;2366:222;;;2370:3;2616:6;2607:7;2604:19;2601:201;;;2677:19;;;2671:26;-1:-1:-1;;2760:1:16;2756:14;;;2772:3;2752:24;2748:37;2744:42;2729:58;2714:74;;2601:201;-1:-1:-1;;;;2848:1:16;2832:14;;;2828:22;2815:36;;-1:-1:-1;1819:1299:16:o;3331:272::-;286:4601:15;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_SHARES_PER_TRACK_3328": {
									"entryPoint": null,
									"id": 3328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SHARE_PRICE_USD_3331": {
									"entryPoint": null,
									"id": 3331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1116": {
									"entryPoint": 4088,
									"id": 1116,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1182": {
									"entryPoint": 5128,
									"id": 1182,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3395": {
									"entryPoint": 4849,
									"id": 3395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_764": {
									"entryPoint": 5379,
									"id": 764,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1312": {
									"entryPoint": 4573,
									"id": 1312,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3825,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_feeDenominator_1611": {
									"entryPoint": null,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getApproved_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_727": {
									"entryPoint": 5716,
									"id": 727,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_920": {
									"entryPoint": 5816,
									"id": 920,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1742": {
									"entryPoint": null,
									"id": 1742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1248": {
									"entryPoint": 4032,
									"id": 1248,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_935": {
									"entryPoint": 5024,
									"id": 935,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_961": {
									"entryPoint": 5694,
									"id": 961,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1219": {
									"entryPoint": 4424,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setDefaultRoyalty_1657": {
									"entryPoint": 3870,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4343,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_870": {
									"entryPoint": 4101,
									"id": 870,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@accumulateRoyalty_3579": {
									"entryPoint": 2744,
									"id": 3579,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_525": {
									"entryPoint": 1422,
									"id": 525,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_433": {
									"entryPoint": 2281,
									"id": 433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createTrack_3465": {
									"entryPoint": 3610,
									"id": 3465,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_1778": {
									"entryPoint": null,
									"id": 1778,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_542": {
									"entryPoint": 1383,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwnerSharePercentage_3610": {
									"entryPoint": 1764,
									"id": 3610,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increment_1792": {
									"entryPoint": null,
									"id": 1792,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_575": {
									"entryPoint": 3504,
									"id": 575,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2999": {
									"entryPoint": 5479,
									"id": 2999,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_455": {
									"entryPoint": 1240,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_446": {
									"entryPoint": 2271,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@purchaseShares_3543": {
									"entryPoint": 3044,
									"id": 3543,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2350,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltyInfo_1602": {
									"entryPoint": 1594,
									"id": 1602,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@safeTransferFrom_639": {
									"entryPoint": 1842,
									"id": 639,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_665": {
									"entryPoint": 2721,
									"id": 665,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_558": {
									"entryPoint": 2384,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRoyaltyInfo_3710": {
									"entryPoint": 1218,
									"id": 3710,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1553": {
									"entryPoint": 3789,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2112": {
									"entryPoint": null,
									"id": 2112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3726": {
									"entryPoint": 1202,
									"id": 3726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_405": {
									"entryPoint": 5049,
									"id": 405,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_464": {
									"entryPoint": 2369,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1902": {
									"entryPoint": 4881,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_500": {
									"entryPoint": 2943,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_3695": {
									"entryPoint": 1433,
									"id": 3695,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tracks_3322": {
									"entryPoint": 2395,
									"id": 3322,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_621": {
									"entryPoint": 1448,
									"id": 621,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3549,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRoyalty_3685": {
									"entryPoint": 1873,
									"id": 3685,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint96": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7122,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07e703d688a67e300f3fab42d415aa984a7c9240ef5cb6cd9684c2f24aec5e6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a2331c7c19f2502a16310aa3eef80b95d3147f8dab2f4f3364c6a6a4be1a37__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27c71b42911925277fccc69932d4d9f48433f9b8a44de11392d19df91b750e80__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64d3295d37ddc4cbcb967b1bfe2f1fc298bc5ab15e2cacea28be7757731b61b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c720dc516040b79f05f5ec556572ec11727bdc7c6d8b6bb6e511515b2ff3afa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16463:16",
										"nodeType": "YulBlock",
										"src": "0:16463:16",
										"statements": [
											{
												"nativeSrc": "6:3:16",
												"nodeType": "YulBlock",
												"src": "6:3:16",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:16",
													"nodeType": "YulBlock",
													"src": "58:87:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:16",
																"nodeType": "YulBlock",
																"src": "123:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:16",
																					"nodeType": "YulLiteral",
																					"src": "132:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:16",
																					"nodeType": "YulLiteral",
																					"src": "135:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:16"
																			},
																			"nativeSrc": "125:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:16"
																		},
																		"nativeSrc": "125:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:16",
																								"nodeType": "YulLiteral",
																								"src": "103:3:16",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:16",
																								"nodeType": "YulLiteral",
																								"src": "108:10:16",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:16"
																						},
																						"nativeSrc": "99:20:16",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:16"
																				},
																				"nativeSrc": "88:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:16"
																		},
																		"nativeSrc": "78:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:16"
																},
																"nativeSrc": "71:51:16",
																"nodeType": "YulFunctionCall",
																"src": "71:51:16"
															},
															"nativeSrc": "68:71:16",
															"nodeType": "YulIf",
															"src": "68:71:16"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:16",
														"nodeType": "YulTypedName",
														"src": "47:5:16",
														"type": ""
													}
												],
												"src": "14:131:16"
											},
											{
												"body": {
													"nativeSrc": "219:176:16",
													"nodeType": "YulBlock",
													"src": "219:176:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:16",
																"nodeType": "YulBlock",
																"src": "265:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:16",
																					"nodeType": "YulLiteral",
																					"src": "274:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:16",
																					"nodeType": "YulLiteral",
																					"src": "277:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:16"
																			},
																			"nativeSrc": "267:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:16"
																		},
																		"nativeSrc": "267:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:16"
																		},
																		"nativeSrc": "236:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:16",
																		"nodeType": "YulLiteral",
																		"src": "261:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:16"
																},
																"nativeSrc": "232:32:16",
																"nodeType": "YulFunctionCall",
																"src": "232:32:16"
															},
															"nativeSrc": "229:52:16",
															"nodeType": "YulIf",
															"src": "229:52:16"
														},
														{
															"nativeSrc": "290:36:16",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:16"
																},
																"nativeSrc": "303:23:16",
																"nodeType": "YulFunctionCall",
																"src": "303:23:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:16",
																	"nodeType": "YulTypedName",
																	"src": "294:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:16"
																},
																"nativeSrc": "335:30:16",
																"nodeType": "YulFunctionCall",
																"src": "335:30:16"
															},
															"nativeSrc": "335:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:16"
														},
														{
															"nativeSrc": "374:15:16",
															"nodeType": "YulAssignment",
															"src": "374:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:16",
																"nodeType": "YulIdentifier",
																"src": "384:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:16",
														"nodeType": "YulTypedName",
														"src": "185:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:16",
														"nodeType": "YulTypedName",
														"src": "196:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:16",
														"nodeType": "YulTypedName",
														"src": "208:6:16",
														"type": ""
													}
												],
												"src": "150:245:16"
											},
											{
												"body": {
													"nativeSrc": "495:92:16",
													"nodeType": "YulBlock",
													"src": "495:92:16",
													"statements": [
														{
															"nativeSrc": "505:26:16",
															"nodeType": "YulAssignment",
															"src": "505:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:16",
																		"nodeType": "YulLiteral",
																		"src": "528:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:16"
																},
																"nativeSrc": "513:18:16",
																"nodeType": "YulFunctionCall",
																"src": "513:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:16"
																				},
																				"nativeSrc": "565:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:16"
																		},
																		"nativeSrc": "558:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:16"
																},
																"nativeSrc": "540:41:16",
																"nodeType": "YulFunctionCall",
																"src": "540:41:16"
															},
															"nativeSrc": "540:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:16",
														"nodeType": "YulTypedName",
														"src": "464:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:16",
														"nodeType": "YulTypedName",
														"src": "475:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:16",
														"nodeType": "YulTypedName",
														"src": "486:4:16",
														"type": ""
													}
												],
												"src": "400:187:16"
											},
											{
												"body": {
													"nativeSrc": "641:124:16",
													"nodeType": "YulBlock",
													"src": "641:124:16",
													"statements": [
														{
															"nativeSrc": "651:29:16",
															"nodeType": "YulAssignment",
															"src": "651:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "673:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "660:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "660:12:16"
																},
																"nativeSrc": "660:20:16",
																"nodeType": "YulFunctionCall",
																"src": "660:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "651:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "651:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "743:16:16",
																"nodeType": "YulBlock",
																"src": "743:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "752:1:16",
																					"nodeType": "YulLiteral",
																					"src": "752:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "755:1:16",
																					"nodeType": "YulLiteral",
																					"src": "755:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "745:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:16"
																			},
																			"nativeSrc": "745:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "745:12:16"
																		},
																		"nativeSrc": "745:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "745:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "702:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "702:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "713:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "713:5:16"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "728:3:16",
																										"nodeType": "YulLiteral",
																										"src": "728:3:16",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "733:1:16",
																										"nodeType": "YulLiteral",
																										"src": "733:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "724:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "724:3:16"
																								},
																								"nativeSrc": "724:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "724:11:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "737:1:16",
																								"nodeType": "YulLiteral",
																								"src": "737:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "720:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "720:3:16"
																						},
																						"nativeSrc": "720:19:16",
																						"nodeType": "YulFunctionCall",
																						"src": "720:19:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "709:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "709:3:16"
																				},
																				"nativeSrc": "709:31:16",
																				"nodeType": "YulFunctionCall",
																				"src": "709:31:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "699:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "699:2:16"
																		},
																		"nativeSrc": "699:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "699:42:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "692:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "692:6:16"
																},
																"nativeSrc": "692:50:16",
																"nodeType": "YulFunctionCall",
																"src": "692:50:16"
															},
															"nativeSrc": "689:70:16",
															"nodeType": "YulIf",
															"src": "689:70:16"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "592:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "620:6:16",
														"nodeType": "YulTypedName",
														"src": "620:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "631:5:16",
														"nodeType": "YulTypedName",
														"src": "631:5:16",
														"type": ""
													}
												],
												"src": "592:173:16"
											},
											{
												"body": {
													"nativeSrc": "856:280:16",
													"nodeType": "YulBlock",
													"src": "856:280:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "902:16:16",
																"nodeType": "YulBlock",
																"src": "902:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "911:1:16",
																					"nodeType": "YulLiteral",
																					"src": "911:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "914:1:16",
																					"nodeType": "YulLiteral",
																					"src": "914:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "904:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "904:6:16"
																			},
																			"nativeSrc": "904:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "904:12:16"
																		},
																		"nativeSrc": "904:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "904:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "877:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "877:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "886:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "886:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "873:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "873:3:16"
																		},
																		"nativeSrc": "873:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "873:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "898:2:16",
																		"nodeType": "YulLiteral",
																		"src": "898:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "869:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "869:3:16"
																},
																"nativeSrc": "869:32:16",
																"nodeType": "YulFunctionCall",
																"src": "869:32:16"
															},
															"nativeSrc": "866:52:16",
															"nodeType": "YulIf",
															"src": "866:52:16"
														},
														{
															"nativeSrc": "927:39:16",
															"nodeType": "YulAssignment",
															"src": "927:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "956:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "956:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "937:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "937:18:16"
																},
																"nativeSrc": "937:29:16",
																"nodeType": "YulFunctionCall",
																"src": "937:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "927:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:16"
																}
															]
														},
														{
															"nativeSrc": "975:45:16",
															"nodeType": "YulVariableDeclaration",
															"src": "975:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1005:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1005:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1016:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1001:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1001:3:16"
																		},
																		"nativeSrc": "1001:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1001:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "988:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:16"
																},
																"nativeSrc": "988:32:16",
																"nodeType": "YulFunctionCall",
																"src": "988:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "979:5:16",
																	"nodeType": "YulTypedName",
																	"src": "979:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1090:16:16",
																"nodeType": "YulBlock",
																"src": "1090:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1099:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1099:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1102:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1102:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1092:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1092:6:16"
																			},
																			"nativeSrc": "1092:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1092:12:16"
																		},
																		"nativeSrc": "1092:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1092:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1042:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1042:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1053:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1053:5:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1060:26:16",
																						"nodeType": "YulLiteral",
																						"src": "1060:26:16",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1049:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1049:3:16"
																				},
																				"nativeSrc": "1049:38:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1049:38:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1039:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1039:2:16"
																		},
																		"nativeSrc": "1039:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1039:49:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1032:6:16"
																},
																"nativeSrc": "1032:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1032:57:16"
															},
															"nativeSrc": "1029:77:16",
															"nodeType": "YulIf",
															"src": "1029:77:16"
														},
														{
															"nativeSrc": "1115:15:16",
															"nodeType": "YulAssignment",
															"src": "1115:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1125:5:16",
																"nodeType": "YulIdentifier",
																"src": "1125:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1115:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint96",
												"nativeSrc": "770:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "814:9:16",
														"nodeType": "YulTypedName",
														"src": "814:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "825:7:16",
														"nodeType": "YulTypedName",
														"src": "825:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "837:6:16",
														"nodeType": "YulTypedName",
														"src": "837:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "845:6:16",
														"nodeType": "YulTypedName",
														"src": "845:6:16",
														"type": ""
													}
												],
												"src": "770:366:16"
											},
											{
												"body": {
													"nativeSrc": "1202:239:16",
													"nodeType": "YulBlock",
													"src": "1202:239:16",
													"statements": [
														{
															"nativeSrc": "1212:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1212:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1232:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1232:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1226:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1226:5:16"
																},
																"nativeSrc": "1226:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1226:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1216:6:16",
																	"nodeType": "YulTypedName",
																	"src": "1216:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1254:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1254:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1259:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1247:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:16"
																},
																"nativeSrc": "1247:19:16",
																"nodeType": "YulFunctionCall",
																"src": "1247:19:16"
															},
															"nativeSrc": "1247:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "1247:19:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1285:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1285:3:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1290:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1290:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1281:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:16"
																		},
																		"nativeSrc": "1281:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1281:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1301:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1301:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1308:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1308:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1297:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:16"
																		},
																		"nativeSrc": "1297:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:16:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1315:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1275:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1275:5:16"
																},
																"nativeSrc": "1275:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1275:47:16"
															},
															"nativeSrc": "1275:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1275:47:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1346:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1346:3:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1351:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1351:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1342:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1342:3:16"
																				},
																				"nativeSrc": "1342:16:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1342:16:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1360:4:16",
																				"nodeType": "YulLiteral",
																				"src": "1360:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:16"
																		},
																		"nativeSrc": "1338:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:27:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1367:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1367:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1331:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:16"
																},
																"nativeSrc": "1331:38:16",
																"nodeType": "YulFunctionCall",
																"src": "1331:38:16"
															},
															"nativeSrc": "1331:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "1331:38:16"
														},
														{
															"nativeSrc": "1378:57:16",
															"nodeType": "YulAssignment",
															"src": "1378:57:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1393:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1393:3:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1406:6:16",
																								"nodeType": "YulIdentifier",
																								"src": "1406:6:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1414:2:16",
																								"nodeType": "YulLiteral",
																								"src": "1414:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1402:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1402:3:16"
																						},
																						"nativeSrc": "1402:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1402:15:16"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1423:2:16",
																								"nodeType": "YulLiteral",
																								"src": "1423:2:16",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1419:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1419:3:16"
																						},
																						"nativeSrc": "1419:7:16",
																						"nodeType": "YulFunctionCall",
																						"src": "1419:7:16"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1398:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:16"
																				},
																				"nativeSrc": "1398:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1398:29:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1389:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:16"
																		},
																		"nativeSrc": "1389:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1389:39:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1430:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1430:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1385:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1385:3:16"
																},
																"nativeSrc": "1385:50:16",
																"nodeType": "YulFunctionCall",
																"src": "1385:50:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1378:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1378:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "1141:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:16",
														"nodeType": "YulTypedName",
														"src": "1179:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1186:3:16",
														"nodeType": "YulTypedName",
														"src": "1186:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1194:3:16",
														"nodeType": "YulTypedName",
														"src": "1194:3:16",
														"type": ""
													}
												],
												"src": "1141:300:16"
											},
											{
												"body": {
													"nativeSrc": "1567:110:16",
													"nodeType": "YulBlock",
													"src": "1567:110:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1584:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1584:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1595:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1577:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:16"
																},
																"nativeSrc": "1577:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1577:21:16"
															},
															"nativeSrc": "1577:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "1577:21:16"
														},
														{
															"nativeSrc": "1607:64:16",
															"nodeType": "YulAssignment",
															"src": "1607:64:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1644:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1656:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1667:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1667:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:16"
																		},
																		"nativeSrc": "1652:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1615:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "1615:28:16"
																},
																"nativeSrc": "1615:56:16",
																"nodeType": "YulFunctionCall",
																"src": "1615:56:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1607:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1607:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1446:231:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1536:9:16",
														"nodeType": "YulTypedName",
														"src": "1536:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1547:6:16",
														"nodeType": "YulTypedName",
														"src": "1547:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1558:4:16",
														"nodeType": "YulTypedName",
														"src": "1558:4:16",
														"type": ""
													}
												],
												"src": "1446:231:16"
											},
											{
												"body": {
													"nativeSrc": "1752:156:16",
													"nodeType": "YulBlock",
													"src": "1752:156:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1798:16:16",
																"nodeType": "YulBlock",
																"src": "1798:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1807:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1810:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1800:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:16"
																			},
																			"nativeSrc": "1800:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1800:12:16"
																		},
																		"nativeSrc": "1800:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1773:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1773:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1782:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1782:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1769:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1769:3:16"
																		},
																		"nativeSrc": "1769:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1794:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1765:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1765:3:16"
																},
																"nativeSrc": "1765:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1765:32:16"
															},
															"nativeSrc": "1762:52:16",
															"nodeType": "YulIf",
															"src": "1762:52:16"
														},
														{
															"nativeSrc": "1823:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1823:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1836:1:16",
																"nodeType": "YulLiteral",
																"src": "1836:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1827:5:16",
																	"nodeType": "YulTypedName",
																	"src": "1827:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1846:32:16",
															"nodeType": "YulAssignment",
															"src": "1846:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1868:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1868:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1855:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1855:12:16"
																},
																"nativeSrc": "1855:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1855:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1846:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1846:5:16"
																}
															]
														},
														{
															"nativeSrc": "1887:15:16",
															"nodeType": "YulAssignment",
															"src": "1887:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "1897:5:16",
																"nodeType": "YulIdentifier",
																"src": "1897:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1887:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1682:226:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1718:9:16",
														"nodeType": "YulTypedName",
														"src": "1718:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1729:7:16",
														"nodeType": "YulTypedName",
														"src": "1729:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1741:6:16",
														"nodeType": "YulTypedName",
														"src": "1741:6:16",
														"type": ""
													}
												],
												"src": "1682:226:16"
											},
											{
												"body": {
													"nativeSrc": "2014:102:16",
													"nodeType": "YulBlock",
													"src": "2014:102:16",
													"statements": [
														{
															"nativeSrc": "2024:26:16",
															"nodeType": "YulAssignment",
															"src": "2024:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2036:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2036:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2047:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2032:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:16"
																},
																"nativeSrc": "2032:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2032:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2024:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2024:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2066:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2066:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2081:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2081:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2097:3:16",
																								"nodeType": "YulLiteral",
																								"src": "2097:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2102:1:16",
																								"nodeType": "YulLiteral",
																								"src": "2102:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2093:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2093:3:16"
																						},
																						"nativeSrc": "2093:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "2093:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2106:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2106:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2089:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2089:3:16"
																				},
																				"nativeSrc": "2089:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2089:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2077:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:16"
																		},
																		"nativeSrc": "2077:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2077:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2059:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2059:6:16"
																},
																"nativeSrc": "2059:51:16",
																"nodeType": "YulFunctionCall",
																"src": "2059:51:16"
															},
															"nativeSrc": "2059:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "2059:51:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1913:203:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1983:9:16",
														"nodeType": "YulTypedName",
														"src": "1983:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1994:6:16",
														"nodeType": "YulTypedName",
														"src": "1994:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2005:4:16",
														"nodeType": "YulTypedName",
														"src": "2005:4:16",
														"type": ""
													}
												],
												"src": "1913:203:16"
											},
											{
												"body": {
													"nativeSrc": "2208:213:16",
													"nodeType": "YulBlock",
													"src": "2208:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2254:16:16",
																"nodeType": "YulBlock",
																"src": "2254:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2263:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2266:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2256:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:16"
																			},
																			"nativeSrc": "2256:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:16"
																		},
																		"nativeSrc": "2256:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2229:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2238:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2225:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:16"
																		},
																		"nativeSrc": "2225:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2250:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2221:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:16"
																},
																"nativeSrc": "2221:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2221:32:16"
															},
															"nativeSrc": "2218:52:16",
															"nodeType": "YulIf",
															"src": "2218:52:16"
														},
														{
															"nativeSrc": "2279:39:16",
															"nodeType": "YulAssignment",
															"src": "2279:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2308:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2289:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:16"
																},
																"nativeSrc": "2289:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2289:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2279:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:16"
																}
															]
														},
														{
															"nativeSrc": "2327:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2327:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2340:1:16",
																"nodeType": "YulLiteral",
																"src": "2340:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2331:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2350:41:16",
															"nodeType": "YulAssignment",
															"src": "2350:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2376:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2376:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2372:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2372:3:16"
																		},
																		"nativeSrc": "2372:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2372:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2359:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2359:12:16"
																},
																"nativeSrc": "2359:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2359:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2350:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2350:5:16"
																}
															]
														},
														{
															"nativeSrc": "2400:15:16",
															"nodeType": "YulAssignment",
															"src": "2400:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2410:5:16",
																"nodeType": "YulIdentifier",
																"src": "2410:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2400:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2121:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2166:9:16",
														"nodeType": "YulTypedName",
														"src": "2166:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2177:7:16",
														"nodeType": "YulTypedName",
														"src": "2177:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2189:6:16",
														"nodeType": "YulTypedName",
														"src": "2189:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2197:6:16",
														"nodeType": "YulTypedName",
														"src": "2197:6:16",
														"type": ""
													}
												],
												"src": "2121:300:16"
											},
											{
												"body": {
													"nativeSrc": "2527:76:16",
													"nodeType": "YulBlock",
													"src": "2527:76:16",
													"statements": [
														{
															"nativeSrc": "2537:26:16",
															"nodeType": "YulAssignment",
															"src": "2537:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2549:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2549:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2545:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2545:3:16"
																},
																"nativeSrc": "2545:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2545:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2537:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2537:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2579:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2579:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2590:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2572:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:16"
																},
																"nativeSrc": "2572:25:16",
																"nodeType": "YulFunctionCall",
																"src": "2572:25:16"
															},
															"nativeSrc": "2572:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "2572:25:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2426:177:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2496:9:16",
														"nodeType": "YulTypedName",
														"src": "2496:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2507:6:16",
														"nodeType": "YulTypedName",
														"src": "2507:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2518:4:16",
														"nodeType": "YulTypedName",
														"src": "2518:4:16",
														"type": ""
													}
												],
												"src": "2426:177:16"
											},
											{
												"body": {
													"nativeSrc": "2712:270:16",
													"nodeType": "YulBlock",
													"src": "2712:270:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2758:16:16",
																"nodeType": "YulBlock",
																"src": "2758:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2767:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2760:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2760:6:16"
																			},
																			"nativeSrc": "2760:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:16"
																		},
																		"nativeSrc": "2760:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2760:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2733:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2733:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2742:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2742:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2729:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:16"
																		},
																		"nativeSrc": "2729:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2754:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2754:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2725:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:16"
																},
																"nativeSrc": "2725:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2725:32:16"
															},
															"nativeSrc": "2722:52:16",
															"nodeType": "YulIf",
															"src": "2722:52:16"
														},
														{
															"nativeSrc": "2783:39:16",
															"nodeType": "YulAssignment",
															"src": "2783:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2812:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2812:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2793:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2793:18:16"
																},
																"nativeSrc": "2793:29:16",
																"nodeType": "YulFunctionCall",
																"src": "2793:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2783:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:16"
																}
															]
														},
														{
															"nativeSrc": "2831:48:16",
															"nodeType": "YulAssignment",
															"src": "2831:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2864:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2864:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2875:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2875:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2860:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2860:3:16"
																		},
																		"nativeSrc": "2860:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2841:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "2841:18:16"
																},
																"nativeSrc": "2841:38:16",
																"nodeType": "YulFunctionCall",
																"src": "2841:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2831:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:16"
																}
															]
														},
														{
															"nativeSrc": "2888:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2888:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2901:1:16",
																"nodeType": "YulLiteral",
																"src": "2901:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2892:5:16",
																	"nodeType": "YulTypedName",
																	"src": "2892:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2911:41:16",
															"nodeType": "YulAssignment",
															"src": "2911:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2937:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2948:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2948:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2933:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:16"
																		},
																		"nativeSrc": "2933:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2933:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2920:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2920:12:16"
																},
																"nativeSrc": "2920:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2920:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2911:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2911:5:16"
																}
															]
														},
														{
															"nativeSrc": "2961:15:16",
															"nodeType": "YulAssignment",
															"src": "2961:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "2971:5:16",
																"nodeType": "YulIdentifier",
																"src": "2971:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2961:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2608:374:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2662:9:16",
														"nodeType": "YulTypedName",
														"src": "2662:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2673:7:16",
														"nodeType": "YulTypedName",
														"src": "2673:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2685:6:16",
														"nodeType": "YulTypedName",
														"src": "2685:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2693:6:16",
														"nodeType": "YulTypedName",
														"src": "2693:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2701:6:16",
														"nodeType": "YulTypedName",
														"src": "2701:6:16",
														"type": ""
													}
												],
												"src": "2608:374:16"
											},
											{
												"body": {
													"nativeSrc": "3074:259:16",
													"nodeType": "YulBlock",
													"src": "3074:259:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3120:16:16",
																"nodeType": "YulBlock",
																"src": "3120:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3129:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3129:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3132:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3132:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3122:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3122:6:16"
																			},
																			"nativeSrc": "3122:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3122:12:16"
																		},
																		"nativeSrc": "3122:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3122:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3095:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3095:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3104:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3104:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3091:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:16"
																		},
																		"nativeSrc": "3091:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3116:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3116:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3087:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3087:3:16"
																},
																"nativeSrc": "3087:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3087:32:16"
															},
															"nativeSrc": "3084:52:16",
															"nodeType": "YulIf",
															"src": "3084:52:16"
														},
														{
															"nativeSrc": "3145:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3145:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3158:1:16",
																"nodeType": "YulLiteral",
																"src": "3158:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3149:5:16",
																	"nodeType": "YulTypedName",
																	"src": "3149:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3168:32:16",
															"nodeType": "YulAssignment",
															"src": "3168:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3190:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3177:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3177:12:16"
																},
																"nativeSrc": "3177:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3177:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3168:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3168:5:16"
																}
															]
														},
														{
															"nativeSrc": "3209:15:16",
															"nodeType": "YulAssignment",
															"src": "3209:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "3219:5:16",
																"nodeType": "YulIdentifier",
																"src": "3219:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3209:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:16"
																}
															]
														},
														{
															"nativeSrc": "3233:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3233:16:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:16",
																"nodeType": "YulLiteral",
																"src": "3248:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3237:7:16",
																	"nodeType": "YulTypedName",
																	"src": "3237:7:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3258:43:16",
															"nodeType": "YulAssignment",
															"src": "3258:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3286:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3297:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3282:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:16"
																		},
																		"nativeSrc": "3282:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3269:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3269:12:16"
																},
																"nativeSrc": "3269:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3269:32:16"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3258:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3258:7:16"
																}
															]
														},
														{
															"nativeSrc": "3310:17:16",
															"nodeType": "YulAssignment",
															"src": "3310:17:16",
															"value": {
																"name": "value_1",
																"nativeSrc": "3320:7:16",
																"nodeType": "YulIdentifier",
																"src": "3320:7:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2987:346:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3032:9:16",
														"nodeType": "YulTypedName",
														"src": "3032:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3043:7:16",
														"nodeType": "YulTypedName",
														"src": "3043:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3055:6:16",
														"nodeType": "YulTypedName",
														"src": "3055:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3063:6:16",
														"nodeType": "YulTypedName",
														"src": "3063:6:16",
														"type": ""
													}
												],
												"src": "2987:346:16"
											},
											{
												"body": {
													"nativeSrc": "3467:145:16",
													"nodeType": "YulBlock",
													"src": "3467:145:16",
													"statements": [
														{
															"nativeSrc": "3477:26:16",
															"nodeType": "YulAssignment",
															"src": "3477:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3489:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3485:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:16"
																},
																"nativeSrc": "3485:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3485:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3477:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3519:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3519:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3534:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3534:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3550:3:16",
																								"nodeType": "YulLiteral",
																								"src": "3550:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3555:1:16",
																								"nodeType": "YulLiteral",
																								"src": "3555:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3546:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "3546:3:16"
																						},
																						"nativeSrc": "3546:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "3546:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3559:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3559:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3542:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3542:3:16"
																				},
																				"nativeSrc": "3542:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3542:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3530:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:16"
																		},
																		"nativeSrc": "3530:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3512:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3512:6:16"
																},
																"nativeSrc": "3512:51:16",
																"nodeType": "YulFunctionCall",
																"src": "3512:51:16"
															},
															"nativeSrc": "3512:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "3512:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3583:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3594:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3579:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:16"
																		},
																		"nativeSrc": "3579:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3599:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:16"
																},
																"nativeSrc": "3572:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3572:34:16"
															},
															"nativeSrc": "3572:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3572:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3338:274:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3428:9:16",
														"nodeType": "YulTypedName",
														"src": "3428:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3439:6:16",
														"nodeType": "YulTypedName",
														"src": "3439:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3447:6:16",
														"nodeType": "YulTypedName",
														"src": "3447:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3458:4:16",
														"nodeType": "YulTypedName",
														"src": "3458:4:16",
														"type": ""
													}
												],
												"src": "3338:274:16"
											},
											{
												"body": {
													"nativeSrc": "3704:213:16",
													"nodeType": "YulBlock",
													"src": "3704:213:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3750:16:16",
																"nodeType": "YulBlock",
																"src": "3750:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3759:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3759:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3762:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3752:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:16"
																			},
																			"nativeSrc": "3752:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3752:12:16"
																		},
																		"nativeSrc": "3752:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3752:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3725:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3725:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3734:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3734:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3721:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3721:3:16"
																		},
																		"nativeSrc": "3721:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3721:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3746:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3746:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3717:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:16"
																},
																"nativeSrc": "3717:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3717:32:16"
															},
															"nativeSrc": "3714:52:16",
															"nodeType": "YulIf",
															"src": "3714:52:16"
														},
														{
															"nativeSrc": "3775:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3775:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "3788:1:16",
																"nodeType": "YulLiteral",
																"src": "3788:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3779:5:16",
																	"nodeType": "YulTypedName",
																	"src": "3779:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3798:32:16",
															"nodeType": "YulAssignment",
															"src": "3798:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3820:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3820:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3807:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3807:12:16"
																},
																"nativeSrc": "3807:23:16",
																"nodeType": "YulFunctionCall",
																"src": "3807:23:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3798:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3798:5:16"
																}
															]
														},
														{
															"nativeSrc": "3839:15:16",
															"nodeType": "YulAssignment",
															"src": "3839:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "3849:5:16",
																"nodeType": "YulIdentifier",
																"src": "3849:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3839:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:16"
																}
															]
														},
														{
															"nativeSrc": "3863:48:16",
															"nodeType": "YulAssignment",
															"src": "3863:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3896:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3907:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3892:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:16"
																		},
																		"nativeSrc": "3892:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3873:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3873:18:16"
																},
																"nativeSrc": "3873:38:16",
																"nodeType": "YulFunctionCall",
																"src": "3873:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3863:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "3617:300:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3662:9:16",
														"nodeType": "YulTypedName",
														"src": "3662:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3673:7:16",
														"nodeType": "YulTypedName",
														"src": "3673:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3685:6:16",
														"nodeType": "YulTypedName",
														"src": "3685:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3693:6:16",
														"nodeType": "YulTypedName",
														"src": "3693:6:16",
														"type": ""
													}
												],
												"src": "3617:300:16"
											},
											{
												"body": {
													"nativeSrc": "3992:116:16",
													"nodeType": "YulBlock",
													"src": "3992:116:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4038:16:16",
																"nodeType": "YulBlock",
																"src": "4038:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4047:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4047:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4040:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4040:6:16"
																			},
																			"nativeSrc": "4040:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4040:12:16"
																		},
																		"nativeSrc": "4040:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4040:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4013:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4013:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4022:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4022:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4009:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:16"
																		},
																		"nativeSrc": "4009:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4034:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4034:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4005:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4005:3:16"
																},
																"nativeSrc": "4005:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:16"
															},
															"nativeSrc": "4002:52:16",
															"nodeType": "YulIf",
															"src": "4002:52:16"
														},
														{
															"nativeSrc": "4063:39:16",
															"nodeType": "YulAssignment",
															"src": "4063:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4092:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4092:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4073:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4073:18:16"
																},
																"nativeSrc": "4073:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4073:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4063:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3922:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3958:9:16",
														"nodeType": "YulTypedName",
														"src": "3958:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3969:7:16",
														"nodeType": "YulTypedName",
														"src": "3969:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3981:6:16",
														"nodeType": "YulTypedName",
														"src": "3981:6:16",
														"type": ""
													}
												],
												"src": "3922:186:16"
											},
											{
												"body": {
													"nativeSrc": "4197:263:16",
													"nodeType": "YulBlock",
													"src": "4197:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4243:16:16",
																"nodeType": "YulBlock",
																"src": "4243:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4252:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4252:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4255:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4255:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4245:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4245:6:16"
																			},
																			"nativeSrc": "4245:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4245:12:16"
																		},
																		"nativeSrc": "4245:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4245:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4218:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4218:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4227:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4214:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:16"
																		},
																		"nativeSrc": "4214:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4214:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4239:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4239:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4210:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:16"
																},
																"nativeSrc": "4210:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4210:32:16"
															},
															"nativeSrc": "4207:52:16",
															"nodeType": "YulIf",
															"src": "4207:52:16"
														},
														{
															"nativeSrc": "4268:39:16",
															"nodeType": "YulAssignment",
															"src": "4268:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4297:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4297:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4278:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4278:18:16"
																},
																"nativeSrc": "4278:29:16",
																"nodeType": "YulFunctionCall",
																"src": "4278:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4268:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:16"
																}
															]
														},
														{
															"nativeSrc": "4316:45:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4316:45:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4346:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4346:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4357:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4357:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4342:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4342:3:16"
																		},
																		"nativeSrc": "4342:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4342:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4329:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4329:12:16"
																},
																"nativeSrc": "4329:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4329:32:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4320:5:16",
																	"nodeType": "YulTypedName",
																	"src": "4320:5:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4414:16:16",
																"nodeType": "YulBlock",
																"src": "4414:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4423:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4423:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4426:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4426:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4416:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4416:6:16"
																			},
																			"nativeSrc": "4416:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4416:12:16"
																		},
																		"nativeSrc": "4416:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4416:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4383:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4383:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4404:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "4404:5:16"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4397:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4397:6:16"
																						},
																						"nativeSrc": "4397:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "4397:13:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4390:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4390:6:16"
																				},
																				"nativeSrc": "4390:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4390:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4380:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4380:2:16"
																		},
																		"nativeSrc": "4380:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4380:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4373:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:16"
																},
																"nativeSrc": "4373:40:16",
																"nodeType": "YulFunctionCall",
																"src": "4373:40:16"
															},
															"nativeSrc": "4370:60:16",
															"nodeType": "YulIf",
															"src": "4370:60:16"
														},
														{
															"nativeSrc": "4439:15:16",
															"nodeType": "YulAssignment",
															"src": "4439:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "4449:5:16",
																"nodeType": "YulIdentifier",
																"src": "4449:5:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4439:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4439:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4113:347:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4155:9:16",
														"nodeType": "YulTypedName",
														"src": "4155:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4166:7:16",
														"nodeType": "YulTypedName",
														"src": "4166:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4178:6:16",
														"nodeType": "YulTypedName",
														"src": "4178:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4186:6:16",
														"nodeType": "YulTypedName",
														"src": "4186:6:16",
														"type": ""
													}
												],
												"src": "4113:347:16"
											},
											{
												"body": {
													"nativeSrc": "4740:428:16",
													"nodeType": "YulBlock",
													"src": "4740:428:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4757:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4757:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4768:3:16",
																		"nodeType": "YulLiteral",
																		"src": "4768:3:16",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4750:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4750:6:16"
																},
																"nativeSrc": "4750:22:16",
																"nodeType": "YulFunctionCall",
																"src": "4750:22:16"
															},
															"nativeSrc": "4750:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "4750:22:16"
														},
														{
															"nativeSrc": "4781:71:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4781:71:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4824:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4824:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4836:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:3:16",
																				"nodeType": "YulLiteral",
																				"src": "4847:3:16",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4832:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:16"
																		},
																		"nativeSrc": "4832:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "4795:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "4795:28:16"
																},
																"nativeSrc": "4795:57:16",
																"nodeType": "YulFunctionCall",
																"src": "4795:57:16"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4785:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4785:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4872:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4872:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4883:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4883:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4868:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4868:3:16"
																		},
																		"nativeSrc": "4868:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4868:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "4892:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4892:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4900:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4888:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4888:3:16"
																		},
																		"nativeSrc": "4888:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4888:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4861:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:16"
																},
																"nativeSrc": "4861:50:16",
																"nodeType": "YulFunctionCall",
																"src": "4861:50:16"
															},
															"nativeSrc": "4861:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "4861:50:16"
														},
														{
															"nativeSrc": "4920:52:16",
															"nodeType": "YulAssignment",
															"src": "4920:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4957:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4957:6:16"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "4965:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4965:6:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "4928:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "4928:28:16"
																},
																"nativeSrc": "4928:44:16",
																"nodeType": "YulFunctionCall",
																"src": "4928:44:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4920:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4920:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4992:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4992:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5003:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4988:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:16"
																		},
																		"nativeSrc": "4988:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4988:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5008:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5008:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4981:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4981:6:16"
																},
																"nativeSrc": "4981:34:16",
																"nodeType": "YulFunctionCall",
																"src": "4981:34:16"
															},
															"nativeSrc": "4981:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "4981:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5035:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5035:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5046:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5031:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:16"
																		},
																		"nativeSrc": "5031:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5031:18:16"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5051:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5051:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5024:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5024:6:16"
																},
																"nativeSrc": "5024:34:16",
																"nodeType": "YulFunctionCall",
																"src": "5024:34:16"
															},
															"nativeSrc": "5024:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "5024:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5078:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5078:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5089:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5089:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5074:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5074:3:16"
																		},
																		"nativeSrc": "5074:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5074:19:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "5109:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5109:6:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5102:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5102:6:16"
																				},
																				"nativeSrc": "5102:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5102:14:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5095:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5095:6:16"
																		},
																		"nativeSrc": "5095:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5095:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5067:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:16"
																},
																"nativeSrc": "5067:51:16",
																"nodeType": "YulFunctionCall",
																"src": "5067:51:16"
															},
															"nativeSrc": "5067:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "5067:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5138:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5138:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5149:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5149:3:16",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5134:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:16"
																		},
																		"nativeSrc": "5134:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:19:16"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "5155:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5155:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5127:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:16"
																},
																"nativeSrc": "5127:35:16",
																"nodeType": "YulFunctionCall",
																"src": "5127:35:16"
															},
															"nativeSrc": "5127:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "5127:35:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "4465:703:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4669:9:16",
														"nodeType": "YulTypedName",
														"src": "4669:9:16",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4680:6:16",
														"nodeType": "YulTypedName",
														"src": "4680:6:16",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4688:6:16",
														"nodeType": "YulTypedName",
														"src": "4688:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4696:6:16",
														"nodeType": "YulTypedName",
														"src": "4696:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4704:6:16",
														"nodeType": "YulTypedName",
														"src": "4704:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4712:6:16",
														"nodeType": "YulTypedName",
														"src": "4712:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4720:6:16",
														"nodeType": "YulTypedName",
														"src": "4720:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4731:4:16",
														"nodeType": "YulTypedName",
														"src": "4731:4:16",
														"type": ""
													}
												],
												"src": "4465:703:16"
											},
											{
												"body": {
													"nativeSrc": "5205:95:16",
													"nodeType": "YulBlock",
													"src": "5205:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5222:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5222:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5229:3:16",
																				"nodeType": "YulLiteral",
																				"src": "5229:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5234:10:16",
																				"nodeType": "YulLiteral",
																				"src": "5234:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5225:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5225:3:16"
																		},
																		"nativeSrc": "5225:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5225:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:16"
																},
																"nativeSrc": "5215:31:16",
																"nodeType": "YulFunctionCall",
																"src": "5215:31:16"
															},
															"nativeSrc": "5215:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "5215:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5262:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5262:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5265:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5265:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5255:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5255:6:16"
																},
																"nativeSrc": "5255:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5255:15:16"
															},
															"nativeSrc": "5255:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5255:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5286:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5286:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5289:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5279:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:16"
																},
																"nativeSrc": "5279:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5279:15:16"
															},
															"nativeSrc": "5279:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5279:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5173:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5173:127:16"
											},
											{
												"body": {
													"nativeSrc": "5379:641:16",
													"nodeType": "YulBlock",
													"src": "5379:641:16",
													"statements": [
														{
															"nativeSrc": "5389:13:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5389:13:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5401:1:16",
																"nodeType": "YulLiteral",
																"src": "5401:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "5393:4:16",
																	"nodeType": "YulTypedName",
																	"src": "5393:4:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5445:22:16",
																"nodeType": "YulBlock",
																"src": "5445:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5447:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5447:16:16"
																			},
																			"nativeSrc": "5447:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5447:18:16"
																		},
																		"nativeSrc": "5447:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5447:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5417:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5417:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5425:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5425:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5414:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5414:2:16"
																},
																"nativeSrc": "5414:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5414:30:16"
															},
															"nativeSrc": "5411:56:16",
															"nodeType": "YulIf",
															"src": "5411:56:16"
														},
														{
															"nativeSrc": "5476:43:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5476:43:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5498:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5498:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5506:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5506:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5494:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:16"
																		},
																		"nativeSrc": "5494:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5494:15:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5515:2:16",
																				"nodeType": "YulLiteral",
																				"src": "5515:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5511:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:16"
																		},
																		"nativeSrc": "5511:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5490:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:16"
																},
																"nativeSrc": "5490:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5490:29:16"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "5480:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5480:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5528:25:16",
															"nodeType": "YulAssignment",
															"src": "5528:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "5540:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5548:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5536:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5536:3:16"
																},
																"nativeSrc": "5536:17:16",
																"nodeType": "YulFunctionCall",
																"src": "5536:17:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5528:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5528:4:16"
																}
															]
														},
														{
															"nativeSrc": "5562:15:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5562:15:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5576:1:16",
																"nodeType": "YulLiteral",
																"src": "5576:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5566:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5566:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5586:19:16",
															"nodeType": "YulAssignment",
															"src": "5586:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5602:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5602:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5596:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5596:5:16"
																},
																"nativeSrc": "5596:9:16",
																"nodeType": "YulFunctionCall",
																"src": "5596:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5586:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:16"
																}
															]
														},
														{
															"nativeSrc": "5614:60:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5614:60:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5636:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "5652:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5652:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5660:2:16",
																						"nodeType": "YulLiteral",
																						"src": "5660:2:16",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5648:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5648:3:16"
																				},
																				"nativeSrc": "5648:15:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5648:15:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5669:2:16",
																						"nodeType": "YulLiteral",
																						"src": "5669:2:16",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5665:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5665:3:16"
																				},
																				"nativeSrc": "5665:7:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5665:7:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5644:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:16"
																		},
																		"nativeSrc": "5644:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5632:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:16"
																},
																"nativeSrc": "5632:42:16",
																"nodeType": "YulFunctionCall",
																"src": "5632:42:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5618:10:16",
																	"nodeType": "YulTypedName",
																	"src": "5618:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5749:22:16",
																"nodeType": "YulBlock",
																"src": "5749:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5751:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5751:16:16"
																			},
																			"nativeSrc": "5751:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5751:18:16"
																		},
																		"nativeSrc": "5751:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5692:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5692:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5704:18:16",
																				"nodeType": "YulLiteral",
																				"src": "5704:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5689:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5689:2:16"
																		},
																		"nativeSrc": "5689:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5689:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5728:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5728:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5740:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5740:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5725:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5725:2:16"
																		},
																		"nativeSrc": "5725:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5686:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5686:2:16"
																},
																"nativeSrc": "5686:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5686:62:16"
															},
															"nativeSrc": "5683:88:16",
															"nodeType": "YulIf",
															"src": "5683:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5787:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5787:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5791:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "5791:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5780:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:16"
																},
																"nativeSrc": "5780:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5780:22:16"
															},
															"nativeSrc": "5780:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5780:22:16"
														},
														{
															"nativeSrc": "5811:15:16",
															"nodeType": "YulAssignment",
															"src": "5811:15:16",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5820:6:16",
																"nodeType": "YulIdentifier",
																"src": "5820:6:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5811:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5811:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5842:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5842:6:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5850:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5850:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5835:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5835:6:16"
																},
																"nativeSrc": "5835:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5835:22:16"
															},
															"nativeSrc": "5835:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5835:22:16"
														},
														{
															"body": {
																"nativeSrc": "5895:16:16",
																"nodeType": "YulBlock",
																"src": "5895:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5904:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5904:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5907:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5907:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5897:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5897:6:16"
																			},
																			"nativeSrc": "5897:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5897:12:16"
																		},
																		"nativeSrc": "5897:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5897:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5876:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5876:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5881:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5881:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5872:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:16"
																		},
																		"nativeSrc": "5872:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5872:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5890:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5890:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5869:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5869:2:16"
																},
																"nativeSrc": "5869:25:16",
																"nodeType": "YulFunctionCall",
																"src": "5869:25:16"
															},
															"nativeSrc": "5866:45:16",
															"nodeType": "YulIf",
															"src": "5866:45:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5937:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5937:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5945:4:16",
																				"nodeType": "YulLiteral",
																				"src": "5945:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5933:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5933:3:16"
																		},
																		"nativeSrc": "5933:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5933:17:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5952:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5952:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5957:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5957:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5920:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "5920:12:16"
																},
																"nativeSrc": "5920:44:16",
																"nodeType": "YulFunctionCall",
																"src": "5920:44:16"
															},
															"nativeSrc": "5920:44:16",
															"nodeType": "YulExpressionStatement",
															"src": "5920:44:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "5988:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5988:6:16"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5996:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5996:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5984:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5984:3:16"
																				},
																				"nativeSrc": "5984:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5984:19:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6005:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6005:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5980:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:16"
																		},
																		"nativeSrc": "5980:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5980:30:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6012:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6012:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5973:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:16"
																},
																"nativeSrc": "5973:41:16",
																"nodeType": "YulFunctionCall",
																"src": "5973:41:16"
															},
															"nativeSrc": "5973:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "5973:41:16"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nativeSrc": "5305:715:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5348:3:16",
														"nodeType": "YulTypedName",
														"src": "5348:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5353:6:16",
														"nodeType": "YulTypedName",
														"src": "5353:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5361:3:16",
														"nodeType": "YulTypedName",
														"src": "5361:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5369:5:16",
														"nodeType": "YulTypedName",
														"src": "5369:5:16",
														"type": ""
													}
												],
												"src": "5305:715:16"
											},
											{
												"body": {
													"nativeSrc": "6155:582:16",
													"nodeType": "YulBlock",
													"src": "6155:582:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6202:16:16",
																"nodeType": "YulBlock",
																"src": "6202:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6211:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6211:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6214:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6214:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6204:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6204:6:16"
																			},
																			"nativeSrc": "6204:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6204:12:16"
																		},
																		"nativeSrc": "6204:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6204:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6176:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6176:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6185:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6185:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6172:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6172:3:16"
																		},
																		"nativeSrc": "6172:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6197:3:16",
																		"nodeType": "YulLiteral",
																		"src": "6197:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6168:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:16"
																},
																"nativeSrc": "6168:33:16",
																"nodeType": "YulFunctionCall",
																"src": "6168:33:16"
															},
															"nativeSrc": "6165:53:16",
															"nodeType": "YulIf",
															"src": "6165:53:16"
														},
														{
															"nativeSrc": "6227:39:16",
															"nodeType": "YulAssignment",
															"src": "6227:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6256:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6256:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6237:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6237:18:16"
																},
																"nativeSrc": "6237:29:16",
																"nodeType": "YulFunctionCall",
																"src": "6237:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6227:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:16"
																}
															]
														},
														{
															"nativeSrc": "6275:48:16",
															"nodeType": "YulAssignment",
															"src": "6275:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6319:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6319:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6304:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6304:3:16"
																		},
																		"nativeSrc": "6304:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6304:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6285:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6285:18:16"
																},
																"nativeSrc": "6285:38:16",
																"nodeType": "YulFunctionCall",
																"src": "6285:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6275:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6275:6:16"
																}
															]
														},
														{
															"nativeSrc": "6332:14:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6332:14:16",
															"value": {
																"kind": "number",
																"nativeSrc": "6345:1:16",
																"nodeType": "YulLiteral",
																"src": "6345:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6336:5:16",
																	"nodeType": "YulTypedName",
																	"src": "6336:5:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6355:41:16",
															"nodeType": "YulAssignment",
															"src": "6355:41:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6381:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6381:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6392:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6392:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6377:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6377:3:16"
																		},
																		"nativeSrc": "6377:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6377:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6364:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6364:12:16"
																},
																"nativeSrc": "6364:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6364:32:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6355:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6355:5:16"
																}
															]
														},
														{
															"nativeSrc": "6405:15:16",
															"nodeType": "YulAssignment",
															"src": "6405:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "6415:5:16",
																"nodeType": "YulIdentifier",
																"src": "6415:5:16"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6405:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6405:6:16"
																}
															]
														},
														{
															"nativeSrc": "6429:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6429:46:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6460:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6471:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6471:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6456:3:16"
																		},
																		"nativeSrc": "6456:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6456:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6443:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6443:12:16"
																},
																"nativeSrc": "6443:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6443:32:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6433:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6433:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6518:16:16",
																"nodeType": "YulBlock",
																"src": "6518:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6527:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6527:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6530:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6530:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6520:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6520:6:16"
																			},
																			"nativeSrc": "6520:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6520:12:16"
																		},
																		"nativeSrc": "6520:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6520:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6490:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6490:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6498:18:16",
																		"nodeType": "YulLiteral",
																		"src": "6498:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6487:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6487:2:16"
																},
																"nativeSrc": "6487:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6487:30:16"
															},
															"nativeSrc": "6484:50:16",
															"nodeType": "YulIf",
															"src": "6484:50:16"
														},
														{
															"nativeSrc": "6543:32:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6543:32:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6557:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6568:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6568:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6553:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:16"
																},
																"nativeSrc": "6553:22:16",
																"nodeType": "YulFunctionCall",
																"src": "6553:22:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6547:2:16",
																	"nodeType": "YulTypedName",
																	"src": "6547:2:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6623:16:16",
																"nodeType": "YulBlock",
																"src": "6623:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6632:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6632:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6635:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6635:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6625:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6625:6:16"
																			},
																			"nativeSrc": "6625:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6625:12:16"
																		},
																		"nativeSrc": "6625:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6625:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6602:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "6602:2:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6606:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6606:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6598:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6598:3:16"
																				},
																				"nativeSrc": "6598:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6598:13:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6613:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6613:7:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6594:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6594:3:16"
																		},
																		"nativeSrc": "6594:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6594:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6587:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:16"
																},
																"nativeSrc": "6587:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6587:35:16"
															},
															"nativeSrc": "6584:55:16",
															"nodeType": "YulIf",
															"src": "6584:55:16"
														},
														{
															"nativeSrc": "6648:83:16",
															"nodeType": "YulAssignment",
															"src": "6648:83:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6696:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "6696:2:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6700:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6700:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6692:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6692:3:16"
																		},
																		"nativeSrc": "6692:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6692:11:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6718:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "6718:2:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6705:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "6705:12:16"
																		},
																		"nativeSrc": "6705:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6705:16:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6723:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "6723:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "6658:33:16",
																	"nodeType": "YulIdentifier",
																	"src": "6658:33:16"
																},
																"nativeSrc": "6658:73:16",
																"nodeType": "YulFunctionCall",
																"src": "6658:73:16"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6648:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6648:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "6025:712:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6097:9:16",
														"nodeType": "YulTypedName",
														"src": "6097:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6108:7:16",
														"nodeType": "YulTypedName",
														"src": "6108:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6120:6:16",
														"nodeType": "YulTypedName",
														"src": "6120:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6128:6:16",
														"nodeType": "YulTypedName",
														"src": "6128:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6136:6:16",
														"nodeType": "YulTypedName",
														"src": "6136:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6144:6:16",
														"nodeType": "YulTypedName",
														"src": "6144:6:16",
														"type": ""
													}
												],
												"src": "6025:712:16"
											},
											{
												"body": {
													"nativeSrc": "6829:173:16",
													"nodeType": "YulBlock",
													"src": "6829:173:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6875:16:16",
																"nodeType": "YulBlock",
																"src": "6875:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6884:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6884:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6887:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6887:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6877:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6877:6:16"
																			},
																			"nativeSrc": "6877:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6877:12:16"
																		},
																		"nativeSrc": "6877:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6877:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6850:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6859:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6846:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6846:3:16"
																		},
																		"nativeSrc": "6846:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6846:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6871:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6871:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6842:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6842:3:16"
																},
																"nativeSrc": "6842:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6842:32:16"
															},
															"nativeSrc": "6839:52:16",
															"nodeType": "YulIf",
															"src": "6839:52:16"
														},
														{
															"nativeSrc": "6900:39:16",
															"nodeType": "YulAssignment",
															"src": "6900:39:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6929:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6929:9:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6910:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6910:18:16"
																},
																"nativeSrc": "6910:29:16",
																"nodeType": "YulFunctionCall",
																"src": "6910:29:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6900:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6900:6:16"
																}
															]
														},
														{
															"nativeSrc": "6948:48:16",
															"nodeType": "YulAssignment",
															"src": "6948:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6981:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6992:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6992:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6977:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:16"
																		},
																		"nativeSrc": "6977:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6977:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6958:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "6958:18:16"
																},
																"nativeSrc": "6958:38:16",
																"nodeType": "YulFunctionCall",
																"src": "6958:38:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6948:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6742:260:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6787:9:16",
														"nodeType": "YulTypedName",
														"src": "6787:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6798:7:16",
														"nodeType": "YulTypedName",
														"src": "6798:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6810:6:16",
														"nodeType": "YulTypedName",
														"src": "6810:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6818:6:16",
														"nodeType": "YulTypedName",
														"src": "6818:6:16",
														"type": ""
													}
												],
												"src": "6742:260:16"
											},
											{
												"body": {
													"nativeSrc": "7060:168:16",
													"nodeType": "YulBlock",
													"src": "7060:168:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7109:16:16",
																"nodeType": "YulBlock",
																"src": "7109:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7118:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7118:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7121:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7121:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7111:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:16"
																			},
																			"nativeSrc": "7111:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7111:12:16"
																		},
																		"nativeSrc": "7111:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7111:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7088:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7088:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7096:4:16",
																						"nodeType": "YulLiteral",
																						"src": "7096:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7084:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7084:3:16"
																				},
																				"nativeSrc": "7084:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7084:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7103:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7103:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7080:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:16"
																		},
																		"nativeSrc": "7080:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7080:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7073:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:16"
																},
																"nativeSrc": "7073:35:16",
																"nodeType": "YulFunctionCall",
																"src": "7073:35:16"
															},
															"nativeSrc": "7070:55:16",
															"nodeType": "YulIf",
															"src": "7070:55:16"
														},
														{
															"nativeSrc": "7134:88:16",
															"nodeType": "YulAssignment",
															"src": "7134:88:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7181:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7181:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7189:4:16",
																				"nodeType": "YulLiteral",
																				"src": "7189:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7177:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:16"
																		},
																		"nativeSrc": "7177:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7209:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7209:6:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7196:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7196:12:16"
																		},
																		"nativeSrc": "7196:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:20:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7218:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7218:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nativeSrc": "7143:33:16",
																	"nodeType": "YulIdentifier",
																	"src": "7143:33:16"
																},
																"nativeSrc": "7143:79:16",
																"nodeType": "YulFunctionCall",
																"src": "7143:79:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7134:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "7134:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "7007:221:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7034:6:16",
														"nodeType": "YulTypedName",
														"src": "7034:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7042:3:16",
														"nodeType": "YulTypedName",
														"src": "7042:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7050:5:16",
														"nodeType": "YulTypedName",
														"src": "7050:5:16",
														"type": ""
													}
												],
												"src": "7007:221:16"
											},
											{
												"body": {
													"nativeSrc": "7340:431:16",
													"nodeType": "YulBlock",
													"src": "7340:431:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7386:16:16",
																"nodeType": "YulBlock",
																"src": "7386:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7395:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7395:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7398:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7398:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7388:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7388:6:16"
																			},
																			"nativeSrc": "7388:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7388:12:16"
																		},
																		"nativeSrc": "7388:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7388:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7361:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7361:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7370:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7357:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7357:3:16"
																		},
																		"nativeSrc": "7357:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7357:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7353:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7353:3:16"
																},
																"nativeSrc": "7353:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7353:32:16"
															},
															"nativeSrc": "7350:52:16",
															"nodeType": "YulIf",
															"src": "7350:52:16"
														},
														{
															"nativeSrc": "7411:37:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7411:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7438:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7438:9:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7425:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "7425:12:16"
																},
																"nativeSrc": "7425:23:16",
																"nodeType": "YulFunctionCall",
																"src": "7425:23:16"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "7415:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7415:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7491:16:16",
																"nodeType": "YulBlock",
																"src": "7491:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7500:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7500:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7503:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7503:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7493:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7493:6:16"
																			},
																			"nativeSrc": "7493:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7493:12:16"
																		},
																		"nativeSrc": "7493:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7493:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7463:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7463:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7471:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7471:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7460:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7460:2:16"
																},
																"nativeSrc": "7460:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7460:30:16"
															},
															"nativeSrc": "7457:50:16",
															"nodeType": "YulIf",
															"src": "7457:50:16"
														},
														{
															"nativeSrc": "7516:60:16",
															"nodeType": "YulAssignment",
															"src": "7516:60:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7548:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7548:9:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "7559:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7559:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7544:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7544:3:16"
																		},
																		"nativeSrc": "7544:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7544:22:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7568:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "7568:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "7526:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "7526:17:16"
																},
																"nativeSrc": "7526:50:16",
																"nodeType": "YulFunctionCall",
																"src": "7526:50:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7516:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:16"
																}
															]
														},
														{
															"nativeSrc": "7585:48:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7585:48:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7618:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7618:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7629:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7629:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7614:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7614:3:16"
																		},
																		"nativeSrc": "7614:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7614:18:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7601:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "7601:12:16"
																},
																"nativeSrc": "7601:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7601:32:16"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "7589:8:16",
																	"nodeType": "YulTypedName",
																	"src": "7589:8:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7678:16:16",
																"nodeType": "YulBlock",
																"src": "7678:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7687:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7687:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7690:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7690:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7680:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7680:6:16"
																			},
																			"nativeSrc": "7680:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7680:12:16"
																		},
																		"nativeSrc": "7680:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7680:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "7648:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "7648:8:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7658:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7658:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7645:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7645:2:16"
																},
																"nativeSrc": "7645:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7645:32:16"
															},
															"nativeSrc": "7642:52:16",
															"nodeType": "YulIf",
															"src": "7642:52:16"
														},
														{
															"nativeSrc": "7703:62:16",
															"nodeType": "YulAssignment",
															"src": "7703:62:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7735:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:16"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "7746:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "7746:8:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7731:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:16"
																		},
																		"nativeSrc": "7731:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7731:24:16"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7757:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "7757:7:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "7713:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "7713:17:16"
																},
																"nativeSrc": "7713:52:16",
																"nodeType": "YulFunctionCall",
																"src": "7713:52:16"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7703:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7703:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "7233:538:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7298:9:16",
														"nodeType": "YulTypedName",
														"src": "7298:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7309:7:16",
														"nodeType": "YulTypedName",
														"src": "7309:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7321:6:16",
														"nodeType": "YulTypedName",
														"src": "7321:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7329:6:16",
														"nodeType": "YulTypedName",
														"src": "7329:6:16",
														"type": ""
													}
												],
												"src": "7233:538:16"
											},
											{
												"body": {
													"nativeSrc": "7831:325:16",
													"nodeType": "YulBlock",
													"src": "7831:325:16",
													"statements": [
														{
															"nativeSrc": "7841:22:16",
															"nodeType": "YulAssignment",
															"src": "7841:22:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7855:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7855:1:16",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7858:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7858:4:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7851:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7851:3:16"
																},
																"nativeSrc": "7851:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7851:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7841:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7841:6:16"
																}
															]
														},
														{
															"nativeSrc": "7872:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7872:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7902:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7902:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7908:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7898:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:16"
																},
																"nativeSrc": "7898:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7898:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7876:18:16",
																	"nodeType": "YulTypedName",
																	"src": "7876:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7949:31:16",
																"nodeType": "YulBlock",
																"src": "7949:31:16",
																"statements": [
																	{
																		"nativeSrc": "7951:27:16",
																		"nodeType": "YulAssignment",
																		"src": "7951:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7965:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "7965:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7973:4:16",
																					"nodeType": "YulLiteral",
																					"src": "7973:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7961:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7961:3:16"
																			},
																			"nativeSrc": "7961:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7961:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7951:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7951:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7929:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "7929:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7922:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7922:6:16"
																},
																"nativeSrc": "7922:26:16",
																"nodeType": "YulFunctionCall",
																"src": "7922:26:16"
															},
															"nativeSrc": "7919:61:16",
															"nodeType": "YulIf",
															"src": "7919:61:16"
														},
														{
															"body": {
																"nativeSrc": "8039:111:16",
																"nodeType": "YulBlock",
																"src": "8039:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8060:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8060:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8067:3:16",
																							"nodeType": "YulLiteral",
																							"src": "8067:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8072:10:16",
																							"nodeType": "YulLiteral",
																							"src": "8072:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8063:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "8063:3:16"
																					},
																					"nativeSrc": "8063:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8063:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8053:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8053:6:16"
																			},
																			"nativeSrc": "8053:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8053:31:16"
																		},
																		"nativeSrc": "8053:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8053:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8104:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8104:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8107:4:16",
																					"nodeType": "YulLiteral",
																					"src": "8107:4:16",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8097:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8097:6:16"
																			},
																			"nativeSrc": "8097:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8097:15:16"
																		},
																		"nativeSrc": "8097:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8097:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8132:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8132:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8135:4:16",
																					"nodeType": "YulLiteral",
																					"src": "8135:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8125:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8125:6:16"
																			},
																			"nativeSrc": "8125:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8125:15:16"
																		},
																		"nativeSrc": "8125:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8125:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7995:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "7995:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8018:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8018:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8026:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8015:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "8015:2:16"
																		},
																		"nativeSrc": "8015:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8015:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7992:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7992:2:16"
																},
																"nativeSrc": "7992:38:16",
																"nodeType": "YulFunctionCall",
																"src": "7992:38:16"
															},
															"nativeSrc": "7989:161:16",
															"nodeType": "YulIf",
															"src": "7989:161:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7776:380:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7811:4:16",
														"nodeType": "YulTypedName",
														"src": "7811:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7820:6:16",
														"nodeType": "YulTypedName",
														"src": "7820:6:16",
														"type": ""
													}
												],
												"src": "7776:380:16"
											},
											{
												"body": {
													"nativeSrc": "8318:214:16",
													"nodeType": "YulBlock",
													"src": "8318:214:16",
													"statements": [
														{
															"nativeSrc": "8328:26:16",
															"nodeType": "YulAssignment",
															"src": "8328:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8340:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8340:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8351:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8351:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8336:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8336:3:16"
																},
																"nativeSrc": "8336:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8336:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8328:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8328:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8370:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8370:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8385:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8385:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8401:3:16",
																								"nodeType": "YulLiteral",
																								"src": "8401:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8406:1:16",
																								"nodeType": "YulLiteral",
																								"src": "8406:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8397:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "8397:3:16"
																						},
																						"nativeSrc": "8397:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "8397:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8410:1:16",
																						"nodeType": "YulLiteral",
																						"src": "8410:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8393:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8393:3:16"
																				},
																				"nativeSrc": "8393:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8393:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8381:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8381:3:16"
																		},
																		"nativeSrc": "8381:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8363:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8363:6:16"
																},
																"nativeSrc": "8363:51:16",
																"nodeType": "YulFunctionCall",
																"src": "8363:51:16"
															},
															"nativeSrc": "8363:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "8363:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8434:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8434:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8445:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8445:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8430:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8430:3:16"
																		},
																		"nativeSrc": "8430:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8430:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8450:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8450:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8423:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:16"
																},
																"nativeSrc": "8423:34:16",
																"nodeType": "YulFunctionCall",
																"src": "8423:34:16"
															},
															"nativeSrc": "8423:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "8423:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8477:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8488:2:16",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8473:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:16"
																		},
																		"nativeSrc": "8473:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8497:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8497:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8513:3:16",
																								"nodeType": "YulLiteral",
																								"src": "8513:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8518:1:16",
																								"nodeType": "YulLiteral",
																								"src": "8518:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8509:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "8509:3:16"
																						},
																						"nativeSrc": "8509:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "8509:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8522:1:16",
																						"nodeType": "YulLiteral",
																						"src": "8522:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8505:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8505:3:16"
																				},
																				"nativeSrc": "8505:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8505:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8493:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:16"
																		},
																		"nativeSrc": "8493:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8493:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8466:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:16"
																},
																"nativeSrc": "8466:60:16",
																"nodeType": "YulFunctionCall",
																"src": "8466:60:16"
															},
															"nativeSrc": "8466:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "8466:60:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8161:371:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8271:9:16",
														"nodeType": "YulTypedName",
														"src": "8271:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8282:6:16",
														"nodeType": "YulTypedName",
														"src": "8282:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8290:6:16",
														"nodeType": "YulTypedName",
														"src": "8290:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8298:6:16",
														"nodeType": "YulTypedName",
														"src": "8298:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8309:4:16",
														"nodeType": "YulTypedName",
														"src": "8309:4:16",
														"type": ""
													}
												],
												"src": "8161:371:16"
											},
											{
												"body": {
													"nativeSrc": "8569:95:16",
													"nodeType": "YulBlock",
													"src": "8569:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8586:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8586:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:16",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8598:10:16",
																				"nodeType": "YulLiteral",
																				"src": "8598:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8589:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:16"
																		},
																		"nativeSrc": "8589:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8589:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8579:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:16"
																},
																"nativeSrc": "8579:31:16",
																"nodeType": "YulFunctionCall",
																"src": "8579:31:16"
															},
															"nativeSrc": "8579:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "8579:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8626:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8626:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8629:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8629:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8619:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8619:6:16"
																},
																"nativeSrc": "8619:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8619:15:16"
															},
															"nativeSrc": "8619:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8619:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8650:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8650:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8653:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8643:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8643:6:16"
																},
																"nativeSrc": "8643:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8643:15:16"
															},
															"nativeSrc": "8643:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8643:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8537:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "8537:127:16"
											},
											{
												"body": {
													"nativeSrc": "8721:116:16",
													"nodeType": "YulBlock",
													"src": "8721:116:16",
													"statements": [
														{
															"nativeSrc": "8731:20:16",
															"nodeType": "YulAssignment",
															"src": "8731:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8746:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8749:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "8749:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8742:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:16"
																},
																"nativeSrc": "8742:9:16",
																"nodeType": "YulFunctionCall",
																"src": "8742:9:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8731:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "8731:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8809:22:16",
																"nodeType": "YulBlock",
																"src": "8809:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8811:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "8811:16:16"
																			},
																			"nativeSrc": "8811:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8811:18:16"
																		},
																		"nativeSrc": "8811:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8811:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8780:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "8780:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8773:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "8773:6:16"
																				},
																				"nativeSrc": "8773:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8773:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8787:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "8787:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8794:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "8794:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8803:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "8803:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8790:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "8790:3:16"
																						},
																						"nativeSrc": "8790:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "8790:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8784:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "8784:2:16"
																				},
																				"nativeSrc": "8784:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8784:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8770:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "8770:2:16"
																		},
																		"nativeSrc": "8770:37:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8770:37:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8763:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8763:6:16"
																},
																"nativeSrc": "8763:45:16",
																"nodeType": "YulFunctionCall",
																"src": "8763:45:16"
															},
															"nativeSrc": "8760:71:16",
															"nodeType": "YulIf",
															"src": "8760:71:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8669:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8700:1:16",
														"nodeType": "YulTypedName",
														"src": "8700:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8703:1:16",
														"nodeType": "YulTypedName",
														"src": "8703:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8709:7:16",
														"nodeType": "YulTypedName",
														"src": "8709:7:16",
														"type": ""
													}
												],
												"src": "8669:168:16"
											},
											{
												"body": {
													"nativeSrc": "8874:95:16",
													"nodeType": "YulBlock",
													"src": "8874:95:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8891:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8891:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8898:3:16",
																				"nodeType": "YulLiteral",
																				"src": "8898:3:16",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8903:10:16",
																				"nodeType": "YulLiteral",
																				"src": "8903:10:16",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8894:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:16"
																		},
																		"nativeSrc": "8894:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8884:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8884:6:16"
																},
																"nativeSrc": "8884:31:16",
																"nodeType": "YulFunctionCall",
																"src": "8884:31:16"
															},
															"nativeSrc": "8884:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "8884:31:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8931:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8931:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8934:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8924:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:16"
																},
																"nativeSrc": "8924:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8924:15:16"
															},
															"nativeSrc": "8924:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8924:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8955:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8955:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8958:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8958:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8948:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8948:6:16"
																},
																"nativeSrc": "8948:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8948:15:16"
															},
															"nativeSrc": "8948:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8948:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8842:127:16",
												"nodeType": "YulFunctionDefinition",
												"src": "8842:127:16"
											},
											{
												"body": {
													"nativeSrc": "9020:171:16",
													"nodeType": "YulBlock",
													"src": "9020:171:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9051:111:16",
																"nodeType": "YulBlock",
																"src": "9051:111:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9072:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9072:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9079:3:16",
																							"nodeType": "YulLiteral",
																							"src": "9079:3:16",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9084:10:16",
																							"nodeType": "YulLiteral",
																							"src": "9084:10:16",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9075:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "9075:3:16"
																					},
																					"nativeSrc": "9075:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9075:20:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9065:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9065:6:16"
																			},
																			"nativeSrc": "9065:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9065:31:16"
																		},
																		"nativeSrc": "9065:31:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9065:31:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9116:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9116:1:16",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9119:4:16",
																					"nodeType": "YulLiteral",
																					"src": "9119:4:16",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9109:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9109:6:16"
																			},
																			"nativeSrc": "9109:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9109:15:16"
																		},
																		"nativeSrc": "9109:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9109:15:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9144:1:16",
																					"nodeType": "YulLiteral",
																					"src": "9144:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9147:4:16",
																					"nodeType": "YulLiteral",
																					"src": "9147:4:16",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9137:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9137:6:16"
																			},
																			"nativeSrc": "9137:15:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9137:15:16"
																		},
																		"nativeSrc": "9137:15:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9137:15:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9040:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "9040:1:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9033:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9033:6:16"
																},
																"nativeSrc": "9033:9:16",
																"nodeType": "YulFunctionCall",
																"src": "9033:9:16"
															},
															"nativeSrc": "9030:132:16",
															"nodeType": "YulIf",
															"src": "9030:132:16"
														},
														{
															"nativeSrc": "9171:14:16",
															"nodeType": "YulAssignment",
															"src": "9171:14:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9180:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "9180:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9183:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "9183:1:16"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9176:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9176:3:16"
																},
																"nativeSrc": "9176:9:16",
																"nodeType": "YulFunctionCall",
																"src": "9176:9:16"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9171:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "9171:1:16"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8974:217:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9005:1:16",
														"nodeType": "YulTypedName",
														"src": "9005:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9008:1:16",
														"nodeType": "YulTypedName",
														"src": "9008:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9014:1:16",
														"nodeType": "YulTypedName",
														"src": "9014:1:16",
														"type": ""
													}
												],
												"src": "8974:217:16"
											},
											{
												"body": {
													"nativeSrc": "9370:229:16",
													"nodeType": "YulBlock",
													"src": "9370:229:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9387:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9387:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9398:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9398:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9380:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9380:6:16"
																},
																"nativeSrc": "9380:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9380:21:16"
															},
															"nativeSrc": "9380:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9380:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9421:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9421:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9432:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9432:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9417:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9417:3:16"
																		},
																		"nativeSrc": "9417:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9417:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9437:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9437:2:16",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9410:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:16"
																},
																"nativeSrc": "9410:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9410:30:16"
															},
															"nativeSrc": "9410:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9410:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9460:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9471:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9471:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9456:3:16"
																		},
																		"nativeSrc": "9456:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9456:18:16"
																	},
																	{
																		"hexValue": "596f7520646f206e6f74206f776e20616e7920736861726573206f6620746869",
																		"kind": "string",
																		"nativeSrc": "9476:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9476:34:16",
																		"type": "",
																		"value": "You do not own any shares of thi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9449:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9449:6:16"
																},
																"nativeSrc": "9449:62:16",
																"nodeType": "YulFunctionCall",
																"src": "9449:62:16"
															},
															"nativeSrc": "9449:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "9449:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9531:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9531:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9542:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9542:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9527:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:16"
																		},
																		"nativeSrc": "9527:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9527:18:16"
																	},
																	{
																		"hexValue": "7320747261636b",
																		"kind": "string",
																		"nativeSrc": "9547:9:16",
																		"nodeType": "YulLiteral",
																		"src": "9547:9:16",
																		"type": "",
																		"value": "s track"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9520:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9520:6:16"
																},
																"nativeSrc": "9520:37:16",
																"nodeType": "YulFunctionCall",
																"src": "9520:37:16"
															},
															"nativeSrc": "9520:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "9520:37:16"
														},
														{
															"nativeSrc": "9566:27:16",
															"nodeType": "YulAssignment",
															"src": "9566:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9578:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9578:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9589:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9589:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9574:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9574:3:16"
																},
																"nativeSrc": "9574:19:16",
																"nodeType": "YulFunctionCall",
																"src": "9574:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9566:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9566:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27c71b42911925277fccc69932d4d9f48433f9b8a44de11392d19df91b750e80__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9196:403:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9347:9:16",
														"nodeType": "YulTypedName",
														"src": "9347:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9361:4:16",
														"nodeType": "YulTypedName",
														"src": "9361:4:16",
														"type": ""
													}
												],
												"src": "9196:403:16"
											},
											{
												"body": {
													"nativeSrc": "9778:225:16",
													"nodeType": "YulBlock",
													"src": "9778:225:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9795:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9795:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9806:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9806:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9788:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:16"
																},
																"nativeSrc": "9788:21:16",
																"nodeType": "YulFunctionCall",
																"src": "9788:21:16"
															},
															"nativeSrc": "9788:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "9788:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9829:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9829:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9840:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9840:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9825:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:16"
																		},
																		"nativeSrc": "9825:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9845:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9845:2:16",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9818:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:16"
																},
																"nativeSrc": "9818:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9818:30:16"
															},
															"nativeSrc": "9818:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "9818:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9868:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9868:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9879:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9879:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9864:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9864:3:16"
																		},
																		"nativeSrc": "9864:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9864:18:16"
																	},
																	{
																		"hexValue": "4e6f20726f79616c747920617661696c61626c6520666f722077697468647261",
																		"kind": "string",
																		"nativeSrc": "9884:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9884:34:16",
																		"type": "",
																		"value": "No royalty available for withdra"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9857:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9857:6:16"
																},
																"nativeSrc": "9857:62:16",
																"nodeType": "YulFunctionCall",
																"src": "9857:62:16"
															},
															"nativeSrc": "9857:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "9857:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9939:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9939:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9950:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9950:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9935:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9935:3:16"
																		},
																		"nativeSrc": "9935:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9935:18:16"
																	},
																	{
																		"hexValue": "77616c",
																		"kind": "string",
																		"nativeSrc": "9955:5:16",
																		"nodeType": "YulLiteral",
																		"src": "9955:5:16",
																		"type": "",
																		"value": "wal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9928:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9928:6:16"
																},
																"nativeSrc": "9928:33:16",
																"nodeType": "YulFunctionCall",
																"src": "9928:33:16"
															},
															"nativeSrc": "9928:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "9928:33:16"
														},
														{
															"nativeSrc": "9970:27:16",
															"nodeType": "YulAssignment",
															"src": "9970:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9982:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9982:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9993:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9993:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9978:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:16"
																},
																"nativeSrc": "9978:19:16",
																"nodeType": "YulFunctionCall",
																"src": "9978:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9970:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9970:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a2331c7c19f2502a16310aa3eef80b95d3147f8dab2f4f3364c6a6a4be1a37__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9604:399:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9755:9:16",
														"nodeType": "YulTypedName",
														"src": "9755:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9769:4:16",
														"nodeType": "YulTypedName",
														"src": "9769:4:16",
														"type": ""
													}
												],
												"src": "9604:399:16"
											},
											{
												"body": {
													"nativeSrc": "10057:79:16",
													"nodeType": "YulBlock",
													"src": "10057:79:16",
													"statements": [
														{
															"nativeSrc": "10067:17:16",
															"nodeType": "YulAssignment",
															"src": "10067:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10079:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10079:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10082:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10082:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10075:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10075:3:16"
																},
																"nativeSrc": "10075:9:16",
																"nodeType": "YulFunctionCall",
																"src": "10075:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10067:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10067:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10108:22:16",
																"nodeType": "YulBlock",
																"src": "10108:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10110:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10110:16:16"
																			},
																			"nativeSrc": "10110:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10110:18:16"
																		},
																		"nativeSrc": "10110:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10110:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10099:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10099:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10105:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10105:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10096:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10096:2:16"
																},
																"nativeSrc": "10096:11:16",
																"nodeType": "YulFunctionCall",
																"src": "10096:11:16"
															},
															"nativeSrc": "10093:37:16",
															"nodeType": "YulIf",
															"src": "10093:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10008:128:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10039:1:16",
														"nodeType": "YulTypedName",
														"src": "10039:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10042:1:16",
														"nodeType": "YulTypedName",
														"src": "10042:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10048:4:16",
														"nodeType": "YulTypedName",
														"src": "10048:4:16",
														"type": ""
													}
												],
												"src": "10008:128:16"
											},
											{
												"body": {
													"nativeSrc": "10298:188:16",
													"nodeType": "YulBlock",
													"src": "10298:188:16",
													"statements": [
														{
															"nativeSrc": "10308:26:16",
															"nodeType": "YulAssignment",
															"src": "10308:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10320:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10320:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10331:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10331:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10316:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:16"
																},
																"nativeSrc": "10316:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10316:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10308:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10308:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10350:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10350:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10361:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10361:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10343:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:16"
																},
																"nativeSrc": "10343:25:16",
																"nodeType": "YulFunctionCall",
																"src": "10343:25:16"
															},
															"nativeSrc": "10343:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "10343:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10388:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10388:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10399:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10399:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10384:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10384:3:16"
																		},
																		"nativeSrc": "10384:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10384:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10408:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10424:3:16",
																								"nodeType": "YulLiteral",
																								"src": "10424:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10429:1:16",
																								"nodeType": "YulLiteral",
																								"src": "10429:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10420:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "10420:3:16"
																						},
																						"nativeSrc": "10420:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "10420:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10433:1:16",
																						"nodeType": "YulLiteral",
																						"src": "10433:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10416:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:16"
																				},
																				"nativeSrc": "10416:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10404:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10404:3:16"
																		},
																		"nativeSrc": "10404:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10404:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10377:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10377:6:16"
																},
																"nativeSrc": "10377:60:16",
																"nodeType": "YulFunctionCall",
																"src": "10377:60:16"
															},
															"nativeSrc": "10377:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "10377:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10457:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10468:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10468:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10453:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:16"
																		},
																		"nativeSrc": "10453:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10453:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10473:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10473:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10446:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10446:6:16"
																},
																"nativeSrc": "10446:34:16",
																"nodeType": "YulFunctionCall",
																"src": "10446:34:16"
															},
															"nativeSrc": "10446:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "10446:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10141:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10251:9:16",
														"nodeType": "YulTypedName",
														"src": "10251:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10262:6:16",
														"nodeType": "YulTypedName",
														"src": "10262:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10270:6:16",
														"nodeType": "YulTypedName",
														"src": "10270:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10278:6:16",
														"nodeType": "YulTypedName",
														"src": "10278:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10289:4:16",
														"nodeType": "YulTypedName",
														"src": "10289:4:16",
														"type": ""
													}
												],
												"src": "10141:345:16"
											},
											{
												"body": {
													"nativeSrc": "10665:230:16",
													"nodeType": "YulBlock",
													"src": "10665:230:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10682:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10682:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10693:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10693:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10675:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10675:6:16"
																},
																"nativeSrc": "10675:21:16",
																"nodeType": "YulFunctionCall",
																"src": "10675:21:16"
															},
															"nativeSrc": "10675:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "10675:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10716:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10716:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10727:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10727:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10712:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10712:3:16"
																		},
																		"nativeSrc": "10712:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10712:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10732:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:16",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10705:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10705:6:16"
																},
																"nativeSrc": "10705:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10705:30:16"
															},
															"nativeSrc": "10705:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "10705:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10755:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10766:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10766:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10751:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10751:3:16"
																		},
																		"nativeSrc": "10751:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10751:18:16"
																	},
																	{
																		"hexValue": "526f79616c747920616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "10771:34:16",
																		"nodeType": "YulLiteral",
																		"src": "10771:34:16",
																		"type": "",
																		"value": "Royalty amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10744:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:16"
																},
																"nativeSrc": "10744:62:16",
																"nodeType": "YulFunctionCall",
																"src": "10744:62:16"
															},
															"nativeSrc": "10744:62:16",
															"nodeType": "YulExpressionStatement",
															"src": "10744:62:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10826:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10826:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10837:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10837:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10822:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:16"
																		},
																		"nativeSrc": "10822:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10822:18:16"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "10842:10:16",
																		"nodeType": "YulLiteral",
																		"src": "10842:10:16",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10815:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:16"
																},
																"nativeSrc": "10815:38:16",
																"nodeType": "YulFunctionCall",
																"src": "10815:38:16"
															},
															"nativeSrc": "10815:38:16",
															"nodeType": "YulExpressionStatement",
															"src": "10815:38:16"
														},
														{
															"nativeSrc": "10862:27:16",
															"nodeType": "YulAssignment",
															"src": "10862:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10874:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10874:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10885:3:16",
																		"nodeType": "YulLiteral",
																		"src": "10885:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10870:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10870:3:16"
																},
																"nativeSrc": "10870:19:16",
																"nodeType": "YulFunctionCall",
																"src": "10870:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10862:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10862:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c720dc516040b79f05f5ec556572ec11727bdc7c6d8b6bb6e511515b2ff3afa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10491:404:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:16",
														"nodeType": "YulTypedName",
														"src": "10642:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10656:4:16",
														"nodeType": "YulTypedName",
														"src": "10656:4:16",
														"type": ""
													}
												],
												"src": "10491:404:16"
											},
											{
												"body": {
													"nativeSrc": "10948:77:16",
													"nodeType": "YulBlock",
													"src": "10948:77:16",
													"statements": [
														{
															"nativeSrc": "10958:16:16",
															"nodeType": "YulAssignment",
															"src": "10958:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10969:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10969:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10972:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10972:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10965:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10965:3:16"
																},
																"nativeSrc": "10965:9:16",
																"nodeType": "YulFunctionCall",
																"src": "10965:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10958:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10958:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10997:22:16",
																"nodeType": "YulBlock",
																"src": "10997:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10999:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10999:16:16"
																			},
																			"nativeSrc": "10999:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10999:18:16"
																		},
																		"nativeSrc": "10999:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10999:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10989:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10989:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10992:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10992:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10986:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10986:2:16"
																},
																"nativeSrc": "10986:10:16",
																"nodeType": "YulFunctionCall",
																"src": "10986:10:16"
															},
															"nativeSrc": "10983:36:16",
															"nodeType": "YulIf",
															"src": "10983:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10900:125:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10931:1:16",
														"nodeType": "YulTypedName",
														"src": "10931:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10934:1:16",
														"nodeType": "YulTypedName",
														"src": "10934:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10940:3:16",
														"nodeType": "YulTypedName",
														"src": "10940:3:16",
														"type": ""
													}
												],
												"src": "10900:125:16"
											},
											{
												"body": {
													"nativeSrc": "11159:119:16",
													"nodeType": "YulBlock",
													"src": "11159:119:16",
													"statements": [
														{
															"nativeSrc": "11169:26:16",
															"nodeType": "YulAssignment",
															"src": "11169:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11181:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11192:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11192:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11177:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11177:3:16"
																},
																"nativeSrc": "11177:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11177:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11169:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11211:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11211:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11222:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11222:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11204:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11204:6:16"
																},
																"nativeSrc": "11204:25:16",
																"nodeType": "YulFunctionCall",
																"src": "11204:25:16"
															},
															"nativeSrc": "11204:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "11204:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11249:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11249:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11260:2:16",
																				"nodeType": "YulLiteral",
																				"src": "11260:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11245:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11245:3:16"
																		},
																		"nativeSrc": "11245:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11265:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11265:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11238:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:16"
																},
																"nativeSrc": "11238:34:16",
																"nodeType": "YulFunctionCall",
																"src": "11238:34:16"
															},
															"nativeSrc": "11238:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "11238:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11030:248:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11120:9:16",
														"nodeType": "YulTypedName",
														"src": "11120:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11131:6:16",
														"nodeType": "YulTypedName",
														"src": "11131:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11139:6:16",
														"nodeType": "YulTypedName",
														"src": "11139:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11150:4:16",
														"nodeType": "YulTypedName",
														"src": "11150:4:16",
														"type": ""
													}
												],
												"src": "11030:248:16"
											},
											{
												"body": {
													"nativeSrc": "11333:162:16",
													"nodeType": "YulBlock",
													"src": "11333:162:16",
													"statements": [
														{
															"nativeSrc": "11343:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11343:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11363:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11363:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11357:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11357:5:16"
																},
																"nativeSrc": "11357:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11357:12:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11347:6:16",
																	"nodeType": "YulTypedName",
																	"src": "11347:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11384:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11384:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11393:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "11393:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11400:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11400:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11389:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11389:3:16"
																		},
																		"nativeSrc": "11389:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11389:16:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11407:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11407:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "11378:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11378:5:16"
																},
																"nativeSrc": "11378:36:16",
																"nodeType": "YulFunctionCall",
																"src": "11378:36:16"
															},
															"nativeSrc": "11378:36:16",
															"nodeType": "YulExpressionStatement",
															"src": "11378:36:16"
														},
														{
															"nativeSrc": "11423:26:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11423:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11437:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11442:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11442:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11433:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11433:3:16"
																},
																"nativeSrc": "11433:16:16",
																"nodeType": "YulFunctionCall",
																"src": "11433:16:16"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11427:2:16",
																	"nodeType": "YulTypedName",
																	"src": "11427:2:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11465:2:16",
																		"nodeType": "YulIdentifier",
																		"src": "11465:2:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11469:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11469:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11458:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11458:6:16"
																},
																"nativeSrc": "11458:13:16",
																"nodeType": "YulFunctionCall",
																"src": "11458:13:16"
															},
															"nativeSrc": "11458:13:16",
															"nodeType": "YulExpressionStatement",
															"src": "11458:13:16"
														},
														{
															"nativeSrc": "11480:9:16",
															"nodeType": "YulAssignment",
															"src": "11480:9:16",
															"value": {
																"name": "_1",
																"nativeSrc": "11487:2:16",
																"nodeType": "YulIdentifier",
																"src": "11487:2:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11480:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11480:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "11283:212:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11310:5:16",
														"nodeType": "YulTypedName",
														"src": "11310:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11317:3:16",
														"nodeType": "YulTypedName",
														"src": "11317:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11325:3:16",
														"nodeType": "YulTypedName",
														"src": "11325:3:16",
														"type": ""
													}
												],
												"src": "11283:212:16"
											},
											{
												"body": {
													"nativeSrc": "11687:80:16",
													"nodeType": "YulBlock",
													"src": "11687:80:16",
													"statements": [
														{
															"nativeSrc": "11697:64:16",
															"nodeType": "YulAssignment",
															"src": "11697:64:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11722:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11722:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11748:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11748:6:16"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "11756:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11756:3:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "11730:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "11730:17:16"
																		},
																		"nativeSrc": "11730:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11730:30:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11704:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11704:17:16"
																},
																"nativeSrc": "11704:57:16",
																"nodeType": "YulFunctionCall",
																"src": "11704:57:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11697:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11697:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11500:267:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11655:3:16",
														"nodeType": "YulTypedName",
														"src": "11655:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11660:6:16",
														"nodeType": "YulTypedName",
														"src": "11660:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11668:6:16",
														"nodeType": "YulTypedName",
														"src": "11668:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11679:3:16",
														"nodeType": "YulTypedName",
														"src": "11679:3:16",
														"type": ""
													}
												],
												"src": "11500:267:16"
											},
											{
												"body": {
													"nativeSrc": "11946:169:16",
													"nodeType": "YulBlock",
													"src": "11946:169:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11963:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11963:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11974:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11974:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11956:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11956:6:16"
																},
																"nativeSrc": "11956:21:16",
																"nodeType": "YulFunctionCall",
																"src": "11956:21:16"
															},
															"nativeSrc": "11956:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "11956:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11997:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11997:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12008:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12008:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11993:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11993:3:16"
																		},
																		"nativeSrc": "11993:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11993:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12013:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12013:2:16",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11986:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:16"
																},
																"nativeSrc": "11986:30:16",
																"nodeType": "YulFunctionCall",
																"src": "11986:30:16"
															},
															"nativeSrc": "11986:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "11986:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12036:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12036:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12047:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12047:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12032:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12032:3:16"
																		},
																		"nativeSrc": "12032:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12032:18:16"
																	},
																	{
																		"hexValue": "547261636b206e6f7420617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "12052:21:16",
																		"nodeType": "YulLiteral",
																		"src": "12052:21:16",
																		"type": "",
																		"value": "Track not available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12025:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12025:6:16"
																},
																"nativeSrc": "12025:49:16",
																"nodeType": "YulFunctionCall",
																"src": "12025:49:16"
															},
															"nativeSrc": "12025:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "12025:49:16"
														},
														{
															"nativeSrc": "12083:26:16",
															"nodeType": "YulAssignment",
															"src": "12083:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12095:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12095:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12106:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12106:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12091:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12091:3:16"
																},
																"nativeSrc": "12091:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12091:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12083:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12083:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64d3295d37ddc4cbcb967b1bfe2f1fc298bc5ab15e2cacea28be7757731b61b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11772:343:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11923:9:16",
														"nodeType": "YulTypedName",
														"src": "11923:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11937:4:16",
														"nodeType": "YulTypedName",
														"src": "11937:4:16",
														"type": ""
													}
												],
												"src": "11772:343:16"
											},
											{
												"body": {
													"nativeSrc": "12294:173:16",
													"nodeType": "YulBlock",
													"src": "12294:173:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12311:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12311:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12322:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12322:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12304:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12304:6:16"
																},
																"nativeSrc": "12304:21:16",
																"nodeType": "YulFunctionCall",
																"src": "12304:21:16"
															},
															"nativeSrc": "12304:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "12304:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12345:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12345:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12356:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12356:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12341:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12341:3:16"
																		},
																		"nativeSrc": "12341:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12341:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12361:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12361:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12334:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12334:6:16"
																},
																"nativeSrc": "12334:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12334:30:16"
															},
															"nativeSrc": "12334:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "12334:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12384:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12384:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12395:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12395:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12380:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12380:3:16"
																		},
																		"nativeSrc": "12380:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12380:18:16"
																	},
																	{
																		"hexValue": "496e76616c6964206e756d626572206f66736861726573",
																		"kind": "string",
																		"nativeSrc": "12400:25:16",
																		"nodeType": "YulLiteral",
																		"src": "12400:25:16",
																		"type": "",
																		"value": "Invalid number ofshares"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12373:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12373:6:16"
																},
																"nativeSrc": "12373:53:16",
																"nodeType": "YulFunctionCall",
																"src": "12373:53:16"
															},
															"nativeSrc": "12373:53:16",
															"nodeType": "YulExpressionStatement",
															"src": "12373:53:16"
														},
														{
															"nativeSrc": "12435:26:16",
															"nodeType": "YulAssignment",
															"src": "12435:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12447:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12447:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12458:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12458:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12443:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12443:3:16"
																},
																"nativeSrc": "12443:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12443:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12435:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12435:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07e703d688a67e300f3fab42d415aa984a7c9240ef5cb6cd9684c2f24aec5e6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12120:347:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12271:9:16",
														"nodeType": "YulTypedName",
														"src": "12271:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12285:4:16",
														"nodeType": "YulTypedName",
														"src": "12285:4:16",
														"type": ""
													}
												],
												"src": "12120:347:16"
											},
											{
												"body": {
													"nativeSrc": "12646:170:16",
													"nodeType": "YulBlock",
													"src": "12646:170:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12663:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12663:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12674:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12674:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12656:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:16"
																},
																"nativeSrc": "12656:21:16",
																"nodeType": "YulFunctionCall",
																"src": "12656:21:16"
															},
															"nativeSrc": "12656:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "12656:21:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12697:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12697:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12708:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12708:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12693:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12693:3:16"
																		},
																		"nativeSrc": "12693:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12693:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12713:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12713:2:16",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12686:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12686:6:16"
																},
																"nativeSrc": "12686:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12686:30:16"
															},
															"nativeSrc": "12686:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "12686:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12736:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12736:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12747:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12747:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12732:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12732:3:16"
																		},
																		"nativeSrc": "12732:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12732:18:16"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207061796d656e74",
																		"kind": "string",
																		"nativeSrc": "12752:22:16",
																		"nodeType": "YulLiteral",
																		"src": "12752:22:16",
																		"type": "",
																		"value": "Insufficient payment"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12725:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12725:6:16"
																},
																"nativeSrc": "12725:50:16",
																"nodeType": "YulFunctionCall",
																"src": "12725:50:16"
															},
															"nativeSrc": "12725:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "12725:50:16"
														},
														{
															"nativeSrc": "12784:26:16",
															"nodeType": "YulAssignment",
															"src": "12784:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12796:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12796:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12807:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12807:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12792:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12792:3:16"
																},
																"nativeSrc": "12792:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12792:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12784:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12784:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12472:344:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12623:9:16",
														"nodeType": "YulTypedName",
														"src": "12623:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12637:4:16",
														"nodeType": "YulTypedName",
														"src": "12637:4:16",
														"type": ""
													}
												],
												"src": "12472:344:16"
											},
											{
												"body": {
													"nativeSrc": "12877:65:16",
													"nodeType": "YulBlock",
													"src": "12877:65:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12894:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12894:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "12897:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12897:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12887:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12887:6:16"
																},
																"nativeSrc": "12887:14:16",
																"nodeType": "YulFunctionCall",
																"src": "12887:14:16"
															},
															"nativeSrc": "12887:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "12887:14:16"
														},
														{
															"nativeSrc": "12910:26:16",
															"nodeType": "YulAssignment",
															"src": "12910:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12928:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12928:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12931:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12931:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "12918:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "12918:9:16"
																},
																"nativeSrc": "12918:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12918:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12910:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12910:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "12821:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12860:3:16",
														"nodeType": "YulTypedName",
														"src": "12860:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12868:4:16",
														"nodeType": "YulTypedName",
														"src": "12868:4:16",
														"type": ""
													}
												],
												"src": "12821:121:16"
											},
											{
												"body": {
													"nativeSrc": "13028:437:16",
													"nodeType": "YulBlock",
													"src": "13028:437:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "13061:398:16",
																"nodeType": "YulBlock",
																"src": "13061:398:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13082:1:16",
																					"nodeType": "YulLiteral",
																					"src": "13082:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "13085:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13085:5:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13075:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13075:6:16"
																			},
																			"nativeSrc": "13075:16:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13075:16:16"
																		},
																		"nativeSrc": "13075:16:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13075:16:16"
																	},
																	{
																		"nativeSrc": "13104:30:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13104:30:16",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13126:1:16",
																					"nodeType": "YulLiteral",
																					"src": "13126:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13129:4:16",
																					"nodeType": "YulLiteral",
																					"src": "13129:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "13116:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13116:9:16"
																			},
																			"nativeSrc": "13116:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13116:18:16"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "13108:4:16",
																				"nodeType": "YulTypedName",
																				"src": "13108:4:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13147:57:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13147:57:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "13170:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "13170:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13180:1:16",
																							"nodeType": "YulLiteral",
																							"src": "13180:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "13187:10:16",
																									"nodeType": "YulIdentifier",
																									"src": "13187:10:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13199:2:16",
																									"nodeType": "YulLiteral",
																									"src": "13199:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13183:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "13183:3:16"
																							},
																							"nativeSrc": "13183:19:16",
																							"nodeType": "YulFunctionCall",
																							"src": "13183:19:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13176:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "13176:3:16"
																					},
																					"nativeSrc": "13176:27:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13176:27:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13166:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13166:3:16"
																			},
																			"nativeSrc": "13166:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13166:38:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "13151:11:16",
																				"nodeType": "YulTypedName",
																				"src": "13151:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13241:23:16",
																			"nodeType": "YulBlock",
																			"src": "13241:23:16",
																			"statements": [
																				{
																					"nativeSrc": "13243:19:16",
																					"nodeType": "YulAssignment",
																					"src": "13243:19:16",
																					"value": {
																						"name": "data",
																						"nativeSrc": "13258:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "13258:4:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13243:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "13243:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13223:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "13223:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13235:4:16",
																					"nodeType": "YulLiteral",
																					"src": "13235:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13220:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "13220:2:16"
																			},
																			"nativeSrc": "13220:20:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13220:20:16"
																		},
																		"nativeSrc": "13217:47:16",
																		"nodeType": "YulIf",
																		"src": "13217:47:16"
																	},
																	{
																		"nativeSrc": "13277:41:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13277:41:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "13291:4:16",
																					"nodeType": "YulIdentifier",
																					"src": "13291:4:16"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13301:1:16",
																							"nodeType": "YulLiteral",
																							"src": "13301:1:16",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13308:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "13308:3:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13313:2:16",
																									"nodeType": "YulLiteral",
																									"src": "13313:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13304:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "13304:3:16"
																							},
																							"nativeSrc": "13304:12:16",
																							"nodeType": "YulFunctionCall",
																							"src": "13304:12:16"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "13297:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "13297:3:16"
																					},
																					"nativeSrc": "13297:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13297:20:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13287:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13287:3:16"
																			},
																			"nativeSrc": "13287:31:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13287:31:16"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "13281:2:16",
																				"nodeType": "YulTypedName",
																				"src": "13281:2:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13331:24:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13331:24:16",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "13344:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "13344:11:16"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "13335:5:16",
																				"nodeType": "YulTypedName",
																				"src": "13335:5:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13429:20:16",
																			"nodeType": "YulBlock",
																			"src": "13429:20:16",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "13438:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "13438:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13445:1:16",
																								"nodeType": "YulLiteral",
																								"src": "13445:1:16",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "13431:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "13431:6:16"
																						},
																						"nativeSrc": "13431:16:16",
																						"nodeType": "YulFunctionCall",
																						"src": "13431:16:16"
																					},
																					"nativeSrc": "13431:16:16",
																					"nodeType": "YulExpressionStatement",
																					"src": "13431:16:16"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13379:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13379:5:16"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "13386:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "13386:2:16"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13376:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "13376:2:16"
																			},
																			"nativeSrc": "13376:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13376:13:16"
																		},
																		"nativeSrc": "13368:81:16",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "13390:26:16",
																			"nodeType": "YulBlock",
																			"src": "13390:26:16",
																			"statements": [
																				{
																					"nativeSrc": "13392:22:16",
																					"nodeType": "YulAssignment",
																					"src": "13392:22:16",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "13405:5:16",
																								"nodeType": "YulIdentifier",
																								"src": "13405:5:16"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13412:1:16",
																								"nodeType": "YulLiteral",
																								"src": "13412:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "13401:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "13401:3:16"
																						},
																						"nativeSrc": "13401:13:16",
																						"nodeType": "YulFunctionCall",
																						"src": "13401:13:16"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "13392:5:16",
																							"nodeType": "YulIdentifier",
																							"src": "13392:5:16"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "13372:3:16",
																			"nodeType": "YulBlock",
																			"src": "13372:3:16",
																			"statements": []
																		},
																		"src": "13368:81:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "13044:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13044:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13049:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13049:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13041:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13041:2:16"
																},
																"nativeSrc": "13041:11:16",
																"nodeType": "YulFunctionCall",
																"src": "13041:11:16"
															},
															"nativeSrc": "13038:421:16",
															"nodeType": "YulIf",
															"src": "13038:421:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "12947:518:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13000:5:16",
														"nodeType": "YulTypedName",
														"src": "13000:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13007:3:16",
														"nodeType": "YulTypedName",
														"src": "13007:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "13012:10:16",
														"nodeType": "YulTypedName",
														"src": "13012:10:16",
														"type": ""
													}
												],
												"src": "12947:518:16"
											},
											{
												"body": {
													"nativeSrc": "13555:81:16",
													"nodeType": "YulBlock",
													"src": "13555:81:16",
													"statements": [
														{
															"nativeSrc": "13565:65:16",
															"nodeType": "YulAssignment",
															"src": "13565:65:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "13580:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "13580:4:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "13598:1:16",
																										"nodeType": "YulLiteral",
																										"src": "13598:1:16",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "13601:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "13601:3:16"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "13594:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "13594:3:16"
																								},
																								"nativeSrc": "13594:11:16",
																								"nodeType": "YulFunctionCall",
																								"src": "13594:11:16"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "13611:1:16",
																										"nodeType": "YulLiteral",
																										"src": "13611:1:16",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "13607:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "13607:3:16"
																								},
																								"nativeSrc": "13607:6:16",
																								"nodeType": "YulFunctionCall",
																								"src": "13607:6:16"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "13590:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "13590:3:16"
																						},
																						"nativeSrc": "13590:24:16",
																						"nodeType": "YulFunctionCall",
																						"src": "13590:24:16"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13586:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "13586:3:16"
																				},
																				"nativeSrc": "13586:29:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13586:29:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13576:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13576:3:16"
																		},
																		"nativeSrc": "13576:40:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13576:40:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13622:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13622:1:16",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13625:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13625:3:16"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13618:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13618:3:16"
																		},
																		"nativeSrc": "13618:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13618:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13573:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13573:2:16"
																},
																"nativeSrc": "13573:57:16",
																"nodeType": "YulFunctionCall",
																"src": "13573:57:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13565:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13565:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "13470:166:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13532:4:16",
														"nodeType": "YulTypedName",
														"src": "13532:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13538:3:16",
														"nodeType": "YulTypedName",
														"src": "13538:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "13546:4:16",
														"nodeType": "YulTypedName",
														"src": "13546:4:16",
														"type": ""
													}
												],
												"src": "13470:166:16"
											},
											{
												"body": {
													"nativeSrc": "13737:1203:16",
													"nodeType": "YulBlock",
													"src": "13737:1203:16",
													"statements": [
														{
															"nativeSrc": "13747:24:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13747:24:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13767:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13767:3:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13761:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "13761:5:16"
																},
																"nativeSrc": "13761:10:16",
																"nodeType": "YulFunctionCall",
																"src": "13761:10:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "13751:6:16",
																	"nodeType": "YulTypedName",
																	"src": "13751:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13814:22:16",
																"nodeType": "YulBlock",
																"src": "13814:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13816:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13816:16:16"
																			},
																			"nativeSrc": "13816:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13816:18:16"
																		},
																		"nativeSrc": "13816:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13816:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13786:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13786:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13794:18:16",
																		"nodeType": "YulLiteral",
																		"src": "13794:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13783:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13783:2:16"
																},
																"nativeSrc": "13783:30:16",
																"nodeType": "YulFunctionCall",
																"src": "13783:30:16"
															},
															"nativeSrc": "13780:56:16",
															"nodeType": "YulIf",
															"src": "13780:56:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13889:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13889:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13927:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "13927:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13921:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13921:5:16"
																				},
																				"nativeSrc": "13921:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13921:11:16"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "13895:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "13895:25:16"
																		},
																		"nativeSrc": "13895:38:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13895:38:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13935:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13935:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "13845:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13845:43:16"
																},
																"nativeSrc": "13845:97:16",
																"nodeType": "YulFunctionCall",
																"src": "13845:97:16"
															},
															"nativeSrc": "13845:97:16",
															"nodeType": "YulExpressionStatement",
															"src": "13845:97:16"
														},
														{
															"nativeSrc": "13951:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13951:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "13968:1:16",
																"nodeType": "YulLiteral",
																"src": "13968:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13955:9:16",
																	"nodeType": "YulTypedName",
																	"src": "13955:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13978:17:16",
															"nodeType": "YulAssignment",
															"src": "13978:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "13991:4:16",
																"nodeType": "YulLiteral",
																"src": "13991:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13978:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "13978:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14041:642:16",
																		"nodeType": "YulBlock",
																		"src": "14041:642:16",
																		"statements": [
																			{
																				"nativeSrc": "14055:35:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14055:35:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14074:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "14074:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14086:2:16",
																									"nodeType": "YulLiteral",
																									"src": "14086:2:16",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14082:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "14082:3:16"
																							},
																							"nativeSrc": "14082:7:16",
																							"nodeType": "YulFunctionCall",
																							"src": "14082:7:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14070:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "14070:3:16"
																					},
																					"nativeSrc": "14070:20:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14070:20:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14059:7:16",
																						"nodeType": "YulTypedName",
																						"src": "14059:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14103:49:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14103:49:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14147:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "14147:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "14117:29:16",
																						"nodeType": "YulIdentifier",
																						"src": "14117:29:16"
																					},
																					"nativeSrc": "14117:35:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14117:35:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "14107:6:16",
																						"nodeType": "YulTypedName",
																						"src": "14107:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14165:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14165:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14174:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14174:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "14169:1:16",
																						"nodeType": "YulTypedName",
																						"src": "14169:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14245:165:16",
																					"nodeType": "YulBlock",
																					"src": "14245:165:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14270:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "14270:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "14288:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "14288:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "14293:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "14293:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "14284:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "14284:3:16"
																												},
																												"nativeSrc": "14284:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "14284:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "14278:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "14278:5:16"
																										},
																										"nativeSrc": "14278:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "14278:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14263:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "14263:6:16"
																								},
																								"nativeSrc": "14263:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14263:42:16"
																							},
																							"nativeSrc": "14263:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "14263:42:16"
																						},
																						{
																							"nativeSrc": "14322:24:16",
																							"nodeType": "YulAssignment",
																							"src": "14322:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14336:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "14336:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14344:1:16",
																										"nodeType": "YulLiteral",
																										"src": "14344:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14332:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "14332:3:16"
																								},
																								"nativeSrc": "14332:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14332:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14322:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "14322:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14363:33:16",
																							"nodeType": "YulAssignment",
																							"src": "14363:33:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14380:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "14380:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14391:4:16",
																										"nodeType": "YulLiteral",
																										"src": "14391:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14376:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "14376:3:16"
																								},
																								"nativeSrc": "14376:20:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14376:20:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14363:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "14363:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "14199:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "14199:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14202:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "14202:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14196:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "14196:2:16"
																					},
																					"nativeSrc": "14196:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14196:14:16"
																				},
																				"nativeSrc": "14188:222:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14211:21:16",
																					"nodeType": "YulBlock",
																					"src": "14211:21:16",
																					"statements": [
																						{
																							"nativeSrc": "14213:17:16",
																							"nodeType": "YulAssignment",
																							"src": "14213:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14222:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "14222:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14225:4:16",
																										"nodeType": "YulLiteral",
																										"src": "14225:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14218:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "14218:3:16"
																								},
																								"nativeSrc": "14218:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14218:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14213:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "14213:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "14192:3:16",
																					"nodeType": "YulBlock",
																					"src": "14192:3:16",
																					"statements": []
																				},
																				"src": "14188:222:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "14458:166:16",
																					"nodeType": "YulBlock",
																					"src": "14458:166:16",
																					"statements": [
																						{
																							"nativeSrc": "14476:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14476:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14503:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "14503:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14508:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "14508:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14499:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "14499:3:16"
																										},
																										"nativeSrc": "14499:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "14499:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14493:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "14493:5:16"
																								},
																								"nativeSrc": "14493:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14493:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14480:9:16",
																									"nodeType": "YulTypedName",
																									"src": "14480:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14543:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "14543:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14555:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "14555:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "14582:1:16",
																																				"nodeType": "YulLiteral",
																																				"src": "14582:1:16",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "14585:6:16",
																																				"nodeType": "YulIdentifier",
																																				"src": "14585:6:16"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "14578:3:16",
																																			"nodeType": "YulIdentifier",
																																			"src": "14578:3:16"
																																		},
																																		"nativeSrc": "14578:14:16",
																																		"nodeType": "YulFunctionCall",
																																		"src": "14578:14:16"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "14594:3:16",
																																		"nodeType": "YulLiteral",
																																		"src": "14594:3:16",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "14574:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "14574:3:16"
																																},
																																"nativeSrc": "14574:24:16",
																																"nodeType": "YulFunctionCall",
																																"src": "14574:24:16"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "14604:1:16",
																																		"nodeType": "YulLiteral",
																																		"src": "14604:1:16",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "14600:3:16",
																																	"nodeType": "YulIdentifier",
																																	"src": "14600:3:16"
																																},
																																"nativeSrc": "14600:6:16",
																																"nodeType": "YulFunctionCall",
																																"src": "14600:6:16"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "14570:3:16",
																															"nodeType": "YulIdentifier",
																															"src": "14570:3:16"
																														},
																														"nativeSrc": "14570:37:16",
																														"nodeType": "YulFunctionCall",
																														"src": "14570:37:16"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "14566:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "14566:3:16"
																												},
																												"nativeSrc": "14566:42:16",
																												"nodeType": "YulFunctionCall",
																												"src": "14566:42:16"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "14551:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "14551:3:16"
																										},
																										"nativeSrc": "14551:58:16",
																										"nodeType": "YulFunctionCall",
																										"src": "14551:58:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14536:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "14536:6:16"
																								},
																								"nativeSrc": "14536:74:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14536:74:16"
																							},
																							"nativeSrc": "14536:74:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "14536:74:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14429:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "14429:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14438:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "14438:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14426:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "14426:2:16"
																					},
																					"nativeSrc": "14426:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14426:19:16"
																				},
																				"nativeSrc": "14423:201:16",
																				"nodeType": "YulIf",
																				"src": "14423:201:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14644:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "14644:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "14658:1:16",
																											"nodeType": "YulLiteral",
																											"src": "14658:1:16",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "14661:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "14661:6:16"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "14654:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "14654:3:16"
																									},
																									"nativeSrc": "14654:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "14654:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "14670:1:16",
																									"nodeType": "YulLiteral",
																									"src": "14670:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "14650:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "14650:3:16"
																							},
																							"nativeSrc": "14650:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "14650:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14637:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "14637:6:16"
																					},
																					"nativeSrc": "14637:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14637:36:16"
																				},
																				"nativeSrc": "14637:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "14637:36:16"
																			}
																		]
																	},
																	"nativeSrc": "14034:649:16",
																	"nodeType": "YulCase",
																	"src": "14034:649:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14039:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14039:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14700:234:16",
																		"nodeType": "YulBlock",
																		"src": "14700:234:16",
																		"statements": [
																			{
																				"nativeSrc": "14714:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14714:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14727:1:16",
																					"nodeType": "YulLiteral",
																					"src": "14727:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "14718:5:16",
																						"nodeType": "YulTypedName",
																						"src": "14718:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14763:67:16",
																					"nodeType": "YulBlock",
																					"src": "14763:67:16",
																					"statements": [
																						{
																							"nativeSrc": "14781:35:16",
																							"nodeType": "YulAssignment",
																							"src": "14781:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14800:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "14800:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14805:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "14805:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14796:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "14796:3:16"
																										},
																										"nativeSrc": "14796:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "14796:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14790:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "14790:5:16"
																								},
																								"nativeSrc": "14790:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "14790:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "14781:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "14781:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "14744:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "14744:6:16"
																				},
																				"nativeSrc": "14741:89:16",
																				"nodeType": "YulIf",
																				"src": "14741:89:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14850:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "14850:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14909:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "14909:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14916:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "14916:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14856:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "14856:52:16"
																							},
																							"nativeSrc": "14856:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "14856:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "14843:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "14843:6:16"
																					},
																					"nativeSrc": "14843:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14843:81:16"
																				},
																				"nativeSrc": "14843:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "14843:81:16"
																			}
																		]
																	},
																	"nativeSrc": "14692:242:16",
																	"nodeType": "YulCase",
																	"src": "14692:242:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14014:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14014:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14022:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14022:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14011:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14011:2:16"
																},
																"nativeSrc": "14011:14:16",
																"nodeType": "YulFunctionCall",
																"src": "14011:14:16"
															},
															"nativeSrc": "14004:930:16",
															"nodeType": "YulSwitch",
															"src": "14004:930:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13641:1299:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13722:4:16",
														"nodeType": "YulTypedName",
														"src": "13722:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "13728:3:16",
														"nodeType": "YulTypedName",
														"src": "13728:3:16",
														"type": ""
													}
												],
												"src": "13641:1299:16"
											},
											{
												"body": {
													"nativeSrc": "15142:279:16",
													"nodeType": "YulBlock",
													"src": "15142:279:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15159:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15159:9:16"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "15170:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15170:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15152:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15152:6:16"
																},
																"nativeSrc": "15152:25:16",
																"nodeType": "YulFunctionCall",
																"src": "15152:25:16"
															},
															"nativeSrc": "15152:25:16",
															"nodeType": "YulExpressionStatement",
															"src": "15152:25:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15197:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15197:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15208:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15208:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15193:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:16"
																		},
																		"nativeSrc": "15193:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15193:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15213:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15213:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15186:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:16"
																},
																"nativeSrc": "15186:30:16",
																"nodeType": "YulFunctionCall",
																"src": "15186:30:16"
															},
															"nativeSrc": "15186:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "15186:30:16"
														},
														{
															"nativeSrc": "15225:70:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15225:70:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15268:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15268:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15280:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15280:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15291:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15291:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15276:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15276:3:16"
																		},
																		"nativeSrc": "15276:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15276:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "15239:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "15239:28:16"
																},
																"nativeSrc": "15239:56:16",
																"nodeType": "YulFunctionCall",
																"src": "15239:56:16"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "15229:6:16",
																	"nodeType": "YulTypedName",
																	"src": "15229:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15315:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15315:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15326:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15326:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15311:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15311:3:16"
																		},
																		"nativeSrc": "15311:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15311:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "15335:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15335:6:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15343:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15343:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15331:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15331:3:16"
																		},
																		"nativeSrc": "15331:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15331:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15304:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15304:6:16"
																},
																"nativeSrc": "15304:50:16",
																"nodeType": "YulFunctionCall",
																"src": "15304:50:16"
															},
															"nativeSrc": "15304:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "15304:50:16"
														},
														{
															"nativeSrc": "15363:52:16",
															"nodeType": "YulAssignment",
															"src": "15363:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15400:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15400:6:16"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "15408:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15408:6:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "15371:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "15371:28:16"
																},
																"nativeSrc": "15371:44:16",
																"nodeType": "YulFunctionCall",
																"src": "15371:44:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15363:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15363:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14945:476:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15095:9:16",
														"nodeType": "YulTypedName",
														"src": "15095:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15106:6:16",
														"nodeType": "YulTypedName",
														"src": "15106:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15114:6:16",
														"nodeType": "YulTypedName",
														"src": "15114:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15122:6:16",
														"nodeType": "YulTypedName",
														"src": "15122:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15133:4:16",
														"nodeType": "YulTypedName",
														"src": "15133:4:16",
														"type": ""
													}
												],
												"src": "14945:476:16"
											},
											{
												"body": {
													"nativeSrc": "15554:152:16",
													"nodeType": "YulBlock",
													"src": "15554:152:16",
													"statements": [
														{
															"nativeSrc": "15564:26:16",
															"nodeType": "YulAssignment",
															"src": "15564:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15576:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15576:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15587:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15587:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15572:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15572:3:16"
																},
																"nativeSrc": "15572:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15572:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15564:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15564:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15606:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15606:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15621:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15621:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15629:26:16",
																				"nodeType": "YulLiteral",
																				"src": "15629:26:16",
																				"type": "",
																				"value": "0xffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15617:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15617:3:16"
																		},
																		"nativeSrc": "15617:39:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15617:39:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15599:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15599:6:16"
																},
																"nativeSrc": "15599:58:16",
																"nodeType": "YulFunctionCall",
																"src": "15599:58:16"
															},
															"nativeSrc": "15599:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "15599:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15677:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15677:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15688:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15688:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15673:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15673:3:16"
																		},
																		"nativeSrc": "15673:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15673:18:16"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15693:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15693:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15666:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15666:6:16"
																},
																"nativeSrc": "15666:34:16",
																"nodeType": "YulFunctionCall",
																"src": "15666:34:16"
															},
															"nativeSrc": "15666:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "15666:34:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15426:280:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15515:9:16",
														"nodeType": "YulTypedName",
														"src": "15515:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15526:6:16",
														"nodeType": "YulTypedName",
														"src": "15526:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15534:6:16",
														"nodeType": "YulTypedName",
														"src": "15534:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15545:4:16",
														"nodeType": "YulTypedName",
														"src": "15545:4:16",
														"type": ""
													}
												],
												"src": "15426:280:16"
											},
											{
												"body": {
													"nativeSrc": "15914:293:16",
													"nodeType": "YulBlock",
													"src": "15914:293:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15931:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15931:9:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15946:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15946:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15962:3:16",
																								"nodeType": "YulLiteral",
																								"src": "15962:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15967:1:16",
																								"nodeType": "YulLiteral",
																								"src": "15967:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15958:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "15958:3:16"
																						},
																						"nativeSrc": "15958:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "15958:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15971:1:16",
																						"nodeType": "YulLiteral",
																						"src": "15971:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15954:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "15954:3:16"
																				},
																				"nativeSrc": "15954:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15954:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15942:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15942:3:16"
																		},
																		"nativeSrc": "15942:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15942:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15924:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15924:6:16"
																},
																"nativeSrc": "15924:51:16",
																"nodeType": "YulFunctionCall",
																"src": "15924:51:16"
															},
															"nativeSrc": "15924:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "15924:51:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15995:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15995:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16006:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16006:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15991:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15991:3:16"
																		},
																		"nativeSrc": "15991:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15991:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "16015:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16015:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "16031:3:16",
																								"nodeType": "YulLiteral",
																								"src": "16031:3:16",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "16036:1:16",
																								"nodeType": "YulLiteral",
																								"src": "16036:1:16",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "16027:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "16027:3:16"
																						},
																						"nativeSrc": "16027:11:16",
																						"nodeType": "YulFunctionCall",
																						"src": "16027:11:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16040:1:16",
																						"nodeType": "YulLiteral",
																						"src": "16040:1:16",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16023:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "16023:3:16"
																				},
																				"nativeSrc": "16023:19:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16023:19:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16011:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16011:3:16"
																		},
																		"nativeSrc": "16011:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16011:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15984:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15984:6:16"
																},
																"nativeSrc": "15984:60:16",
																"nodeType": "YulFunctionCall",
																"src": "15984:60:16"
															},
															"nativeSrc": "15984:60:16",
															"nodeType": "YulExpressionStatement",
															"src": "15984:60:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16064:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16064:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16075:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16075:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16060:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16060:3:16"
																		},
																		"nativeSrc": "16060:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16060:18:16"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "16080:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16080:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16053:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16053:6:16"
																},
																"nativeSrc": "16053:34:16",
																"nodeType": "YulFunctionCall",
																"src": "16053:34:16"
															},
															"nativeSrc": "16053:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "16053:34:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16107:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16107:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16118:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16118:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16103:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16103:3:16"
																		},
																		"nativeSrc": "16103:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16103:18:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16123:3:16",
																		"nodeType": "YulLiteral",
																		"src": "16123:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16096:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16096:6:16"
																},
																"nativeSrc": "16096:31:16",
																"nodeType": "YulFunctionCall",
																"src": "16096:31:16"
															},
															"nativeSrc": "16096:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "16096:31:16"
														},
														{
															"nativeSrc": "16136:65:16",
															"nodeType": "YulAssignment",
															"src": "16136:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16173:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16173:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16185:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16185:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16196:3:16",
																				"nodeType": "YulLiteral",
																				"src": "16196:3:16",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16181:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16181:3:16"
																		},
																		"nativeSrc": "16181:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16181:19:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "16144:28:16",
																	"nodeType": "YulIdentifier",
																	"src": "16144:28:16"
																},
																"nativeSrc": "16144:57:16",
																"nodeType": "YulFunctionCall",
																"src": "16144:57:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16136:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16136:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15711:496:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15859:9:16",
														"nodeType": "YulTypedName",
														"src": "15859:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15870:6:16",
														"nodeType": "YulTypedName",
														"src": "15870:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15878:6:16",
														"nodeType": "YulTypedName",
														"src": "15878:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15886:6:16",
														"nodeType": "YulTypedName",
														"src": "15886:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15894:6:16",
														"nodeType": "YulTypedName",
														"src": "15894:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15905:4:16",
														"nodeType": "YulTypedName",
														"src": "15905:4:16",
														"type": ""
													}
												],
												"src": "15711:496:16"
											},
											{
												"body": {
													"nativeSrc": "16292:169:16",
													"nodeType": "YulBlock",
													"src": "16292:169:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "16338:16:16",
																"nodeType": "YulBlock",
																"src": "16338:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16347:1:16",
																					"nodeType": "YulLiteral",
																					"src": "16347:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16350:1:16",
																					"nodeType": "YulLiteral",
																					"src": "16350:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16340:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16340:6:16"
																			},
																			"nativeSrc": "16340:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16340:12:16"
																		},
																		"nativeSrc": "16340:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "16340:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16313:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16313:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16322:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16322:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16309:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16309:3:16"
																		},
																		"nativeSrc": "16309:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16309:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16334:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16334:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16305:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16305:3:16"
																},
																"nativeSrc": "16305:32:16",
																"nodeType": "YulFunctionCall",
																"src": "16305:32:16"
															},
															"nativeSrc": "16302:52:16",
															"nodeType": "YulIf",
															"src": "16302:52:16"
														},
														{
															"nativeSrc": "16363:29:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16363:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16382:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16382:9:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16376:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16376:5:16"
																},
																"nativeSrc": "16376:16:16",
																"nodeType": "YulFunctionCall",
																"src": "16376:16:16"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "16367:5:16",
																	"nodeType": "YulTypedName",
																	"src": "16367:5:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16425:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16425:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "16401:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "16401:23:16"
																},
																"nativeSrc": "16401:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16401:30:16"
															},
															"nativeSrc": "16401:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "16401:30:16"
														},
														{
															"nativeSrc": "16440:15:16",
															"nodeType": "YulAssignment",
															"src": "16440:15:16",
															"value": {
																"name": "value",
																"nativeSrc": "16450:5:16",
																"nodeType": "YulIdentifier",
																"src": "16450:5:16"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16440:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16440:6:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "16212:249:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16258:9:16",
														"nodeType": "YulTypedName",
														"src": "16258:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16269:7:16",
														"nodeType": "YulTypedName",
														"src": "16269:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16281:6:16",
														"nodeType": "YulTypedName",
														"src": "16281:6:16",
														"type": ""
													}
												],
												"src": "16212:249:16"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 192)\n        let tail_1 := abi_encode_string_memory_ptr(value0, add(headStart, 192))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_memory_ptr(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_27c71b42911925277fccc69932d4d9f48433f9b8a44de11392d19df91b750e80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"You do not own any shares of thi\")\n        mstore(add(headStart, 96), \"s track\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a2331c7c19f2502a16310aa3eef80b95d3147f8dab2f4f3364c6a6a4be1a37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"No royalty available for withdra\")\n        mstore(add(headStart, 96), \"wal\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_6c720dc516040b79f05f5ec556572ec11727bdc7c6d8b6bb6e511515b2ff3afa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Royalty amount must be greater t\")\n        mstore(add(headStart, 96), \"han zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_stringliteral_64d3295d37ddc4cbcb967b1bfe2f1fc298bc5ab15e2cacea28be7757731b61b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Track not available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_07e703d688a67e300f3fab42d415aa984a7c9240ef5cb6cd9684c2f24aec5e6e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid number ofshares\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient payment\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string_memory_ptr(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string_memory_ptr(value2, tail_1)\n    }\n    function abi_encode_tuple_t_uint96_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610168575f3560e01c80636352211e116100c9578063b88d4fde11610078578063b88d4fde146103f1578063bb86759f14610410578063c87b56dd14610423578063d2bcdc6014610442578063e985e9c514610455578063f2fde38b14610474578063f3720cca14610493575f80fd5b80636352211e1461031e57806370a082311461033d578063715018a61461035c5780638da5cb5b1461037057806395d89b411461038d578063a22cb465146103a1578063a2e34586146103c0575f80fd5b806323b872dd1161012557806323b872dd1461024f578063293945b41461026e5780632a55205a14610283578063343e988c146102c1578063414e80291461026e57806342842e0e146102e057806357a2eda9146102ff575f80fd5b806301ffc9a71461016c57806302fa7c47146101a057806306fdde03146101c1578063081812fc146101e2578063095ea7b31461020e57806318160ddd1461022d575b5f80fd5b348015610177575f80fd5b5061018b61018636600461172e565b6104b2565b60405190151581526020015b60405180910390f35b3480156101ab575f80fd5b506101bf6101ba366004611764565b6104c2565b005b3480156101cc575f80fd5b506101d56104d8565b60405161019791906117d2565b3480156101ed575f80fd5b506102016101fc3660046117e4565b610567565b60405161019791906117fb565b348015610219575f80fd5b506101bf61022836600461180f565b61058e565b348015610238575f80fd5b50610241610599565b604051908152602001610197565b34801561025a575f80fd5b506101bf610269366004611837565b6105a8565b348015610279575f80fd5b506102416104e281565b34801561028e575f80fd5b506102a261029d366004611871565b61063a565b604080516001600160a01b039093168352602083019190915201610197565b3480156102cc575f80fd5b506102416102db366004611891565b6106e4565b3480156102eb575f80fd5b506101bf6102fa366004611837565b610732565b34801561030a575f80fd5b506101bf6103193660046117e4565b610751565b348015610329575f80fd5b506102016103383660046117e4565b6108df565b348015610348575f80fd5b506102416103573660046118bb565b6108e9565b348015610367575f80fd5b506101bf61092e565b34801561037b575f80fd5b506006546001600160a01b0316610201565b348015610398575f80fd5b506101d5610941565b3480156103ac575f80fd5b506101bf6103bb3660046118d4565b610950565b3480156103cb575f80fd5b506103df6103da3660046117e4565b61095b565b60405161019796959493929190611902565b3480156103fc575f80fd5b506101bf61040b3660046119d5565b610aa1565b6101bf61041e3660046117e4565b610ab8565b34801561042e575f80fd5b506101d561043d3660046117e4565b610b7f565b6101bf610450366004611871565b610be4565b348015610460575f80fd5b5061018b61046f366004611a4b565b610db0565b34801561047f575f80fd5b506101bf61048e3660046118bb565b610ddd565b34801561049e575f80fd5b506101bf6104ad366004611a91565b610e1a565b5f6104bc82610ecd565b92915050565b6104ca610ef1565b6104d48282610f1e565b5050565b60605f80546104e690611af4565b80601f016020809104026020016040519081016040528092919081815260200182805461051290611af4565b801561055d5780601f106105345761010080835404028352916020019161055d565b820191905f5260205f20905b81548152906001019060200180831161054057829003601f168201915b5050505050905090565b5f61057182610fc0565b505f828152600460205260409020546001600160a01b03166104bc565b6104d4828233610ff8565b5f6105a3600a5490565b905090565b6001600160a01b0382166105da575f604051633250574960e11b81526004016105d191906117fb565b60405180910390fd5b5f6105e6838333611005565b9050836001600160a01b0316816001600160a01b031614610634576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016105d1565b50505050565b5f8281526008602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916106ae5750604080518082019091526007546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f90612710906106cc906001600160601b031687611b40565b6106d69190611b57565b915196919550909350505050565b5f8281526009602090815260408083206001600160a01b0385168452600681019092528220546104e261071f82670de0b6b3a7640000611b40565b6107299190611b57565b95945050505050565b61074c83838360405180602001604052805f815250610aa1565b505050565b5f8181526009602090815260408083203384526006810190925290912054806107cc5760405162461bcd60e51b815260206004820152602760248201527f596f7520646f206e6f74206f776e20616e7920736861726573206f66207468696044820152667320747261636b60c81b60648201526084016105d1565b5f6107d784336106e4565b90505f670de0b6b3a76400008285600501546107f39190611b40565b6107fd9190611b57565b90505f811161085a5760405162461bcd60e51b815260206004820152602360248201527f4e6f20726f79616c747920617661696c61626c6520666f7220776974686472616044820152621dd85b60ea1b60648201526084016105d1565b80846005015f82825461086d9190611b76565b9091555050604051339082156108fc029083905f818181858888f1935050505015801561089c573d5f803e3d5ffd5b507fd6ce75900eecaacadb4848f3b1a4e89cba8434d748d82adab2caf1bf248b5d178533836040516108d093929190611b89565b60405180910390a15050505050565b5f6104bc82610fc0565b5f6001600160a01b038216610913575f6040516322718ad960e21b81526004016105d191906117fb565b506001600160a01b03165f9081526003602052604090205490565b610936610ef1565b61093f5f6110f7565b565b6060600180546104e690611af4565b6104d4338383611148565b60096020525f908152604090208054819061097590611af4565b80601f01602080910402602001604051908101604052809291908181526020018280546109a190611af4565b80156109ec5780601f106109c3576101008083540402835291602001916109ec565b820191905f5260205f20905b8154815290600101906020018083116109cf57829003601f168201915b505050505090806001018054610a0190611af4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2d90611af4565b8015610a785780601f10610a4f57610100808354040283529160200191610a78565b820191905f5260205f20905b815481529060010190602001808311610a5b57829003601f168201915b5050506002840154600385015460048601546005909601549495919490935060ff909116915086565b610aac8484846105a8565b610634848484846111dd565b610ac0610ef1565b5f81815260096020526040902034610b2b5760405162461bcd60e51b815260206004820152602860248201527f526f79616c747920616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b60648201526084016105d1565b34816005015f828254610b3e9190611ba8565b9091555050604080518381523460208201527fe03872bdffa6568df2cc485cf9f211d60a716c99c5633e1edc87102d16112500910160405180910390a15050565b6060610b8a82610fc0565b505f610b946112f1565b90505f815111610bb25760405180602001604052805f815250610bdd565b80610bbc84611311565b604051602001610bcd929190611bd2565b6040516020818303038152906040525b9392505050565b5f828152600960205260409020600481015460ff16610c3b5760405162461bcd60e51b8152602060048201526013602482015272547261636b206e6f7420617661696c61626c6560681b60448201526064016105d1565b5f82118015610c4e575080600301548211155b610c945760405162461bcd60e51b8152602060048201526017602482015276496e76616c6964206e756d626572206f6673686172657360481b60448201526064016105d1565b6002810154610ca39083611b40565b610cb490662386f26fc10000611b40565b341015610cfa5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016105d1565b335f90815260068201602052604081208054849290610d1a908490611ba8565b9250508190555081816003015f828254610d349190611b76565b90915550506006546040516001600160a01b03909116903480156108fc02915f818181858888f19350505050158015610d6f573d5f803e3d5ffd5b507fa5afafc7c052a234f91512f360beeb7b6db7a0692bbd017ab5632d80a03a4bc0833384604051610da393929190611b89565b60405180910390a1505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610de5610ef1565b6001600160a01b038116610e0e575f604051631e4fbdf760e01b81526004016105d191906117fb565b610e17816110f7565b50565b610e22610ef1565b5f610e2c600a5490565b9050610e3833826113a0565b5f81815260096020526040902080610e508582611c2a565b5060018101610e5f8482611c2a565b506104e260028201819055600382015560048101805460ff19166001179055610e8c600a80546001019055565b7f21579433a032855e20e8afc48e980ddae0b6285e4aa03370f03192be12bea28b828585604051610ebf93929190611ce4565b60405180910390a150505050565b5f6001600160e01b0319821663152a902d60e11b14806104bc57506104bc826113b9565b6006546001600160a01b0316331461093f573360405163118cdaa760e01b81526004016105d191906117fb565b6127106001600160601b038216811015610f5d57604051636f483d0960e01b81526001600160601b0383166004820152602481018290526044016105d1565b6001600160a01b038316610f86575f604051635b6cc80560e11b81526004016105d191906117fb565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600755565b5f818152600260205260408120546001600160a01b0316806104bc57604051637e27328960e01b8152600481018490526024016105d1565b61074c8383836001611408565b5f828152600260205260408120546001600160a01b039081169083161561103157611031818486611503565b6001600160a01b0381161561106b5761104c5f855f80611408565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b03851615611099576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166111715781604051630b61174360e31b81526004016105d191906117fb565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561063457604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061121f903390889087908790600401611d18565b6020604051808303815f875af1925050508015611259575060408051601f3d908101601f1916820190925261125691810190611d4a565b60015b6112b7573d808015611286576040519150601f19603f3d011682016040523d82523d5f602084013e61128b565b606091505b5080515f036112af5783604051633250574960e11b81526004016105d191906117fb565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146112ea5783604051633250574960e11b81526004016105d191906117fb565b5050505050565b60606040518060a0016040528060648152602001611d6660649139905090565b60605f61131d83611567565b60010190505f816001600160401b0381111561133b5761133b61194c565b6040519080825280601f01601f191660200182016040528015611365576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461136f57509392505050565b6104d4828260405180602001604052805f81525061163e565b5f6001600160e01b031982166380ac58cd60e01b14806113e957506001600160e01b03198216635b5e139f60e01b145b806104bc57506301ffc9a760e01b6001600160e01b03198316146104bc565b808061141c57506001600160a01b03821615155b156114d4575f61142b84610fc0565b90506001600160a01b038316158015906114575750826001600160a01b0316816001600160a01b031614155b801561146a57506114688184610db0565b155b1561148a578260405163a9fbf51f60e01b81526004016105d191906117fb565b81156114d25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b61150e838383611654565b61074c576001600160a01b03831661153c57604051637e27328960e01b8152600481018290526024016105d1565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016105d1565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115a55772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106115d1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115ef57662386f26fc10000830492506010015b6305f5e1008310611607576305f5e100830492506008015b612710831061161b57612710830492506004015b6064831061162d576064830492506002015b600a83106104bc5760010192915050565b61164883836116b8565b61074c5f8484846111dd565b5f6001600160a01b038316158015906116b05750826001600160a01b0316846001600160a01b0316148061168d575061168d8484610db0565b806116b057505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b0382166116e1575f604051633250574960e11b81526004016105d191906117fb565b5f6116ed83835f611005565b90506001600160a01b0381161561074c575f6040516339e3563760e11b81526004016105d191906117fb565b6001600160e01b031981168114610e17575f80fd5b5f6020828403121561173e575f80fd5b8135610bdd81611719565b80356001600160a01b038116811461175f575f80fd5b919050565b5f8060408385031215611775575f80fd5b61177e83611749565b915060208301356001600160601b0381168114611799575f80fd5b809150509250929050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f610bdd60208301846117a4565b5f602082840312156117f4575f80fd5b5035919050565b6001600160a01b0391909116815260200190565b5f8060408385031215611820575f80fd5b61182983611749565b946020939093013593505050565b5f805f60608486031215611849575f80fd5b61185284611749565b925061186060208501611749565b929592945050506040919091013590565b5f8060408385031215611882575f80fd5b50508035926020909101359150565b5f80604083850312156118a2575f80fd5b823591506118b260208401611749565b90509250929050565b5f602082840312156118cb575f80fd5b610bdd82611749565b5f80604083850312156118e5575f80fd5b6118ee83611749565b915060208301358015158114611799575f80fd5b60c081525f61191460c08301896117a4565b828103602084015261192681896117a4565b604084019790975250506060810193909352901515608083015260a09091015292915050565b634e487b7160e01b5f52604160045260245ffd5b5f806001600160401b038411156119795761197961194c565b50604051601f19601f85018116603f011681018181106001600160401b03821117156119a7576119a761194c565b6040528381529050808284018510156119be575f80fd5b838360208301375f60208583010152509392505050565b5f805f80608085870312156119e8575f80fd5b6119f185611749565b93506119ff60208601611749565b92506040850135915060608501356001600160401b03811115611a20575f80fd5b8501601f81018713611a30575f80fd5b611a3f87823560208401611960565b91505092959194509250565b5f8060408385031215611a5c575f80fd5b611a6583611749565b91506118b260208401611749565b5f82601f830112611a82575f80fd5b610bdd83833560208501611960565b5f8060408385031215611aa2575f80fd5b82356001600160401b03811115611ab7575f80fd5b611ac385828601611a73565b92505060208301356001600160401b03811115611ade575f80fd5b611aea85828601611a73565b9150509250929050565b600181811c90821680611b0857607f821691505b602082108103611b2657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176104bc576104bc611b2c565b5f82611b7157634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156104bc576104bc611b2c565b9283526001600160a01b03919091166020830152604082015260600190565b808201808211156104bc576104bc611b2c565b5f81518060208401855e5f93019283525090919050565b5f6116b0611be08386611bbb565b84611bbb565b601f82111561074c57805f5260205f20601f840160051c81016020851015611c0b5750805b601f840160051c820191505b818110156112ea575f8155600101611c17565b81516001600160401b03811115611c4357611c4361194c565b611c5781611c518454611af4565b84611be6565b6020601f821160018114611c89575f8315611c725750848201515b5f19600385901b1c1916600184901b1784556112ea565b5f84815260208120601f198516915b82811015611cb85787850151825560209485019460019092019101611c98565b5084821015611cd557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f611cfc60608301856117a4565b8281036040840152611d0e81856117a4565b9695505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611d0e908301846117a4565b5f60208284031215611d5a575f80fd5b8151610bdd8161171956fe68747470733a2f2f696e686572656e742d736361726c65742d746172736965722e6d7966696c65626173652e636f6d2f697066732f516d5035674e44766f5245477859345842547468413933733436595775333459656b3569733650677a67576770472fa2646970667358221220cc50976b0df94dd12a9ee7c6a94e938982609508a82e8eb79645b7b724f3580e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x168 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xC9 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0xBB86759F EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xD2BCDC60 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xF3720CCA EQ PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xA2E34586 EQ PUSH2 0x3C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x293945B4 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x343E988C EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x414E8029 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x57A2EDA9 EQ PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x2FA7C47 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x172E JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x180F JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x4E2 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x197 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x319 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x92E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x201 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x941 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x3BB CALLDATASIZE PUSH1 0x4 PUSH2 0x18D4 JUMP JUMPDEST PUSH2 0x950 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x19D5 JUMP JUMPDEST PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x41E CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xAB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D5 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x17E4 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x450 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0xDB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0xDDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0xECD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4CA PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 PUSH2 0xF1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x512 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x534 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x571 DUP3 PUSH2 0xFC0 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 CALLER PUSH2 0xFF8 JUMP JUMPDEST PUSH0 PUSH2 0x5A3 PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5DA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5E6 DUP4 DUP4 CALLER PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP2 PUSH2 0x6AE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x6CC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP2 MLOAD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x4E2 PUSH2 0x71F DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x729 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x74C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAA1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x6 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP1 PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F206E6F74206F776E20616E7920736861726573206F6620746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7320747261636B PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 PUSH2 0x7D7 DUP5 CALLER PUSH2 0x6E4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH1 0x5 ADD SLOAD PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0x7FD SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F79616C747920617661696C61626C6520666F722077697468647261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1DD85B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST DUP1 DUP5 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xD6CE75900EECAACADB4848F3B1A4E89CBA8434D748D82ADAB2CAF1BF248B5D17 DUP6 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x8D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC DUP3 PUSH2 0xFC0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x913 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x936 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x93F PUSH0 PUSH2 0x10F7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4E6 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST PUSH2 0x4D4 CALLER DUP4 DUP4 PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x975 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9A1 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xA01 SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA2D SWAP1 PUSH2 0x1AF4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA78 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA4F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA78 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA5B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x5 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP2 SWAP5 SWAP1 SWAP4 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 POP DUP7 JUMP JUMPDEST PUSH2 0xAAC DUP5 DUP5 DUP5 PUSH2 0x5A8 JUMP JUMPDEST PUSH2 0x634 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0xAC0 PUSH2 0xEF1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 CALLVALUE PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F79616C747920616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5D1 JUMP JUMPDEST CALLVALUE DUP2 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xE03872BDFFA6568DF2CC485CF9F211D60A716C99C5633E1EDC87102D16112500 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB8A DUP3 PUSH2 0xFC0 JUMP JUMPDEST POP PUSH0 PUSH2 0xB94 PUSH2 0x12F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xBDD JUMP JUMPDEST DUP1 PUSH2 0xBBC DUP5 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBCD SWAP3 SWAP2 SWAP1 PUSH2 0x1BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x547261636B206E6F7420617661696C61626C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xC4E JUMPI POP DUP1 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x496E76616C6964206E756D626572206F66736861726573 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xCA3 SWAP1 DUP4 PUSH2 0x1B40 JUMP JUMPDEST PUSH2 0xCB4 SWAP1 PUSH7 0x2386F26FC10000 PUSH2 0x1B40 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xD1A SWAP1 DUP5 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH32 0xA5AFAFC7C052A234F91512F360BEEB7B6DB7A0692BBD017AB5632D80A03A4BC0 DUP4 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xDE5 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE0E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0x10F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE22 PUSH2 0xEF1 JUMP JUMPDEST PUSH0 PUSH2 0xE2C PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE38 CALLER DUP3 PUSH2 0x13A0 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 PUSH2 0xE50 DUP6 DUP3 PUSH2 0x1C2A JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0xE5F DUP5 DUP3 PUSH2 0x1C2A JUMP JUMPDEST POP PUSH2 0x4E2 PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xE8C PUSH1 0xA DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x21579433A032855E20E8AFC48E980DDAE0B6285E4AA03370F03192BE12BEA28B DUP3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xEBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x152A902D PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x4BC JUMPI POP PUSH2 0x4BC DUP3 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93F JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH2 0x2710 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP2 LT ISZERO PUSH2 0xF5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6F483D09 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x5B6CC805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 MUL OR PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x74C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1408 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1031 DUP2 DUP5 DUP7 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x106B JUMPI PUSH2 0x104C PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1099 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1171 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x121F SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1259 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1256 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0x12AF JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x12EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D66 PUSH1 0x64 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x131D DUP4 PUSH2 0x1567 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x133B JUMPI PUSH2 0x133B PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1365 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x136F JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x163E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x13E9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x4BC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4BC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x141C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14D4 JUMPI PUSH0 PUSH2 0x142B DUP5 PUSH2 0xFC0 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1457 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x146A JUMPI POP PUSH2 0x1468 DUP2 DUP5 PUSH2 0xDB0 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x148A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST DUP2 ISZERO PUSH2 0x14D2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x150E DUP4 DUP4 DUP4 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x74C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x153C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D1 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x15A5 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x15D1 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15EF JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1607 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x161B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x162D JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x4BC JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1648 DUP4 DUP4 PUSH2 0x16B8 JUMP JUMPDEST PUSH2 0x74C PUSH0 DUP5 DUP5 DUP5 PUSH2 0x11DD JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16B0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x168D JUMPI POP PUSH2 0x168D DUP5 DUP5 PUSH2 0xDB0 JUMP JUMPDEST DUP1 PUSH2 0x16B0 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH0 PUSH2 0x16ED DUP4 DUP4 PUSH0 PUSH2 0x1005 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x74C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xE17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBDD DUP2 PUSH2 0x1719 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x175F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177E DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1799 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xBDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1820 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1829 DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1852 DUP5 PUSH2 0x1749 JUMP JUMPDEST SWAP3 POP PUSH2 0x1860 PUSH1 0x20 DUP6 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1882 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x18B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP3 PUSH2 0x1749 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x18EE DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1799 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 MSTORE PUSH0 PUSH2 0x1914 PUSH1 0xC0 DUP4 ADD DUP10 PUSH2 0x17A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1926 DUP2 DUP10 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT ISZERO PUSH2 0x1979 JUMPI PUSH2 0x1979 PUSH2 0x194C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH2 0x19A7 JUMPI PUSH2 0x19A7 PUSH2 0x194C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x19BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x19F1 DUP6 PUSH2 0x1749 JUMP JUMPDEST SWAP4 POP PUSH2 0x19FF PUSH1 0x20 DUP7 ADD PUSH2 0x1749 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A20 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1A30 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A3F DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A65 DUP4 PUSH2 0x1749 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B2 PUSH1 0x20 DUP5 ADD PUSH2 0x1749 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A82 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBDD DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1ADE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AEA DUP6 DUP3 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B08 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1B26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B71 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4BC JUMPI PUSH2 0x4BC PUSH2 0x1B2C JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16B0 PUSH2 0x1BE0 DUP4 DUP7 PUSH2 0x1BBB JUMP JUMPDEST DUP5 PUSH2 0x1BBB JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x74C JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1C0B JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EA JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C17 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C43 JUMPI PUSH2 0x1C43 PUSH2 0x194C JUMP JUMPDEST PUSH2 0x1C57 DUP2 PUSH2 0x1C51 DUP5 SLOAD PUSH2 0x1AF4 JUMP JUMPDEST DUP5 PUSH2 0x1BE6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1C89 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1C72 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x12EA JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CB8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1C98 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1CD5 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x1CFC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x17A4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1D0E DUP2 DUP6 PUSH2 0x17A4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1D0E SWAP1 DUP4 ADD DUP5 PUSH2 0x17A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBDD DUP2 PUSH2 0x1719 JUMP INVALID PUSH9 0x747470733A2F2F696E PUSH9 0x6572656E742D736361 PUSH19 0x6C65742D746172736965722E6D7966696C6562 PUSH2 0x7365 0x2E PUSH4 0x6F6D2F69 PUSH17 0x66732F516D5035674E44766F5245477859 CALLVALUE PC TIMESTAMP SLOAD PUSH21 0x68413933733436595775333459656B356973365067 PUSH27 0x67576770472FA2646970667358221220CC50976B0DF94DD12A9EE7 0xC6 0xA9 0x4E SWAP4 DUP10 DUP3 PUSH1 0x95 ADDMOD 0xA8 0x2E DUP15 0xB7 SWAP7 GASLIMIT 0xB7 0xB7 0x24 RETURN PC 0xE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "286:4601:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4729:155;;;;;;;;;;-1:-1:-1;4729:155:15;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;4729:155:15;;;;;;;;4535:143;;;;;;;;;;-1:-1:-1;4535:143:15;;;;;:::i;:::-;;:::i;:::-;;2365:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3323:113::-;;;;;;;;;;-1:-1:-1;3323:113:3;;;;;:::i;:::-;;:::i;4385:90:15:-;;;;;;;;;;;;;:::i;:::-;;;2572:25:16;;;2560:2;2545:18;4385:90:15;2426:177:16;4143:578:3;;;;;;;;;;-1:-1:-1;4143:578:3;;;;;:::i;:::-;;:::i;750:51:15:-;;;;;;;;;;;;797:4;750:51;;2379:419:7;;;;;;;;;;-1:-1:-1;2379:419:7;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3530:32:16;;;3512:51;;3594:2;3579:18;;3572:34;;;;3485:18;2379:419:7;3338:274:16;3209:299:15;;;;;;;;;;-1:-1:-1;3209:299:15;;;;;:::i;:::-;;:::i;4787:132:3:-;;;;;;;;;;-1:-1:-1;4787:132:3;;;;;:::i;:::-;;:::i;3568:775:15:-;;;;;;;;;;-1:-1:-1;3568:775:15;;;;;:::i;:::-;;:::i;2185:118:3:-;;;;;;;;;;-1:-1:-1;2185:118:3;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;;;;;-1:-1:-1;1920:208:3;;;;;:::i;:::-;;:::i;2293:101:0:-;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;2518:93:3;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:3;;;;;:::i;:::-;;:::i;653:39:15:-;;;;;;;;;;-1:-1:-1;653:39:15;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;4985:208:3:-;;;;;;;;;;-1:-1:-1;4985:208:3;;;;;:::i;:::-;;:::i;2890:258:15:-;;;;;;:::i;:::-;;:::i;2677:255:3:-;;;;;;;;;;-1:-1:-1;2677:255:3;;;;;:::i;:::-;;:::i;2252:592:15:-;;;;;;:::i;:::-;;:::i;3928:153:3:-;;;;;;;;;;-1:-1:-1;3928:153:3;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1787:432:15:-;;;;;;;;;;-1:-1:-1;1787:432:15;;;;;:::i;:::-;;:::i;4729:155::-;4827:4;4844:36;4868:11;4844:23;:36::i;:::-;4837:43;4729:155;-1:-1:-1;;4729:155:15:o;4535:143::-;1531:13:0;:11;:13::i;:::-;4625:49:15::1;4644:9;4655:18;4625;:49::i;:::-;4535:143:::0;;:::o;2365:89:3:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:3;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:8;3394:8:3;:35::i;4385:90:15:-;4429:7;4448:23;:13;918:14:9;;827:112;4448:23:15;4441:30;;4385:90;:::o;4143:578:3:-;-1:-1:-1;;;;;4237:16:3;;4233:87;;4306:1;4276:33;;-1:-1:-1;;;4276:33:3;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:8;4562:7:3;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:3;:13;-1:-1:-1;;;;;4610:21:3;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:3;;-1:-1:-1;;;;;8381:32:16;;;4654:50:3;;;8363:51:16;8430:18;;;8423:34;;;8493:32;;8473:18;;;8466:60;8336:18;;4654:50:3;8161:371:16;4606:109:3;4223:498;4143:578;;;:::o;2379:419:7:-;2465:7;2522:26;;;:17;:26;;;;;;;;2493:55;;;;;;;;;-1:-1:-1;;;;;2493:55:7;;;;;-1:-1:-1;;;2493:55:7;;;-1:-1:-1;;;;;2493:55:7;;;;;;;;2465:7;;2559:90;;-1:-1:-1;2609:29:7;;;;;;;;;2619:19;2609:29;-1:-1:-1;;;;;2609:29:7;;;;-1:-1:-1;;;2609:29:7;;-1:-1:-1;;;;;2609:29:7;;;;;2559:90;2696:23;;;;2659:21;;3156:5;;2684:35;;-1:-1:-1;;;;;2684:35:7;:9;:35;:::i;:::-;2683:57;;;;:::i;:::-;2759:16;;;;;-1:-1:-1;2379:419:7;;-1:-1:-1;;;;2379:419:7:o;3209:299:15:-;3296:7;3330:15;;;:6;:15;;;;;;;;-1:-1:-1;;;;;3370:27:15;;;;:20;;;:27;;;;;;797:4;3408:18;3370:27;3422:4;3408:18;:::i;:::-;3407:43;;;;:::i;:::-;3400:50;3209:299;-1:-1:-1;;;;;3209:299:15:o;4787:132:3:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;3568:775:15:-;3620:19;3642:15;;;:6;:15;;;;;;;;3703:10;3682:32;;:20;;;:32;;;;;;;3725:15;3717:67;;;;-1:-1:-1;;;3717:67:15;;9398:2:16;3717:67:15;;;9380:21:16;9437:2;9417:18;;;9410:30;9476:34;9456:18;;;9449:62;-1:-1:-1;;;9527:18:16;;;9520:37;9574:19;;3717:67:15;9196:403:16;3717:67:15;3830:23;3856:44;3880:7;3889:10;3856:23;:44::i;:::-;3830:70;;3903:20;3967:4;3948:15;3927:5;:18;;;:36;;;;:::i;:::-;3926:45;;;;:::i;:::-;3903:68;;4034:1;4019:12;:16;4011:64;;;;-1:-1:-1;;;4011:64:15;;9806:2:16;4011:64:15;;;9788:21:16;9845:2;9825:18;;;9818:30;9884:34;9864:18;;;9857:62;-1:-1:-1;;;9935:18:16;;;9928:33;9978:19;;4011:64:15;9604:399:16;4011:64:15;4161:12;4139:5;:18;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;4238:42:15;;4246:10;;4238:42;;;;;4267:12;;4238:42;;;;4267:12;4246:10;4238:42;;;;;;;;;;;;;;;;;;;;;4288:51;4305:7;4314:10;4326:12;4288:51;;;;;;;;:::i;:::-;;;;;;;;3617:726;;;;3568:775;:::o;2185:118:3:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:3;;2002:87;;2075:1;2048:30;;-1:-1:-1;;;2048:30:3;;;;;;;;:::i;2002:87::-;-1:-1:-1;;;;;;2105:16:3;;;;;:9;:16;;;;;;;1920:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2518:93:3:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:8;3836:8:3;3846;3803:18;:52::i;653:39:15:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;653:39:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;653:39:15;;;;;-1:-1:-1;653:39:15;:::o;4985:208:3:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2890:258:15:-;1531:13:0;:11;:13::i;:::-;2962:19:15::1;2984:15:::0;;;:6:::1;:15;::::0;;;;3010:9:::1;3002:66;;;::::0;-1:-1:-1;;;3002:66:15;;10693:2:16;3002:66:15::1;::::0;::::1;10675:21:16::0;10732:2;10712:18;;;10705:30;10771:34;10751:18;;;10744:62;-1:-1:-1;;;10822:18:16;;;10815:38;10870:19;;3002:66:15::1;10491:404:16::0;3002:66:15::1;3093:9;3071:5;:18;;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3110:34:15::1;::::0;;11204:25:16;;;3134:9:15::1;11260:2:16::0;11245:18;;11238:34;3110::15::1;::::0;11177:18:16;3110:34:15::1;;;;;;;2959:189;2890:258:::0;:::o;2677:255:3:-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:3:o;2252:592:15:-;2330:19;2352:15;;;:6;:15;;;;;2378:17;;;;;;2370:49;;;;-1:-1:-1;;;2370:49:15;;11974:2:16;2370:49:15;;;11956:21:16;12013:2;11993:18;;;11986:30;-1:-1:-1;;;12032:18:16;;;12025:49;12091:18;;2370:49:15;11772:343:16;2370:49:15;2442:1;2430:9;:13;:51;;;;;2460:5;:21;;;2447:9;:34;;2430:51;2422:87;;;;-1:-1:-1;;;2422:87:15;;12322:2:16;2422:87:15;;;12304:21:16;12361:2;12341:18;;;12334:30;-1:-1:-1;;;12380:18:16;;;12373:53;12443:18;;2422:87:15;12120:347:16;2422:87:15;2545:19;;;;2533:31;;:9;:31;:::i;:::-;:38;;2567:4;2533:38;:::i;:::-;2520:9;:51;;2512:84;;;;-1:-1:-1;;;2512:84:15;;12674:2:16;2512:84:15;;;12656:21:16;12713:2;12693:18;;;12686:30;-1:-1:-1;;;12732:18:16;;;12725:50;12792:18;;2512:84:15;12472:344:16;2512:84:15;2645:10;2624:32;;;;:20;;;:32;;;;;:45;;2660:9;;2624:32;:45;;2660:9;;2624:45;:::i;:::-;;;;;;;;2697:9;2672:5;:21;;;:34;;;;;;;:::i;:::-;;;;-1:-1:-1;;1710:6:0;;2750:36:15;;-1:-1:-1;;;;;1710:6:0;;;;2776:9:15;2750:36;;;;;;;;;2776:9;1710:6:0;2750:36:15;;;;;;;;;;;;;;;;;;;;;2794:46;2809:7;2818:10;2830:9;2794:46;;;;;;;;:::i;:::-;;;;;;;;2327:517;2252:592;;:::o;3928:153:3:-;-1:-1:-1;;;;;4039:25:3;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1787:432:15:-;1531:13:0;:11;:13::i;:::-;1871:15:15::1;1889:23;:13;918:14:9::0;;827:112;1889:23:15::1;1871:41;;1915:30;1925:10;1937:7;1915:9;:30::i;:::-;1948:19;1970:15:::0;;;:6:::1;:15;::::0;;;;;1988:20:::1;2002:6:::0;1970:15;1988:20:::1;:::i;:::-;-1:-1:-1::0;2011:10:15::1;::::0;::::1;:18;2024:5:::0;2011:10;:18:::1;:::i;:::-;-1:-1:-1::0;846:4:15::1;2032:19;::::0;::::1;:37:::0;;;2072:21:::1;::::0;::::1;:44:::0;2119:17:::1;::::0;::::1;:24:::0;;-1:-1:-1;;2119:24:15::1;2139:4;2119:24;::::0;;2146:25:::1;:13;1032:19:9::0;;1050:1;1032:19;;;945:123;2146:25:15::1;2179:36;2192:7;2201:6;2209:5;2179:36;;;;;;;;:::i;:::-;;;;;;;;1868:351;;1787:432:::0;;:::o;2116:213:7:-;2218:4;-1:-1:-1;;;;;;2241:41:7;;-1:-1:-1;;;2241:41:7;;:81;;;2286:36;2310:11;2286:23;:36::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:8;1855:23:0;1851:101;;735:10:8;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;3429:507:7:-;3156:5;-1:-1:-1;;;;;3576:26:7;;;-1:-1:-1;3572:173:7;;;3679:55;;-1:-1:-1;;;3679:55:7;;-1:-1:-1;;;;;15617:39:16;;3679:55:7;;;15599:58:16;15673:18;;;15666:34;;;15572:18;;3679:55:7;15426:280:16;3572:173:7;-1:-1:-1;;;;;3758:22:7;;3754:108;;3848:1;3803:48;;-1:-1:-1;;;3803:48:7;;;;;;;;:::i;3754:108::-;-1:-1:-1;3894:35:7;;;;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;-1:-1:-1;;;;;3894:35:7;;;;;;;;;;-1:-1:-1;;;3872:57:7;;;;:19;:57;3429:507::o;16138:241:3:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:3;;;;;2572:25:16;;;2545:18;;16309:31:3;2426:177:16;14418:120:3;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:3;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:3;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:3;;;9157:256;-1:-1:-1;;;;;9427:16:3;;;9423:107;;-1:-1:-1;;;;;9487:13:3;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:3;-1:-1:-1;;;;;9540:21:3;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:3:o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15591:312:3:-;-1:-1:-1;;;;;15698:22:3;;15694:91;;15765:8;15743:31;;-1:-1:-1;;;15743:31:3;;;;;;;;:::i;15694:91::-;-1:-1:-1;;;;;15794:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:3;;;;;;;;;;15855:41;;540::16;;;15855::3;;513:18:16;15855:41:3;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:3;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:3;;-1:-1:-1;;;;;17072:36:3;;;;;:71;;735:10:8;;17123:4:3;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:3;;;;;;;;-1:-1:-1;;17072:71:3;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17452:2;17430:25;;-1:-1:-1;;;17430:25:3;;;;;;;;:::i;17377:293::-;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:3;;-1:-1:-1;;;17190:51:3;17186:130;;17294:2;17272:25;;-1:-1:-1;;;17272:25:3;;;;;;;;:::i;17186:130::-;17144:186;16918:782;;;;:::o;1568:184:15:-;1620:13;1638:110;;;;;;;;;;;;;;;;;;;1568:184;:::o;637:698:10:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;-1:-1:-1;;;;;817:18:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:10;-1:-1:-1;794:41:10;-1:-1:-1;955:28:10;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:10;-1:-1:-1;;;1175:2:10;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:10;1010:282;1256:21;-1:-1:-1;1312:6:10;637:698;-1:-1:-1;;;637:698:10:o;10633:100:3:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;1561:300::-;1663:4;-1:-1:-1;;;;;;1698:40:3;;-1:-1:-1;;;1698:40:3;;:104;;-1:-1:-1;;;;;;;1754:48:3;;-1:-1:-1;;;1754:48:3;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:11;;;1818:36:3;762:146:11;14720:662:3;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:3;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:3;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:3;:5;-1:-1:-1;;;;;15115:13:3;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;-1:-1:-1;;;15189:27:3;;;;;;;;:::i;15089:142::-;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:3;15292:5;-1:-1:-1;;;;;15283:28:3;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:3;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:3;-1:-1:-1;;;;;15346:29:3;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:3;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:3;;;;;2572:25:16;;;2545:18;;7298:31:3;2426:177:16;7248:186:3;7375:44;;-1:-1:-1;;;7375:44:3;;-1:-1:-1;;;;;3530:32:16;;7375:44:3;;;3512:51:16;3579:18;;;3572:34;;;3485:18;;7375:44:3;3338:274:16;12214:916:13;12267:7;;-1:-1:-1;;;12342:17:13;;12338:103;;-1:-1:-1;;;12379:17:13;;;-1:-1:-1;12424:2:13;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:13;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:13;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:13;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:13;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:13;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:13:o;10954:182:3:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;6376:272::-;6479:4;-1:-1:-1;;;;;6514:21:3;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:3;:5;-1:-1:-1;;;;;6552:16:3;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;6008:7:3;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6608:32:3;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:3:o;9955:327::-;-1:-1:-1;;;;;10022:16:3;;10018:87;;10091:1;10061:33;;-1:-1:-1;;;10061:33:3;;;;;;;;:::i;10018:87::-;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:3;;;10180:96;;10262:1;10234:31;;-1:-1:-1;;;10234:31:3;;;;;;;;:::i;14:131:16:-;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:173::-;660:20;;-1:-1:-1;;;;;709:31:16;;699:42;;689:70;;755:1;752;745:12;689:70;592:173;;;:::o;770:366::-;837:6;845;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;937:29;956:9;937:29;:::i;:::-;927:39;;1016:2;1005:9;1001:18;988:32;-1:-1:-1;;;;;1053:5:16;1049:38;1042:5;1039:49;1029:77;;1102:1;1099;1092:12;1029:77;1125:5;1115:15;;;770:366;;;;;:::o;1141:300::-;1194:3;1232:5;1226:12;1259:6;1254:3;1247:19;1315:6;1308:4;1301:5;1297:16;1290:4;1285:3;1281:14;1275:47;1367:1;1360:4;1351:6;1346:3;1342:16;1338:27;1331:38;1430:4;1423:2;1419:7;1414:2;1406:6;1402:15;1398:29;1393:3;1389:39;1385:50;1378:57;;;1141:300;;;;:::o;1446:231::-;1595:2;1584:9;1577:21;1558:4;1615:56;1667:2;1656:9;1652:18;1644:6;1615:56;:::i;1682:226::-;1741:6;1794:2;1782:9;1773:7;1769:23;1765:32;1762:52;;;1810:1;1807;1800:12;1762:52;-1:-1:-1;1855:23:16;;1682:226;-1:-1:-1;1682:226:16:o;1913:203::-;-1:-1:-1;;;;;2077:32:16;;;;2059:51;;2047:2;2032:18;;1913:203::o;2121:300::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;2387:2;2372:18;;;;2359:32;;-1:-1:-1;;;2121:300:16:o;2608:374::-;2685:6;2693;2701;2754:2;2742:9;2733:7;2729:23;2725:32;2722:52;;;2770:1;2767;2760:12;2722:52;2793:29;2812:9;2793:29;:::i;:::-;2783:39;;2841:38;2875:2;2864:9;2860:18;2841:38;:::i;:::-;2608:374;;2831:48;;-1:-1:-1;;;2948:2:16;2933:18;;;;2920:32;;2608:374::o;2987:346::-;3055:6;3063;3116:2;3104:9;3095:7;3091:23;3087:32;3084:52;;;3132:1;3129;3122:12;3084:52;-1:-1:-1;;3177:23:16;;;3297:2;3282:18;;;3269:32;;-1:-1:-1;2987:346:16:o;3617:300::-;3685:6;3693;3746:2;3734:9;3725:7;3721:23;3717:32;3714:52;;;3762:1;3759;3752:12;3714:52;3807:23;;;-1:-1:-1;3873:38:16;3907:2;3892:18;;3873:38;:::i;:::-;3863:48;;3617:300;;;;;:::o;3922:186::-;3981:6;4034:2;4022:9;4013:7;4009:23;4005:32;4002:52;;;4050:1;4047;4040:12;4002:52;4073:29;4092:9;4073:29;:::i;4113:347::-;4178:6;4186;4239:2;4227:9;4218:7;4214:23;4210:32;4207:52;;;4255:1;4252;4245:12;4207:52;4278:29;4297:9;4278:29;:::i;:::-;4268:39;;4357:2;4346:9;4342:18;4329:32;4404:5;4397:13;4390:21;4383:5;4380:32;4370:60;;4426:1;4423;4416:12;4465:703;4768:3;4757:9;4750:22;4731:4;4795:57;4847:3;4836:9;4832:19;4824:6;4795:57;:::i;:::-;4900:9;4892:6;4888:22;4883:2;4872:9;4868:18;4861:50;4928:44;4965:6;4957;4928:44;:::i;:::-;5003:2;4988:18;;4981:34;;;;-1:-1:-1;;5046:2:16;5031:18;;5024:34;;;;5102:14;;5095:22;5089:3;5074:19;;5067:51;5149:3;5134:19;;;5127:35;4920:52;4465:703;-1:-1:-1;;4465:703:16:o;5173:127::-;5234:10;5229:3;5225:20;5222:1;5215:31;5265:4;5262:1;5255:15;5289:4;5286:1;5279:15;5305:715;5369:5;5401:1;-1:-1:-1;;;;;5417:6:16;5414:30;5411:56;;;5447:18;;:::i;:::-;-1:-1:-1;5602:2:16;5596:9;-1:-1:-1;;5515:2:16;5494:15;;5490:29;;5660:2;5648:15;5644:29;5632:42;;5725:22;;;-1:-1:-1;;;;;5689:34:16;;5686:62;5683:88;;;5751:18;;:::i;:::-;5787:2;5780:22;5835;;;5820:6;-1:-1:-1;5820:6:16;5872:16;;;5869:25;-1:-1:-1;5866:45:16;;;5907:1;5904;5897:12;5866:45;5957:6;5952:3;5945:4;5937:6;5933:17;5920:44;6012:1;6005:4;5996:6;5988;5984:19;5980:30;5973:41;;5305:715;;;;;:::o;6025:712::-;6120:6;6128;6136;6144;6197:3;6185:9;6176:7;6172:23;6168:33;6165:53;;;6214:1;6211;6204:12;6165:53;6237:29;6256:9;6237:29;:::i;:::-;6227:39;;6285:38;6319:2;6308:9;6304:18;6285:38;:::i;:::-;6275:48;-1:-1:-1;6392:2:16;6377:18;;6364:32;;-1:-1:-1;6471:2:16;6456:18;;6443:32;-1:-1:-1;;;;;6487:30:16;;6484:50;;;6530:1;6527;6520:12;6484:50;6553:22;;6606:4;6598:13;;6594:27;-1:-1:-1;6584:55:16;;6635:1;6632;6625:12;6584:55;6658:73;6723:7;6718:2;6705:16;6700:2;6696;6692:11;6658:73;:::i;:::-;6648:83;;;6025:712;;;;;;;:::o;6742:260::-;6810:6;6818;6871:2;6859:9;6850:7;6846:23;6842:32;6839:52;;;6887:1;6884;6877:12;6839:52;6910:29;6929:9;6910:29;:::i;:::-;6900:39;;6958:38;6992:2;6981:9;6977:18;6958:38;:::i;7007:221::-;7050:5;7103:3;7096:4;7088:6;7084:17;7080:27;7070:55;;7121:1;7118;7111:12;7070:55;7143:79;7218:3;7209:6;7196:20;7189:4;7181:6;7177:17;7143:79;:::i;7233:538::-;7321:6;7329;7382:2;7370:9;7361:7;7357:23;7353:32;7350:52;;;7398:1;7395;7388:12;7350:52;7438:9;7425:23;-1:-1:-1;;;;;7463:6:16;7460:30;7457:50;;;7503:1;7500;7493:12;7457:50;7526;7568:7;7559:6;7548:9;7544:22;7526:50;:::i;:::-;7516:60;;;7629:2;7618:9;7614:18;7601:32;-1:-1:-1;;;;;7648:8:16;7645:32;7642:52;;;7690:1;7687;7680:12;7642:52;7713;7757:7;7746:8;7735:9;7731:24;7713:52;:::i;:::-;7703:62;;;7233:538;;;;;:::o;7776:380::-;7855:1;7851:12;;;;7898;;;7919:61;;7973:4;7965:6;7961:17;7951:27;;7919:61;8026:2;8018:6;8015:14;7995:18;7992:38;7989:161;;8072:10;8067:3;8063:20;8060:1;8053:31;8107:4;8104:1;8097:15;8135:4;8132:1;8125:15;7989:161;;7776:380;;;:::o;8537:127::-;8598:10;8593:3;8589:20;8586:1;8579:31;8629:4;8626:1;8619:15;8653:4;8650:1;8643:15;8669:168;8742:9;;;8773;;8790:15;;;8784:22;;8770:37;8760:71;;8811:18;;:::i;8974:217::-;9014:1;9040;9030:132;;9084:10;9079:3;9075:20;9072:1;9065:31;9119:4;9116:1;9109:15;9147:4;9144:1;9137:15;9030:132;-1:-1:-1;9176:9:16;;8974:217::o;10008:128::-;10075:9;;;10096:11;;;10093:37;;;10110:18;;:::i;10141:345::-;10343:25;;;-1:-1:-1;;;;;10404:32:16;;;;10399:2;10384:18;;10377:60;10468:2;10453:18;;10446:34;10331:2;10316:18;;10141:345::o;10900:125::-;10965:9;;;10986:10;;;10983:36;;;10999:18;;:::i;11283:212::-;11325:3;11363:5;11357:12;11407:6;11400:4;11393:5;11389:16;11384:3;11378:36;11469:1;11433:16;;11458:13;;;-1:-1:-1;11433:16:16;;11283:212;-1:-1:-1;11283:212:16:o;11500:267::-;11679:3;11704:57;11730:30;11756:3;11748:6;11730:30;:::i;:::-;11722:6;11704:57;:::i;12947:518::-;13049:2;13044:3;13041:11;13038:421;;;13085:5;13082:1;13075:16;13129:4;13126:1;13116:18;13199:2;13187:10;13183:19;13180:1;13176:27;13170:4;13166:38;13235:4;13223:10;13220:20;13217:47;;;-1:-1:-1;13258:4:16;13217:47;13313:2;13308:3;13304:12;13301:1;13297:20;13291:4;13287:31;13277:41;;13368:81;13386:2;13379:5;13376:13;13368:81;;;13445:1;13431:16;;13412:1;13401:13;13368:81;;13641:1299;13767:3;13761:10;-1:-1:-1;;;;;13786:6:16;13783:30;13780:56;;;13816:18;;:::i;:::-;13845:97;13935:6;13895:38;13927:4;13921:11;13895:38;:::i;:::-;13889:4;13845:97;:::i;:::-;13991:4;14022:2;14011:14;;14039:1;14034:649;;;;14727:1;14744:6;14741:89;;;-1:-1:-1;14796:19:16;;;14790:26;14741:89;-1:-1:-1;;13598:1:16;13594:11;;;13590:24;13586:29;13576:40;13622:1;13618:11;;;13573:57;14843:81;;14004:930;;14034:649;12894:1;12887:14;;;12931:4;12918:18;;-1:-1:-1;;14070:20:16;;;14188:222;14202:7;14199:1;14196:14;14188:222;;;14284:19;;;14278:26;14263:42;;14391:4;14376:20;;;;14344:1;14332:14;;;;14218:12;14188:222;;;14192:3;14438:6;14429:7;14426:19;14423:201;;;14499:19;;;14493:26;-1:-1:-1;;14582:1:16;14578:14;;;14594:3;14574:24;14570:37;14566:42;14551:58;14536:74;;14423:201;-1:-1:-1;;;;14670:1:16;14654:14;;;14650:22;14637:36;;-1:-1:-1;13641:1299:16:o;14945:476::-;15170:6;15159:9;15152:25;15213:2;15208;15197:9;15193:18;15186:30;15133:4;15239:56;15291:2;15280:9;15276:18;15268:6;15239:56;:::i;:::-;15343:9;15335:6;15331:22;15326:2;15315:9;15311:18;15304:50;15371:44;15408:6;15400;15371:44;:::i;:::-;15363:52;14945:476;-1:-1:-1;;;;;;14945:476:16:o;15711:496::-;-1:-1:-1;;;;;15942:32:16;;;15924:51;;16011:32;;16006:2;15991:18;;15984:60;16075:2;16060:18;;16053:34;;;16123:3;16118:2;16103:18;;16096:31;;;-1:-1:-1;;16144:57:16;;16181:19;;16173:6;16144:57;:::i;16212:249::-;16281:6;16334:2;16322:9;16313:7;16309:23;16305:32;16302:52;;;16350:1;16347;16340:12;16302:52;16382:9;16376:16;16401:30;16425:5;16401:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1535800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_SHARES_PER_TRACK()": "239",
								"SHARE_PRICE_USD()": "305",
								"accumulateRoyalty(uint256)": "28125",
								"approve(address,uint256)": "31553",
								"balanceOf(address)": "2630",
								"createTrack(string,string)": "infinite",
								"getApproved(uint256)": "infinite",
								"getOwnerSharePercentage(uint256,address)": "2908",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2443",
								"ownerOf(uint256)": "infinite",
								"purchaseShares(uint256,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"royaltyInfo(uint256,uint256)": "5161",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26789",
								"setRoyaltyInfo(address,uint96)": "24940",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2462",
								"tracks(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"withdrawRoyalty(uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 1191,
									"end": 1540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1304,
									"end": 1314,
									"name": "CALLER",
									"source": 15
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "E"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "457570686F72696120416C62756D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "90"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "544541"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3269,
									"end": 3320,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1348,
									"end": 1407,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1363,
									"end": 1386,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1388,
									"end": 1406,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1348,
									"end": 1362,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 1348,
									"end": 1407,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1348,
									"end": 1407,
									"modifierDepth": 2,
									"name": "tag",
									"source": 15,
									"value": "18"
								},
								{
									"begin": 1348,
									"end": 1407,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1475,
									"end": 1536,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1493,
									"end": 1535,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 15,
									"value": "A39C821C6999ACC27D71882B1CA49FDDFA264CCA"
								},
								{
									"begin": 1475,
									"end": 1492,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 1475,
									"end": 1536,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1475,
									"end": 1536,
									"modifierDepth": 2,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1475,
									"end": 1536,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1191,
									"end": 1540,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4535,
									"end": 4678,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 4535,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 4674,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4644,
									"end": 4653,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4655,
									"end": 4673,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4625,
									"end": 4643,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 4625,
									"end": 4674,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4625,
									"end": 4674,
									"modifierDepth": 1,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 4625,
									"end": 4674,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4535,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3269,
									"end": 3320,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3123,
									"end": 3326,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 2742,
									"end": 2750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "118CDAA7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3269,
									"end": 3320,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3123,
									"end": 3326,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3429,
									"end": 3936,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3429,
									"end": 3936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3156,
									"end": 3161,
									"name": "PUSH",
									"source": 7,
									"value": "2710"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3602,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6F483D09"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3522,
									"end": 3553,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3522,
									"end": 3553,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3504,
									"end": 3554,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3563,
									"end": 3597,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3477,
									"end": 3495,
									"name": "PUSH",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 3477,
									"end": 3495,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3679,
									"end": 3734,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3331,
									"end": 3603,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3572,
									"end": 3745,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3758,
									"end": 3780,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3758,
									"end": 3780,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5B6CC805"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3269,
									"end": 3320,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3803,
									"end": 3851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3123,
									"end": 3326,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3754,
									"end": 3862,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3929,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "PUSH",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3872,
									"end": 3929,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 477,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 477,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 92,
									"end": 98,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 106,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 153,
									"end": 155,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 141,
									"end": 150,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 132,
									"end": 139,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 128,
									"end": 151,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 124,
									"end": 156,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 121,
									"end": 173,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 121,
									"end": 173,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 169,
									"end": 170,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 167,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 159,
									"end": 171,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 121,
									"end": 173,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 121,
									"end": 173,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 195,
									"end": 211,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 195,
									"end": 211,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 240,
									"end": 270,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 240,
									"end": 270,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 230,
									"end": 271,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 230,
									"end": 271,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 220,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 220,
									"end": 289,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 283,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 275,
									"end": 287,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 220,
									"end": 289,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 220,
									"end": 289,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 358,
									"end": 360,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 343,
									"end": 361,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 343,
									"end": 361,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 337,
									"end": 362,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 308,
									"end": 313,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 308,
									"end": 313,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 393,
									"end": 426,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 393,
									"end": 426,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 381,
									"end": 427,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 381,
									"end": 427,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 371,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 441,
									"end": 442,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 438,
									"end": 439,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 431,
									"end": 443,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 371,
									"end": 445,
									"name": "tag",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 371,
									"end": 445,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 464,
									"end": 471,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 454,
									"end": 471,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 454,
									"end": 471,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 454,
									"end": 471,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 482,
									"end": 609,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 482,
									"end": 609,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 543,
									"end": 553,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 538,
									"end": 541,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 534,
									"end": 554,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 531,
									"end": 532,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 524,
									"end": 555,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 574,
									"end": 578,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 571,
									"end": 572,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 564,
									"end": 579,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 598,
									"end": 602,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 595,
									"end": 596,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 603,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 614,
									"end": 994,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 614,
									"end": 994,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 689,
									"end": 701,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 689,
									"end": 701,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 689,
									"end": 701,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 689,
									"end": 701,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 736,
									"end": 748,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 736,
									"end": 748,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 736,
									"end": 748,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 757,
									"end": 818,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 757,
									"end": 818,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 811,
									"end": 815,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 803,
									"end": 809,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 799,
									"end": 816,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 789,
									"end": 816,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 789,
									"end": 816,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 757,
									"end": 818,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 757,
									"end": 818,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 864,
									"end": 866,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 856,
									"end": 862,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 853,
									"end": 867,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 833,
									"end": 851,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 830,
									"end": 868,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 827,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 827,
									"end": 988,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 910,
									"end": 920,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B71"
								},
								{
									"begin": 905,
									"end": 908,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 901,
									"end": 921,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 898,
									"end": 899,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 891,
									"end": 922,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 942,
									"end": 943,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 973,
									"end": 977,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 970,
									"end": 971,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 963,
									"end": 978,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 827,
									"end": 988,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 827,
									"end": 988,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 827,
									"end": 988,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 614,
									"end": 994,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 614,
									"end": 994,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 614,
									"end": 994,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 614,
									"end": 994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1125,
									"end": 1643,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1125,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1227,
									"end": 1229,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1222,
									"end": 1225,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1219,
									"end": 1230,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1216,
									"end": 1637,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1216,
									"end": 1637,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 1216,
									"end": 1637,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1263,
									"end": 1268,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1260,
									"end": 1261,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1253,
									"end": 1269,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1307,
									"end": 1311,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1304,
									"end": 1305,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1294,
									"end": 1312,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 1377,
									"end": 1379,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1365,
									"end": 1375,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1361,
									"end": 1380,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1354,
									"end": 1381,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1348,
									"end": 1352,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1382,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1413,
									"end": 1417,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1401,
									"end": 1411,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1398,
									"end": 1418,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1395,
									"end": 1442,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1395,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 1395,
									"end": 1442,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1436,
									"end": 1440,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1395,
									"end": 1442,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 1395,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1491,
									"end": 1493,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1486,
									"end": 1489,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1482,
									"end": 1494,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1475,
									"end": 1495,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1469,
									"end": 1473,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1465,
									"end": 1496,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1455,
									"end": 1496,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1455,
									"end": 1496,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1564,
									"end": 1566,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1557,
									"end": 1562,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1554,
									"end": 1567,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1624,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1625,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1609,
									"end": 1625,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1590,
									"end": 1591,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1579,
									"end": 1592,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 1546,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1553,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1553,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1216,
									"end": 1637,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 1216,
									"end": 1637,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1125,
									"end": 1643,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1125,
									"end": 1643,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1125,
									"end": 1643,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1125,
									"end": 1643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1819,
									"end": 3118,
									"name": "tag",
									"source": 16,
									"value": "9"
								},
								{
									"begin": 1819,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 1949,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 1949,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1961,
									"end": 1991,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1961,
									"end": 1991,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1958,
									"end": 2014,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1958,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 1958,
									"end": 2014,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1994,
									"end": 2012,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 1994,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2023,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2113,
									"end": 2119,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2073,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2105,
									"end": 2109,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2099,
									"end": 2110,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 2073,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 2073,
									"end": 2111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2073,
									"end": 2111,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2073,
									"end": 2111,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2067,
									"end": 2071,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2023,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 2023,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2023,
									"end": 2120,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2023,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2169,
									"end": 2173,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2200,
									"end": 2202,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2189,
									"end": 2203,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2189,
									"end": 2203,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2217,
									"end": 2218,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2905,
									"end": 2906,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2922,
									"end": 2928,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2919,
									"end": 3008,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2919,
									"end": 3008,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2919,
									"end": 3008,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2974,
									"end": 2993,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2974,
									"end": 2993,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2974,
									"end": 2993,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2968,
									"end": 2994,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2919,
									"end": 3008,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 2919,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1776,
									"end": 1777,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1768,
									"end": 1792,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1764,
									"end": 1793,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1754,
									"end": 1794,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1796,
									"end": 1807,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 1807,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 1807,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1751,
									"end": 1808,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3021,
									"end": 3102,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3021,
									"end": 3102,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2182,
									"end": 3112,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2182,
									"end": 3112,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 2212,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1072,
									"end": 1073,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1065,
									"end": 1079,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1109,
									"end": 1113,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1096,
									"end": 1114,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1096,
									"end": 1114,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2248,
									"end": 2268,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2248,
									"end": 2268,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2248,
									"end": 2268,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2380,
									"end": 2387,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2378,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2374,
									"end": 2388,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2481,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2481,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2481,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2456,
									"end": 2482,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2441,
									"end": 2483,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2441,
									"end": 2483,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2569,
									"end": 2573,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2554,
									"end": 2574,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 2554,
									"end": 2574,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2554,
									"end": 2574,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2554,
									"end": 2574,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 2522,
									"end": 2523,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2510,
									"end": 2524,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2510,
									"end": 2524,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2510,
									"end": 2524,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2510,
									"end": 2524,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2396,
									"end": 2408,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 2366,
									"end": 2588,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2616,
									"end": 2622,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2604,
									"end": 2623,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2601,
									"end": 2802,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2601,
									"end": 2802,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 2601,
									"end": 2802,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 2696,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 2696,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 2696,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2671,
									"end": 2697,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2760,
									"end": 2761,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2756,
									"end": 2770,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2756,
									"end": 2770,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2756,
									"end": 2770,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2772,
									"end": 2775,
									"name": "PUSH",
									"source": 16,
									"value": "F8"
								},
								{
									"begin": 2752,
									"end": 2776,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2748,
									"end": 2785,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 2744,
									"end": 2786,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 2729,
									"end": 2787,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2714,
									"end": 2788,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2714,
									"end": 2788,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2601,
									"end": 2802,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 2601,
									"end": 2802,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2832,
									"end": 2846,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2832,
									"end": 2846,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2832,
									"end": 2846,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 2828,
									"end": 2850,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2815,
									"end": 2851,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2815,
									"end": 2851,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1819,
									"end": 3118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3331,
									"end": 3603,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 3331,
									"end": 3603,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 4887,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc50976b0df94dd12a9ee7c6a94e938982609508a82e8eb79645b7b724f3580e64736f6c634300081a0033",
									".code": [
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "BB86759F"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "D2BCDC60"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "F3720CCA"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "tag",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "A2E34586"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "293945B4"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "2A55205A"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "343E988C"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "414E8029"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "57A2EDA9"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "2FA7C47"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 286,
											"end": 4887,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 4729,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4729,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 4535,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 4535,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "tag",
											"source": 15,
											"value": "61"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 4385,
											"end": 4475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "tag",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 801,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 750,
											"end": 801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 750,
											"end": 801,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 801,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 750,
											"end": 801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 797,
											"end": 801,
											"name": "PUSH",
											"source": 15,
											"value": "4E2"
										},
										{
											"begin": 750,
											"end": 801,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 750,
											"end": 801,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 3338,
											"end": 3612,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "62"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 3209,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3209,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 3568,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 3568,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 2890,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "tag",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 2890,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 2252,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "tag",
											"source": 15,
											"value": "147"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 2252,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 1787,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 1787,
											"end": 2219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "36"
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4827,
											"end": 4831,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 4868,
											"end": 4879,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4844,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 4844,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4729,
											"end": 4884,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4729,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4625,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 4644,
											"end": 4653,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4655,
											"end": 4673,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4625,
											"end": 4643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 4625,
											"end": 4674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4625,
											"end": 4674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 4625,
											"end": 4674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4535,
											"end": 4678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4429,
											"end": 4436,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 4448,
											"end": 4461,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 4448,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4441,
											"end": 4471,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4441,
											"end": 4471,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4385,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8381,
											"end": 8413,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8381,
											"end": 8413,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8381,
											"end": 8413,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8363,
											"end": 8414,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8423,
											"end": 8457,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8493,
											"end": 8525,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8493,
											"end": 8525,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8466,
											"end": 8526,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8161,
											"end": 8532,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2539,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2548,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2548,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2619,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2638,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2559,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2719,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2684,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2684,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2683,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2683,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2379,
											"end": 2798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3336,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3330,
											"end": 3345,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3390,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3370,
											"end": 3390,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 797,
											"end": 801,
											"name": "PUSH",
											"source": 15,
											"value": "4E2"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 3370,
											"end": 3397,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3422,
											"end": 3426,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 3408,
											"end": 3426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "tag",
											"source": 15,
											"value": "211"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 3407,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 3407,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3400,
											"end": 3450,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3508,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3620,
											"end": 3639,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3703,
											"end": 3713,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3702,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3682,
											"end": 3714,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3725,
											"end": 3740,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9398,
											"end": 9400,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9380,
											"end": 9401,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9410,
											"end": 9440,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9476,
											"end": 9510,
											"name": "PUSH",
											"source": 16,
											"value": "596F7520646F206E6F74206F776E20616E7920736861726573206F6620746869"
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9449,
											"end": 9511,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7320747261636B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9527,
											"end": 9545,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9520,
											"end": 9557,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9574,
											"end": 9593,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 9574,
											"end": 9593,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 9196,
											"end": 9599,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 3717,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3830,
											"end": 3853,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 3880,
											"end": 3887,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3889,
											"end": 3899,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 3856,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3900,
											"name": "tag",
											"source": 15,
											"value": "219"
										},
										{
											"begin": 3856,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3830,
											"end": 3900,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3830,
											"end": 3900,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3971,
											"name": "PUSH",
											"source": 15,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3948,
											"end": 3963,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3932,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 3927,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "tag",
											"source": 15,
											"value": "220"
										},
										{
											"begin": 3927,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 3926,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 3926,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3971,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3903,
											"end": 3971,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4034,
											"end": 4035,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4035,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9806,
											"end": 9808,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9845,
											"end": 9847,
											"name": "PUSH",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9825,
											"end": 9843,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9818,
											"end": 9848,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9884,
											"end": 9918,
											"name": "PUSH",
											"source": 16,
											"value": "4E6F20726F79616C747920617661696C61626C6520666F722077697468647261"
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9857,
											"end": 9919,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DD85B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9935,
											"end": 9953,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9928,
											"end": 9961,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9978,
											"end": 9997,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 9978,
											"end": 9997,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 9604,
											"end": 10003,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 4011,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4173,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4157,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 4139,
											"end": 4173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4139,
											"end": 4173,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4279,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4279,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4267,
											"end": 4279,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4238,
											"end": 4280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "PUSH",
											"source": 15,
											"value": "D6CE75900EECAACADB4848F3B1A4E89CBA8434D748D82ADAB2CAF1BF248B5D17"
										},
										{
											"begin": 4305,
											"end": 4312,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4314,
											"end": 4324,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 4326,
											"end": 4338,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 4288,
											"end": 4339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4288,
											"end": 4339,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 4343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 4343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 4343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3617,
											"end": 4343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3568,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "175"
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "260"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "261"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "tag",
											"source": 15,
											"value": "259"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 653,
											"end": 692,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 653,
											"end": 692,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 653,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2984,
											"end": 2999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2984,
											"end": 2999,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3010,
											"end": 3019,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3068,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3068,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3068,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10693,
											"end": 10695,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3002,
											"end": 3068,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10675,
											"end": 10696,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10705,
											"end": 10735,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10771,
											"end": 10805,
											"name": "PUSH",
											"source": 16,
											"value": "526F79616C747920616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10744,
											"end": 10806,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10870,
											"end": 10889,
											"name": "PUSH",
											"source": 16,
											"value": "84"
										},
										{
											"begin": 10870,
											"end": 10889,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 10491,
											"end": 10895,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "269"
										},
										{
											"begin": 3002,
											"end": 3068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3093,
											"end": 3102,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3089,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 3071,
											"end": 3102,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "272"
										},
										{
											"begin": 3071,
											"end": 3102,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3071,
											"end": 3102,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3144,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 11204,
											"end": 11229,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11204,
											"end": 11229,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11204,
											"end": 11229,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3134,
											"end": 3143,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 11260,
											"end": 11262,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11245,
											"end": 11263,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11238,
											"end": 11272,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "E03872BDFFA6568DF2CC485CF9F211D60A716C99C5633E1EDC87102D16112500"
										},
										{
											"begin": 3110,
											"end": 3144,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11177,
											"end": 11195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3110,
											"end": 3144,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 2959,
											"end": 3148,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2890,
											"end": 3148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "tag",
											"source": 15,
											"value": "148"
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2330,
											"end": 2349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2352,
											"end": 2367,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11974,
											"end": 11976,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11956,
											"end": 11977,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12013,
											"end": 12015,
											"name": "PUSH",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11993,
											"end": 12011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11986,
											"end": 12016,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "547261636B206E6F7420617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12032,
											"end": 12050,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 12032,
											"end": 12050,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12032,
											"end": 12050,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12025,
											"end": 12074,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12091,
											"end": 12109,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12091,
											"end": 12109,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 11772,
											"end": 12115,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 2370,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2443,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2460,
											"end": 2481,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2460,
											"end": 2481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2460,
											"end": 2481,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2456,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "tag",
											"source": 15,
											"value": "290"
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12322,
											"end": 12324,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12304,
											"end": 12325,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12361,
											"end": 12363,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 12341,
											"end": 12359,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12341,
											"end": 12359,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12341,
											"end": 12359,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12334,
											"end": 12364,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206E756D626572206F66736861726573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12380,
											"end": 12398,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12373,
											"end": 12426,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12443,
											"end": 12461,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 12120,
											"end": 12467,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "tag",
											"source": 15,
											"value": "291"
										},
										{
											"begin": 2422,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2545,
											"end": 2564,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2545,
											"end": 2564,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2545,
											"end": 2564,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2545,
											"end": 2564,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2542,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2533,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 2533,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 2533,
											"end": 2571,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2567,
											"end": 2571,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2533,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 2533,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2533,
											"end": 2571,
											"name": "tag",
											"source": 15,
											"value": "295"
										},
										{
											"begin": 2533,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2520,
											"end": 2571,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2520,
											"end": 2571,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12674,
											"end": 12676,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12656,
											"end": 12677,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12713,
											"end": 12715,
											"name": "PUSH",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12693,
											"end": 12711,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12686,
											"end": 12716,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9CDD59999A58DA595B9D081C185E5B595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12732,
											"end": 12750,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 12732,
											"end": 12750,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12732,
											"end": 12750,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12725,
											"end": 12775,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 12792,
											"end": 12810,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 12472,
											"end": 12816,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "tag",
											"source": 15,
											"value": "296"
										},
										{
											"begin": 2512,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2655,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2656,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "273"
										},
										{
											"begin": 2624,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2624,
											"end": 2669,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 2672,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2672,
											"end": 2706,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH",
											"source": 15,
											"value": "8FC"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2785,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "CALL",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2750,
											"end": 2786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 15,
											"value": "A5AFAFC7C052A234F91512F360BEEB7B6DB7A0692BBD017AB5632D80A03A4BC0"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2818,
											"end": 2828,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 2830,
											"end": 2839,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 2794,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 2327,
											"end": 2844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2252,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1871,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 1889,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 1889,
											"end": 1912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1871,
											"end": 1912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1925,
											"end": 1935,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 1937,
											"end": 1944,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 1915,
											"end": 1945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1915,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 1915,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1948,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 1970,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1988,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1970,
											"end": 1985,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1988,
											"end": 2008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 1988,
											"end": 2008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1988,
											"end": 2008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 1988,
											"end": 2008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2021,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2011,
											"end": 2029,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2011,
											"end": 2029,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2011,
											"end": 2029,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 846,
											"end": 850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4E2"
										},
										{
											"begin": 2032,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2032,
											"end": 2069,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2072,
											"end": 2093,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2072,
											"end": 2116,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2136,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2136,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2143,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2143,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2119,
											"end": 2143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2139,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2143,
											"modifierDepth": 1,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2119,
											"end": 2143,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2146,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2146,
											"end": 2159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2146,
											"end": 2171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "21579433A032855E20E8AFC48E980DDAE0B6285E4AA03370F03192BE12BEA28B"
										},
										{
											"begin": 2192,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2201,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2209,
											"end": 2214,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 2179,
											"end": 2215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2179,
											"end": 2215,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 2219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1868,
											"end": 2219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1787,
											"end": 2219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2116,
											"end": 2329,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2116,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2222,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "152A902D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2282,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2310,
											"end": 2321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 2286,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3936,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 3429,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F483D09"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15617,
											"end": 15656,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15617,
											"end": 15656,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15599,
											"end": 15657,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15673,
											"end": 15691,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 15673,
											"end": 15691,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15673,
											"end": 15691,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15666,
											"end": 15700,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15666,
											"end": 15700,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15666,
											"end": 15700,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3679,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 15426,
											"end": 15706,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3572,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3780,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B6CC805"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3803,
											"end": 3851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3754,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3929,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3872,
											"end": 3929,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1752,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 1568,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1633,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH data",
											"source": 15,
											"value": "7771773F702B4E939E4F13BB3109B5B3069FC424947ED7997233D08CE9476E9B"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "CODECOPY",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1568,
											"end": 1752,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1568,
											"end": 1752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 10
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 3,
											"value": "412"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 3,
											"value": "414"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 3,
											"value": "415"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "417"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 3,
											"value": "416"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 3,
											"value": "422"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2572,
											"end": 2597,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 2426,
											"end": 2603,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3530,
											"end": 3562,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3563,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "PUSH",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3338,
											"end": 3612,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 13,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 13,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 13,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 3,
											"value": "450"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 3,
											"value": "423"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 3,
											"value": "451"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "461"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 3,
											"value": "463"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 592,
											"end": 765,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 592,
											"end": 765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 680,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 660,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 740,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 709,
											"end": 740,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 699,
											"end": 741,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 699,
											"end": 741,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 689,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 753,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 745,
											"end": 757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 689,
											"end": 759,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 689,
											"end": 759,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 592,
											"end": 765,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 592,
											"end": 765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 592,
											"end": 765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 837,
											"end": 843,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 895,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 877,
											"end": 884,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 873,
											"end": 896,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 869,
											"end": 901,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 866,
											"end": 918,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 866,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 866,
											"end": 918,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 912,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 904,
											"end": 916,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 866,
											"end": 918,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 866,
											"end": 918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 956,
											"end": 965,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 937,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 937,
											"end": 966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 937,
											"end": 966,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 937,
											"end": 966,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 927,
											"end": 966,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 927,
											"end": 966,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1001,
											"end": 1019,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 988,
											"end": 1020,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1049,
											"end": 1087,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1039,
											"end": 1088,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 1029,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 770,
											"end": 1136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1237,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1257,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1306,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1297,
											"end": 1313,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1281,
											"end": 1295,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1275,
											"end": 1322,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1364,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1331,
											"end": 1369,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1398,
											"end": 1427,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1393,
											"end": 1396,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1385,
											"end": 1435,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1378,
											"end": 1435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1141,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1677,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1446,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1595,
											"end": 1597,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1577,
											"end": 1598,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1558,
											"end": 1562,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1615,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 1615,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1796,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1765,
											"end": 1797,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1800,
											"end": 1812,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 1762,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1682,
											"end": 1908,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1682,
											"end": 1908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2116,
											"name": "tag",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 1913,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2077,
											"end": 2109,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2059,
											"end": 2110,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2059,
											"end": 2110,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2047,
											"end": 2049,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2121,
											"end": 2421,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 2121,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 2289,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2742,
											"end": 2751,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2729,
											"end": 2752,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2725,
											"end": 2757,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2770,
											"end": 2771,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 2722,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 2793,
											"end": 2822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 2793,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 2875,
											"end": 2877,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2864,
											"end": 2873,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2878,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 2841,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 2841,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2608,
											"end": 2982,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 2831,
											"end": 2879,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2831,
											"end": 2879,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2920,
											"end": 2952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2608,
											"end": 2982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2987,
											"end": 3333,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 2987,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3116,
											"end": 3118,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3113,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3091,
											"end": 3114,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3087,
											"end": 3119,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3132,
											"end": 3133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3122,
											"end": 3134,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 3084,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3297,
											"end": 3299,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3282,
											"end": 3300,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3685,
											"end": 3691,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3746,
											"end": 3748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3725,
											"end": 3732,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3721,
											"end": 3744,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3752,
											"end": 3764,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 3714,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 3873,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3873,
											"end": 3911,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 3873,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3863,
											"end": 3911,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3863,
											"end": 3911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3922,
											"end": 4108,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 3922,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3981,
											"end": 3987,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4036,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4031,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4020,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4032,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4005,
											"end": 4037,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4054,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 4002,
											"end": 4054,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4050,
											"end": 4051,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4040,
											"end": 4052,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4054,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 4002,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4073,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4073,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 4073,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4113,
											"end": 4460,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 4113,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4192,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4241,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4227,
											"end": 4236,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4218,
											"end": 4225,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4237,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4242,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4207,
											"end": 4259,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4207,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 4207,
											"end": 4259,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4255,
											"end": 4256,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4245,
											"end": 4257,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4207,
											"end": 4259,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 4207,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 4297,
											"end": 4306,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 4278,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 4278,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4268,
											"end": 4307,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4268,
											"end": 4307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4329,
											"end": 4361,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4404,
											"end": 4409,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4390,
											"end": 4411,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4383,
											"end": 4388,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4380,
											"end": 4412,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4370,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 4370,
											"end": 4430,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4426,
											"end": 4427,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4423,
											"end": 4424,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4416,
											"end": 4428,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4465,
											"end": 5168,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 4465,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4768,
											"end": 4771,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 4757,
											"end": 4766,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4750,
											"end": 4772,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 4847,
											"end": 4850,
											"name": "PUSH",
											"source": 16,
											"value": "C0"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4832,
											"end": 4851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 4830,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 4795,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 4795,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4795,
											"end": 4852,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 4795,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4900,
											"end": 4909,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4892,
											"end": 4898,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4888,
											"end": 4910,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4883,
											"end": 4885,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4868,
											"end": 4886,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4861,
											"end": 4911,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4928,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4957,
											"end": 4963,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 4928,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 4928,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4928,
											"end": 4972,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 4928,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 4981,
											"end": 5015,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5031,
											"end": 5049,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5031,
											"end": 5049,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5058,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5058,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5058,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5024,
											"end": 5058,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5102,
											"end": 5116,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5102,
											"end": 5116,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5095,
											"end": 5117,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5089,
											"end": 5092,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5093,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5074,
											"end": 5093,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5067,
											"end": 5118,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5149,
											"end": 5152,
											"name": "PUSH",
											"source": 16,
											"value": "A0"
										},
										{
											"begin": 5134,
											"end": 5153,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5134,
											"end": 5153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5134,
											"end": 5153,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5127,
											"end": 5162,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4920,
											"end": 4972,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4465,
											"end": 5168,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4465,
											"end": 5168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5300,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 5173,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5234,
											"end": 5244,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 5229,
											"end": 5232,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 5225,
											"end": 5245,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5246,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5265,
											"end": 5269,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5255,
											"end": 5270,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5294,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5374,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5402,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5417,
											"end": 5423,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5414,
											"end": 5444,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5411,
											"end": 5467,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5411,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 5411,
											"end": 5467,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 5447,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 5447,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5604,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5596,
											"end": 5605,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5515,
											"end": 5517,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5494,
											"end": 5509,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5494,
											"end": 5509,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5490,
											"end": 5519,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5490,
											"end": 5519,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5660,
											"end": 5662,
											"name": "PUSH",
											"source": 16,
											"value": "3F"
										},
										{
											"begin": 5648,
											"end": 5663,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5673,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5632,
											"end": 5674,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5632,
											"end": 5674,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5747,
											"name": "LT",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5723,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5689,
											"end": 5723,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5686,
											"end": 5748,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5683,
											"end": 5771,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5683,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 5683,
											"end": 5771,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 5751,
											"end": 5769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5802,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5835,
											"end": 5857,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5835,
											"end": 5857,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5835,
											"end": 5857,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5872,
											"end": 5888,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5869,
											"end": 5894,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 5866,
											"end": 5911,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5866,
											"end": 5911,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 5866,
											"end": 5911,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5904,
											"end": 5905,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5897,
											"end": 5909,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5866,
											"end": 5911,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 5866,
											"end": 5911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5952,
											"end": 5955,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5943,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5920,
											"end": 5964,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 6012,
											"end": 6013,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6009,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5996,
											"end": 6002,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5988,
											"end": 5994,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5980,
											"end": 6010,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5973,
											"end": 6014,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5973,
											"end": 6014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5305,
											"end": 6020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6150,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6197,
											"end": 6200,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 6185,
											"end": 6194,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6176,
											"end": 6183,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6172,
											"end": 6195,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6168,
											"end": 6201,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 6165,
											"end": 6218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6237,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6237,
											"end": 6266,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 6237,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6227,
											"end": 6266,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6227,
											"end": 6266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6285,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 6319,
											"end": 6321,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6285,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6285,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6285,
											"end": 6323,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 6285,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6275,
											"end": 6323,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6377,
											"end": 6395,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6364,
											"end": 6396,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6364,
											"end": 6396,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6443,
											"end": 6475,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6487,
											"end": 6517,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6487,
											"end": 6517,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6531,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6528,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6520,
											"end": 6532,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6598,
											"end": 6611,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6598,
											"end": 6611,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6594,
											"end": 6621,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6584,
											"end": 6639,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 6584,
											"end": 6639,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6633,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6637,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6584,
											"end": 6639,
											"name": "tag",
											"source": 16,
											"value": "531"
										},
										{
											"begin": 6584,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 6723,
											"end": 6730,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6718,
											"end": 6720,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6702,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6692,
											"end": 6703,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 6658,
											"end": 6731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6648,
											"end": 6731,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6648,
											"end": 6731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6648,
											"end": 6731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6025,
											"end": 6737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6742,
											"end": 7002,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 6742,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6824,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6871,
											"end": 6873,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6846,
											"end": 6869,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6842,
											"end": 6874,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6885,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 6839,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6910,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6910,
											"end": 6939,
											"name": "tag",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 6910,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6900,
											"end": 6939,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6900,
											"end": 6939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6958,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 6992,
											"end": 6994,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6977,
											"end": 6995,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6958,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6958,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7228,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 7007,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7050,
											"end": 7055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7101,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7080,
											"end": 7107,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7070,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 7070,
											"end": 7125,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7119,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7111,
											"end": 7123,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7070,
											"end": 7125,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 7070,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 7218,
											"end": 7221,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7209,
											"end": 7215,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7196,
											"end": 7216,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7189,
											"end": 7193,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7181,
											"end": 7187,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7177,
											"end": 7194,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7143,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 7143,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7361,
											"end": 7368,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7357,
											"end": 7380,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7353,
											"end": 7385,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7398,
											"end": 7399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7396,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7388,
											"end": 7400,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 7350,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7425,
											"end": 7448,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7460,
											"end": 7490,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7457,
											"end": 7507,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7457,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 7457,
											"end": 7507,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7503,
											"end": 7504,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7493,
											"end": 7505,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7457,
											"end": 7507,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 7457,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7526,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7526,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 7526,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7526,
											"end": 7576,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 7526,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7516,
											"end": 7576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7618,
											"end": 7627,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7614,
											"end": 7632,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7601,
											"end": 7633,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7648,
											"end": 7656,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7645,
											"end": 7677,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7642,
											"end": 7694,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7642,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 7642,
											"end": 7694,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7642,
											"end": 7694,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 7642,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7713,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 7757,
											"end": 7764,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7754,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7731,
											"end": 7755,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7713,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 7713,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7713,
											"end": 7765,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 7713,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7703,
											"end": 7765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 8156,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 7776,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7855,
											"end": 7856,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7919,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 7919,
											"end": 7980,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7961,
											"end": 7978,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7919,
											"end": 7980,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 7919,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8018,
											"end": 8024,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8015,
											"end": 8029,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7995,
											"end": 8013,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7992,
											"end": 8030,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7989,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 7989,
											"end": 8150,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8072,
											"end": 8082,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8063,
											"end": 8083,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8060,
											"end": 8061,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8084,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8107,
											"end": 8111,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8097,
											"end": 8112,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8132,
											"end": 8133,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8140,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7989,
											"end": 8150,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 7989,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7989,
											"end": 8150,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 8156,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 8156,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 8156,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7776,
											"end": 8156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8537,
											"end": 8664,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 8537,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8598,
											"end": 8608,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 8586,
											"end": 8587,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8629,
											"end": 8633,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 8626,
											"end": 8627,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8619,
											"end": 8634,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8653,
											"end": 8657,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8650,
											"end": 8651,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8658,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8669,
											"end": 8837,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 8669,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8790,
											"end": 8805,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8790,
											"end": 8805,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8790,
											"end": 8805,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8784,
											"end": 8806,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 8770,
											"end": 8807,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 8760,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 8760,
											"end": 8831,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 8811,
											"end": 8829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8974,
											"end": 9191,
											"name": "tag",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 8974,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9014,
											"end": 9015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9041,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9030,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 9030,
											"end": 9162,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9084,
											"end": 9094,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B71"
										},
										{
											"begin": 9079,
											"end": 9082,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 9075,
											"end": 9095,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9065,
											"end": 9096,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9119,
											"end": 9123,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9109,
											"end": 9124,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9147,
											"end": 9151,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9144,
											"end": 9145,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9152,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9030,
											"end": 9162,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 9030,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8974,
											"end": 9191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10008,
											"end": 10136,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 10008,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10075,
											"end": 10084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10075,
											"end": 10084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10075,
											"end": 10084,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10096,
											"end": 10107,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10130,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 10093,
											"end": 10130,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10110,
											"end": 10128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10141,
											"end": 10486,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 10141,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10343,
											"end": 10368,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10343,
											"end": 10368,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10343,
											"end": 10368,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10404,
											"end": 10436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10404,
											"end": 10436,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10404,
											"end": 10436,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10404,
											"end": 10436,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 10399,
											"end": 10401,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10377,
											"end": 10437,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10468,
											"end": 10470,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10453,
											"end": 10471,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10453,
											"end": 10471,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10446,
											"end": 10480,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10331,
											"end": 10333,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10141,
											"end": 10486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10900,
											"end": 11025,
											"name": "tag",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 10900,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10974,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10974,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 10996,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 10996,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10986,
											"end": 10996,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10983,
											"end": 11019,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10983,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 10983,
											"end": 11019,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 10999,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 10999,
											"end": 11017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11283,
											"end": 11495,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 11283,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11325,
											"end": 11328,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11363,
											"end": 11368,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11357,
											"end": 11369,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11407,
											"end": 11413,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11400,
											"end": 11404,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11393,
											"end": 11398,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11389,
											"end": 11405,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11387,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11378,
											"end": 11414,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 11469,
											"end": 11470,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11433,
											"end": 11449,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 11433,
											"end": 11449,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11458,
											"end": 11471,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11458,
											"end": 11471,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11458,
											"end": 11471,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11433,
											"end": 11449,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11433,
											"end": 11449,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11283,
											"end": 11495,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11283,
											"end": 11495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11500,
											"end": 11767,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 11500,
											"end": 11767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11679,
											"end": 11682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 11730,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 11756,
											"end": 11759,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11748,
											"end": 11754,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11730,
											"end": 11760,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 11730,
											"end": 11760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11730,
											"end": 11760,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 11730,
											"end": 11760,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11722,
											"end": 11728,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11704,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 11704,
											"end": 11761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12947,
											"end": 13465,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 12947,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 13044,
											"end": 13047,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13041,
											"end": 13052,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13038,
											"end": 13459,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 13038,
											"end": 13459,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13085,
											"end": 13090,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13091,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13129,
											"end": 13133,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13126,
											"end": 13127,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13116,
											"end": 13134,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 13199,
											"end": 13201,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 13187,
											"end": 13197,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13183,
											"end": 13202,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13180,
											"end": 13181,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 13176,
											"end": 13203,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13166,
											"end": 13204,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13235,
											"end": 13239,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13223,
											"end": 13233,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13258,
											"end": 13262,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 13217,
											"end": 13264,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13313,
											"end": 13315,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 13308,
											"end": 13311,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13304,
											"end": 13316,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13301,
											"end": 13302,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 13297,
											"end": 13317,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 13291,
											"end": 13295,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13287,
											"end": 13318,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13277,
											"end": 13318,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13277,
											"end": 13318,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13386,
											"end": 13388,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13379,
											"end": 13384,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13376,
											"end": 13389,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13431,
											"end": 13447,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13431,
											"end": 13447,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 13412,
											"end": 13413,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13401,
											"end": 13414,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 13368,
											"end": 13449,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13641,
											"end": 14940,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 13641,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13767,
											"end": 13770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13761,
											"end": 13771,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13786,
											"end": 13792,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13783,
											"end": 13813,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13780,
											"end": 13836,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13780,
											"end": 13836,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 13780,
											"end": 13836,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 13816,
											"end": 13834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 13935,
											"end": 13941,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13895,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 13927,
											"end": 13931,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13921,
											"end": 13932,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 13895,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 13895,
											"end": 13933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13895,
											"end": 13933,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 13895,
											"end": 13933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13889,
											"end": 13893,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 13845,
											"end": 13942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 13845,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13991,
											"end": 13995,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 14011,
											"end": 14025,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14011,
											"end": 14025,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14039,
											"end": 14040,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14727,
											"end": 14728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14750,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14741,
											"end": 14830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14741,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 14741,
											"end": 14830,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14796,
											"end": 14815,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14796,
											"end": 14815,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14796,
											"end": 14815,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14790,
											"end": 14816,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14741,
											"end": 14830,
											"name": "tag",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 14741,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13598,
											"end": 13599,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 13594,
											"end": 13605,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13594,
											"end": 13605,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13594,
											"end": 13605,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 13590,
											"end": 13614,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 13586,
											"end": 13615,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13616,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 13622,
											"end": 13623,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13618,
											"end": 13629,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13618,
											"end": 13629,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13618,
											"end": 13629,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 13573,
											"end": 13630,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14924,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14843,
											"end": 14924,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 14004,
											"end": 14934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 14004,
											"end": 14934,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "tag",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 14034,
											"end": 14683,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12894,
											"end": 12895,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12901,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12887,
											"end": 12901,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12887,
											"end": 12901,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12931,
											"end": 12935,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12918,
											"end": 12936,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14070,
											"end": 14090,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14070,
											"end": 14090,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14070,
											"end": 14090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "tag",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14202,
											"end": 14209,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14199,
											"end": 14200,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14196,
											"end": 14210,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14284,
											"end": 14303,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 14284,
											"end": 14303,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14284,
											"end": 14303,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14263,
											"end": 14305,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14263,
											"end": 14305,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 14391,
											"end": 14395,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14376,
											"end": 14396,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 14376,
											"end": 14396,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14376,
											"end": 14396,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14376,
											"end": 14396,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 14344,
											"end": 14345,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14332,
											"end": 14346,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14332,
											"end": 14346,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14332,
											"end": 14346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14332,
											"end": 14346,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14218,
											"end": 14230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "tag",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 14188,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14192,
											"end": 14195,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14438,
											"end": 14444,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14429,
											"end": 14436,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14426,
											"end": 14445,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14624,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14624,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 14423,
											"end": 14624,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14499,
											"end": 14518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14493,
											"end": 14519,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14582,
											"end": 14583,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 14578,
											"end": 14592,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 14578,
											"end": 14592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14578,
											"end": 14592,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 14594,
											"end": 14597,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 14574,
											"end": 14598,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14570,
											"end": 14607,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 14566,
											"end": 14608,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 14551,
											"end": 14609,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14536,
											"end": 14610,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14536,
											"end": 14610,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 14423,
											"end": 14624,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 14423,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14670,
											"end": 14671,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14654,
											"end": 14668,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14654,
											"end": 14668,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14654,
											"end": 14668,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 14650,
											"end": 14672,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14637,
											"end": 14673,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14637,
											"end": 14673,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13641,
											"end": 14940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14945,
											"end": 15421,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 14945,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15170,
											"end": 15176,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15159,
											"end": 15168,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15152,
											"end": 15177,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15213,
											"end": 15215,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 15208,
											"end": 15210,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15197,
											"end": 15206,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15193,
											"end": 15211,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15186,
											"end": 15216,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15133,
											"end": 15137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15239,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 15291,
											"end": 15293,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 15280,
											"end": 15289,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15276,
											"end": 15294,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15268,
											"end": 15274,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15239,
											"end": 15295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 15239,
											"end": 15295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15239,
											"end": 15295,
											"name": "tag",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 15239,
											"end": 15295,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15343,
											"end": 15352,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15335,
											"end": 15341,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15331,
											"end": 15353,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15326,
											"end": 15328,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 15315,
											"end": 15324,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15304,
											"end": 15354,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 15408,
											"end": 15414,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15400,
											"end": 15406,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 15371,
											"end": 15415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15371,
											"end": 15415,
											"name": "tag",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 15371,
											"end": 15415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15363,
											"end": 15415,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 14945,
											"end": 15421,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14945,
											"end": 15421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15711,
											"end": 16207,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 15711,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15942,
											"end": 15974,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15942,
											"end": 15974,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15942,
											"end": 15974,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15924,
											"end": 15975,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15924,
											"end": 15975,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16011,
											"end": 16043,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16006,
											"end": 16008,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15991,
											"end": 16009,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15991,
											"end": 16009,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15984,
											"end": 16044,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16075,
											"end": 16077,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 16060,
											"end": 16078,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16060,
											"end": 16078,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16053,
											"end": 16087,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16053,
											"end": 16087,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16053,
											"end": 16087,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16123,
											"end": 16126,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 16118,
											"end": 16120,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 16103,
											"end": 16121,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16103,
											"end": 16121,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16096,
											"end": 16127,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16096,
											"end": 16127,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16096,
											"end": 16127,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 16144,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "599"
										},
										{
											"begin": 16144,
											"end": 16201,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16181,
											"end": 16200,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16181,
											"end": 16200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16173,
											"end": 16179,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16144,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 16144,
											"end": 16201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16212,
											"end": 16461,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 16212,
											"end": 16461,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16281,
											"end": 16287,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16334,
											"end": 16336,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16331,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16313,
											"end": 16320,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16309,
											"end": 16332,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 16305,
											"end": 16337,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 16302,
											"end": 16354,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16302,
											"end": 16354,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 16302,
											"end": 16354,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16350,
											"end": 16351,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16348,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16340,
											"end": 16352,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 16302,
											"end": 16354,
											"name": "tag",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 16302,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16382,
											"end": 16391,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16376,
											"end": 16392,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16401,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "281"
										},
										{
											"begin": 16425,
											"end": 16430,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16401,
											"end": 16431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 16401,
											"end": 16431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										}
									],
									".data": {
										"7771773F702B4E939E4F13BB3109B5B3069FC424947ED7997233D08CE9476E9B": "68747470733a2f2f696e686572656e742d736361726c65742d746172736965722e6d7966696c65626173652e636f6d2f697066732f516d5035674e44766f5245477859345842547468413933733436595775333459656b3569733650677a67576770472f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC2981.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/token/common/ERC2981.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"GumdropsAlbumNFT1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_SHARES_PER_TRACK()": "293945b4",
							"SHARE_PRICE_USD()": "414e8029",
							"accumulateRoyalty(uint256)": "bb86759f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"createTrack(string,string)": "f3720cca",
							"getApproved(uint256)": "081812fc",
							"getOwnerSharePercentage(uint256,address)": "343e988c",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"purchaseShares(uint256,uint256)": "d2bcdc60",
							"renounceOwnership()": "715018a6",
							"royaltyInfo(uint256,uint256)": "2a55205a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setRoyaltyInfo(address,uint96)": "02fa7c47",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"tracks(uint256)": "a2e34586",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdrawRoyalty(uint256)": "57a2eda9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_royaltyFeesInBips\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_royaltyReceiverAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidDefaultRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidDefaultRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denominator\",\"type\":\"uint256\"}],\"name\":\"ERC2981InvalidTokenRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC2981InvalidTokenRoyaltyReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyAccrued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RoyaltyWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"SharePurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"isrc\",\"type\":\"string\"}],\"name\":\"TrackCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SHARES_PER_TRACK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SHARE_PRICE_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"}],\"name\":\"accumulateRoyalty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_isrc\",\"type\":\"string\"}],\"name\":\"createTrack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnerSharePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numShares\",\"type\":\"uint256\"}],\"name\":\"purchaseShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyFeesInBips\",\"type\":\"uint96\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tracks\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"isrc\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesRemaining\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAvailable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalRoyalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"trackId\",\"type\":\"uint256\"}],\"name\":\"withdrawRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2981InvalidDefaultRoyalty(uint256,uint256)\":[{\"details\":\"The default royalty set is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidDefaultRoyaltyReceiver(address)\":[{\"details\":\"The default royalty receiver is invalid.\"}],\"ERC2981InvalidTokenRoyalty(uint256,uint256,uint256)\":[{\"details\":\"The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1).\"}],\"ERC2981InvalidTokenRoyaltyReceiver(uint256,address)\":[{\"details\":\"The royalty receiver for `tokenId` is invalid.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GumdropsAlbumNFT1.sol\":\"EuphoriaAlbumNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x89b84f7b1b2d6c294cd6b9a9f661c1cfb1b9b10ca7bac5b3445850a8ce96dcf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44f961aefa43a50c94d8b68e749235b2cf3bd1de18bf6f2e5e1c0fd9a59e06ea\",\"dweb:/ipfs/QmNzd2bnJidavPtt2hQ1em387T6W37n3kDx8WrneCZozxV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x87e4eac873515f713e858d72150a7d2a69ddd531967e60a5d6ba77127db1fd54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0767e22e108183ebab97542c97bb95a619c96b4b6a7f59513c7320a501b1f355\",\"dweb:/ipfs/Qma2MBaEbZcutxkdrEUEayrV1FXQF1qLpYJGpGo49iGHux\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"GumdropsAlbumNFT1.sol\":{\"keccak256\":\"0xd09ac7963994d97fbc4d741a8812bdea6d6da212bb619429d2a2a439c5b2c486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bec293dd999d4c53f7b10f345473e46bfac92549d786b6addd8153843bbcb551\",\"dweb:/ipfs/QmZT94BTpaukh6UFb7zT65M8C1wRsQXvUHGhBmx4C4KH1P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 337,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 339,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 343,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 347,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 351,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 357,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 8,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1496,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_defaultRoyaltyInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(RoyaltyInfo)1493_storage"
							},
							{
								"astId": 1501,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_tokenRoyaltyInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)"
							},
							{
								"astId": 3322,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "tracks",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(Track)3317_storage)"
							},
							{
								"astId": 3325,
								"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
								"label": "_trackCounter",
								"offset": 0,
								"slot": "10",
								"type": "t_struct(Counter)1766_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(RoyaltyInfo)1493_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC2981.RoyaltyInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(RoyaltyInfo)1493_storage"
							},
							"t_mapping(t_uint256,t_struct(Track)3317_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct EuphoriaAlbumNFT.Track)",
								"numberOfBytes": "32",
								"value": "t_struct(Track)3317_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1766_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1765,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(RoyaltyInfo)1493_storage": {
								"encoding": "inplace",
								"label": "struct ERC2981.RoyaltyInfo",
								"members": [
									{
										"astId": 1490,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "receiver",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1492,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "royaltyFraction",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Track)3317_storage": {
								"encoding": "inplace",
								"label": "struct EuphoriaAlbumNFT.Track",
								"members": [
									{
										"astId": 3302,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "title",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 3304,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "isrc",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 3306,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "pricePerShare",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3308,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "sharesRemaining",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3310,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "isAvailable",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 3312,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "totalRoyalty",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 3316,
										"contract": "GumdropsAlbumNFT1.sol:EuphoriaAlbumNFT",
										"label": "shareOwnership",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1761,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1760,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1760,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1760
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
					"exportedSymbols": {
						"IERC165": [
							2125
						],
						"IERC2981": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 168,
							"sourceUnit": 2126,
							"src": "133:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"476:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2125,
										"src": "476:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "476:7:1"
								}
							],
							"canonicalName": "IERC2981",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "194:259:1",
								"text": " @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167,
								2125
							],
							"name": "IERC2981",
							"nameLocation": "464:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "490:231:1",
										"text": " @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
									},
									"functionSelector": "2a55205a",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "735:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "764:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "756:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "789:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "781:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:58:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "836:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "828:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "royaltyAmount",
												"nameLocation": "854:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "846:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:41:1"
									},
									"scope": 167,
									"src": "726:143:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "454:417:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:765:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							304
						],
						"IERC20Errors": [
							209
						],
						"IERC721Errors": [
							257
						]
					},
					"id": 305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 170,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 179,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 184,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 189,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 198,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 203,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 208,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 305,
							"src": "278:1764:2",
							"usedErrors": [
								179,
								184,
								189,
								198,
								203,
								208
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 210,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 257,
							"linearizedBaseContracts": [
								257
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 215,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 220,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 229,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 234,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 239,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 246,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 251,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 256,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 305,
							"src": "2186:2092:2",
							"usedErrors": [
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 269,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 274,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 279,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 286,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 291,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 296,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 303,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 305,
							"src": "4424:2107:2",
							"usedErrors": [
								269,
								274,
								279,
								286,
								291,
								296,
								303
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"ERC165": [
							2113
						],
						"ERC721": [
							1313
						],
						"IERC165": [
							2125
						],
						"IERC721": [
							1430
						],
						"IERC721Errors": [
							257
						],
						"IERC721Metadata": [
							1476
						],
						"IERC721Receiver": [
							1448
						],
						"Strings": [
							2089
						]
					},
					"id": 1314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1431,
							"src": "133:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 307,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "141:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1449,
							"src": "172:54:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 309,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1448,
										"src": "180:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1477,
							"src": "227:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 311,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1476,
										"src": "235:15:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 1761,
							"src": "293:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 313,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1760,
										"src": "301:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2090,
							"src": "342:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 315,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2089,
										"src": "350:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2114,
							"src": "391:69:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 317,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "399:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 318,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2113,
										"src": "408:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 305,
							"src": "461:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 257,
										"src": "469:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 323,
										"name": "Context",
										"nameLocations": [
											"804:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1760,
										"src": "804:7:3"
									},
									"id": 324,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:3"
								},
								{
									"baseName": {
										"id": 325,
										"name": "ERC165",
										"nameLocations": [
											"813:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "813:6:3"
									},
									"id": 326,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:3"
								},
								{
									"baseName": {
										"id": 327,
										"name": "IERC721",
										"nameLocations": [
											"821:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "821:7:3"
									},
									"id": 328,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:3"
								},
								{
									"baseName": {
										"id": 329,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1476,
										"src": "830:15:3"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:3"
								},
								{
									"baseName": {
										"id": 331,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 257,
										"src": "847:13:3"
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:3"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:3",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1313,
							"linearizedBaseContracts": [
								1313,
								257,
								1476,
								1430,
								2113,
								2125,
								1760
							],
							"name": "ERC721",
							"nameLocation": "794:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 335,
									"libraryName": {
										"id": 333,
										"name": "Strings",
										"nameLocations": [
											"873:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2089,
										"src": "873:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:3",
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "917:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 336,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "964:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 338,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 343,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "993:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 342,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:3",
										"keyType": {
											"id": 340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 341,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1051:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 346,
										"keyName": "owner",
										"keyNameLocation": "1067:5:3",
										"keyType": {
											"id": 344,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 345,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1109:59:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 350,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:3",
										"keyType": {
											"id": 348,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 357,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 1313,
									"src": "1175:86:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 356,
										"keyName": "owner",
										"keyNameLocation": "1191:5:3",
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 355,
											"keyName": "operator",
											"keyNameLocation": "1216:8:3",
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 354,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "1437:57:3",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1447:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1455:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "1480:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:3"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:3",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1393:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "1414:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:3"
									},
									"scope": 1313,
									"src": "1381:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2112,
										2124
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1669:192:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1698:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 387,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "1718:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1430_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1430_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 386,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1430",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1754:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 393,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1476,
																			"src": "1774:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1476_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1476_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 392,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1476",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:3",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 400,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "1842:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 398,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1313_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2112,
															"src": "1818:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 384,
												"id": 403,
												"nodeType": "Return",
												"src": "1679:175:3"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 381,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 379,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2113,
												"src": "1637:6:3"
											},
											{
												"id": 380,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2125,
												"src": "1645:7:3"
											}
										],
										"src": "1628:25:3"
									},
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1588:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 376,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "1663:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:3"
									},
									"scope": 1313,
									"src": "1561:300:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1992:136:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2006:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 414,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "2002:87:3",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "2027:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 420,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 419,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "2048:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 425,
															"nodeType": "RevertStatement",
															"src": "2041:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2105:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "2115:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 412,
												"id": 431,
												"nodeType": "Return",
												"src": "2098:23:3"
											}
										]
									},
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:3",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1939:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:3"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:3"
									},
									"scope": 1313,
									"src": "1920:208:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1363
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2257:46:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2288:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2274:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 440,
												"id": 444,
												"nodeType": "Return",
												"src": "2267:29:3"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:3",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2202:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:3"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2248:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:3"
									},
									"scope": 1313,
									"src": "2185:118:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1461
									],
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2425:29:3",
										"statements": [
											{
												"expression": {
													"id": 452,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "2442:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 451,
												"id": 453,
												"nodeType": "Return",
												"src": "2435:12:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:3",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:3"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:3"
									},
									"scope": 1313,
									"src": "2365:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1467
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "2580:31:3",
										"statements": [
											{
												"expression": {
													"id": 461,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "2597:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 460,
												"id": 462,
												"nodeType": "Return",
												"src": "2590:14:3"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:3",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:3"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2565:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:3"
									},
									"scope": 1313,
									"src": "2518:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2756:176:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 473,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2780:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2766:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:3"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "2799:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 476,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:3"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "2856:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 481,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:3",
													"trueExpression": {
														"arguments": [
															{
																"id": 491,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "2892:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 492,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "2901:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:3",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1902,
																	"src": "2901:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 488,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:3",
																	"typeDescriptions": {}
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:3",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 471,
												"id": 498,
												"nodeType": "Return",
												"src": "2843:82:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:3",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2695:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2741:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:3"
									},
									"scope": 1313,
									"src": "2677:255:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "3240:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "3250:9:3"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:3",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "3225:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:3"
									},
									"scope": 1313,
									"src": "3174:92:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1403
									],
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "3384:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3403:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3407:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 520,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3416:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1116,
															1182
														],
														"referencedDeclaration": 1116,
														"src": "3394:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:3"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:3",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3340:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3352:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:3"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:3"
									},
									"scope": 1313,
									"src": "3323:113:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1419
									],
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "3573:78:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 533,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "3583:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3636:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "3623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 532,
												"id": 540,
												"nodeType": "Return",
												"src": "3616:28:3"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:3",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:3"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "3564:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:3"
									},
									"scope": 1313,
									"src": "3497:154:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1411
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3793:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 551,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "3822:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3836:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3846:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 550,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "3803:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:3"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:3",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3745:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3763:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 546,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:3"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:3"
									},
									"scope": 1313,
									"src": "3718:144:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1429
									],
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "4022:59:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 568,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "4039:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 570,
														"indexExpression": {
															"id": 569,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "4058:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 572,
													"indexExpression": {
														"id": 571,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "4065:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 567,
												"id": 573,
												"nodeType": "Return",
												"src": "4032:42:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:3",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3954:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3969:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4016:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:3"
									},
									"scope": 1313,
									"src": "3928:153:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1395
									],
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "4223:498:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4237:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 586,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4233:87:3",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4255:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 592,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "4276:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4269:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 620,
														"src": "4538:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 600,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "4570:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "4574:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 605,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1742,
																"src": "4583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 602,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "4562:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 609,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4610:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 610,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "4627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "4606:109:3",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "4633:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "4675:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 614,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "4681:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 615,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "4690:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 612,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "4654:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 617,
															"nodeType": "RevertStatement",
															"src": "4647:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:3",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4165:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4179:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "4191:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:3"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:3"
									},
									"scope": 1313,
									"src": "4143:578:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1385
									],
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "4863:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4890:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4896:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 631,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															639,
															665
														],
														"referencedDeclaration": 665,
														"src": "4873:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:3"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4813:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4827:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "4839:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:3"
									},
									"scope": 1313,
									"src": "4787:132:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5088:105:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 652,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5121:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "5098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 658,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5162:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5168:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "5172:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "5181:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 657,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "5139:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:3"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:3",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5011:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5025:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5054:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:3"
									},
									"scope": 1313,
									"src": "4985:208:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "5782:40:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 673,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5799:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 675,
													"indexExpression": {
														"id": 674,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5807:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 672,
												"id": 676,
												"nodeType": "Return",
												"src": "5792:23:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:3",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5725:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "5773:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:3"
									},
									"scope": 1313,
									"src": "5707:115:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "6017:48:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 686,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6034:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 688,
													"indexExpression": {
														"id": 687,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "6050:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 685,
												"id": 689,
												"nodeType": "Return",
												"src": "6027:31:3"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:3",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5960:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "6008:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:3"
									},
									"scope": 1313,
									"src": "5938:127:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "6485:163:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 703,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 704,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 709,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "6552:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 710,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 696,
																			"src": "6561:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 713,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "6589:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 714,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "6596:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 712,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "6572:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 718,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 698,
																				"src": "6621:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 717,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "6608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 720,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6633:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 723,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 702,
												"id": 725,
												"nodeType": "Return",
												"src": "6495:146:3"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:3",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6399:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6414:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6431:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6479:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:3"
									},
									"scope": 1313,
									"src": "6376:272:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "7179:271:3",
										"statements": [
											{
												"condition": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:3",
													"subExpression": {
														"arguments": [
															{
																"id": 738,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "7208:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 739,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "7215:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 740,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "7224:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 737,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7194:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "7189:255:3",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "7234:210:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 743,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "7252:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 744,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 759,
																"nodeType": "Block",
																"src": "7350:84:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 755,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 732,
																					"src": "7402:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 756,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "7411:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 754,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 246,
																				"src": "7375:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 758,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:3"
																	}
																]
															},
															"id": 760,
															"nodeType": "IfStatement",
															"src": "7248:186:3",
															"trueBody": {
																"id": 753,
																"nodeType": "Block",
																"src": "7273:71:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "7321:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "7298:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 752,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:3"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:3",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7108:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "7140:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:3"
									},
									"scope": 1313,
									"src": "7082:368:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8167:78:3",
										"statements": [
											{
												"id": 778,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:3",
												"statements": [
													{
														"expression": {
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 772,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 347,
																	"src": "8201:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 774,
																"indexExpression": {
																	"id": 773,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "8211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 775,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "8223:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 777,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:3",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8118:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8135:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:3"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:3"
									},
									"scope": 1313,
									"src": "8092:153:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8933:700:3",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "8943:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"arguments": [
														{
															"id": 795,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "8967:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8958:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 798,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "9035:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 799,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "9031:86:3",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "9055:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 805,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 793,
																		"src": "9086:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 806,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "9092:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 807,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9098:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 804,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "9069:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 809,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "9161:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9157:256:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9181:232:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 819,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 823,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "9298:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 824,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 818,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1116,
																		1182
																	],
																	"referencedDeclaration": 1182,
																	"src": "9277:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:3"
														},
														{
															"id": 837,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:3",
															"statements": [
																{
																	"expression": {
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 831,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "9368:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 833,
																			"indexExpression": {
																				"id": 832,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "9378:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 836,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:3"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9427:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "9423:107:3",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "9445:85:3",
													"statements": [
														{
															"id": 852,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:3",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 846,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 347,
																				"src": "9487:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 848,
																			"indexExpression": {
																				"id": 847,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "9497:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:3"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 855,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9540:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 857,
														"indexExpression": {
															"id": 856,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9548:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9559:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 862,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "9586:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9592:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9596:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "9577:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "EmitStatement",
												"src": "9572:32:3"
											},
											{
												"expression": {
													"id": 867,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 793,
													"src": "9622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 791,
												"id": 868,
												"nodeType": "Return",
												"src": "9615:11:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:3",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8855:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8867:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8884:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8924:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:3"
									},
									"scope": 1313,
									"src": "8838:795:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "10008:274:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "10022:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "10018:87:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "10040:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "10061:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "10054:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "10114:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 893,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"arguments": [
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "10146:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "10150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 895,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10138:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 904,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "10184:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 905,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"nodeType": "IfStatement",
												"src": "10180:96:3",
												"trueBody": {
													"id": 917,
													"nodeType": "Block",
													"src": "10213:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 911,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 910,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "10234:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 916,
															"nodeType": "RevertStatement",
															"src": "10227:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:3",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "9970:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:3"
									},
									"scope": 1313,
									"src": "9955:327:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "10690:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "10710:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "10714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															961
														],
														"referencedDeclaration": 961,
														"src": "10700:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:3"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:3",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "10652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "10664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:3"
									},
									"scope": 1313,
									"src": "10633:100:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "11038:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "11054:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "11058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "11048:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "11111:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "11115:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "11124:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 950,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "11076:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:3"
											}
										]
									},
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:3",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "10973:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "10985:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "11002:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:3"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:3"
									},
									"scope": 1313,
									"src": "10954:182:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "11503:186:3",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 993,
														"src": "11513:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 967,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 970,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11557:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 975,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 969,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "11537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 981,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "11591:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 982,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "11587:96:3",
												"trueBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "11620:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 988,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "11664:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 987,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "11641:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 990,
															"nodeType": "RevertStatement",
															"src": "11634:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:3",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "11477:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:3"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:3"
									},
									"scope": 1313,
									"src": "11462:227:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "12084:389:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "12098:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "12094:87:3",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "12116:65:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1011,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1010,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "12137:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1016,
															"nodeType": "RevertStatement",
															"src": "12130:40:3"
														}
													]
												}
											},
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "12190:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1019,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "12222:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "12226:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1024,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1021,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "12214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "12260:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1031,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1041,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "12362:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1042,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "12379:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1051,
													"nodeType": "IfStatement",
													"src": "12358:109:3",
													"trueBody": {
														"id": 1050,
														"nodeType": "Block",
														"src": "12385:82:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1045,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "12427:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1046,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "12433:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1047,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "12442:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1044,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "12406:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1049,
																"nodeType": "RevertStatement",
																"src": "12399:57:3"
															}
														]
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "12256:211:3",
												"trueBody": {
													"id": 1040,
													"nodeType": "Block",
													"src": "12289:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1037,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "12333:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1036,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "12310:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1039,
															"nodeType": "RevertStatement",
															"src": "12303:38:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12046:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "12058:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:3"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:3"
									},
									"scope": 1313,
									"src": "12013:460:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "13481:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13505:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13511:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13515:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1064,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1072,
															1098
														],
														"referencedDeclaration": 1098,
														"src": "13491:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:3"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13429:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13443:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "13455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:3"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:3"
									},
									"scope": 1313,
									"src": "13406:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "13873:102:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1085,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "13893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "13899:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "13903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "13883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "13944:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "13950:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "13954:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1094,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "13963:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1090,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "13921:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:3"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:3",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13808:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13820:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "13837:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:3"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:3"
									},
									"scope": 1313,
									"src": "13771:204:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "14488:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "14507:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14511:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1111,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "14520:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1108,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1116,
															1182
														],
														"referencedDeclaration": 1182,
														"src": "14498:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:3"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:3",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14436:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14448:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "14465:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:3"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:3"
									},
									"scope": 1313,
									"src": "14418:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "14814:568:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "14880:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1129,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "14893:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "14876:460:3",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "14913:423:3",
													"statements": [
														{
															"assignments": [
																1137
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1137,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1173,
																	"src": "14927:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1136,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1141,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1139,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "14957:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1138,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1248,
																	"src": "14943:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1142,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "15093:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1143,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:3",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1148,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1137,
																			"src": "15115:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1149,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "15124:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:3",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1153,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "15150:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1154,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "15157:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1152,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "15133:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "15089:142:3",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "15164:67:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1159,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1123,
																					"src": "15211:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1158,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 251,
																				"src": "15189:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:3"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1164,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "15249:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1172,
															"nodeType": "IfStatement",
															"src": "15245:81:3",
															"trueBody": {
																"id": 1171,
																"nodeType": "Block",
																"src": "15260:66:3",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1166,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1137,
																					"src": "15292:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1167,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "15299:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1168,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "15303:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1165,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "15283:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1170,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:3"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1175,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "15346:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1177,
														"indexExpression": {
															"id": 1176,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "15362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1178,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "15373:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:3"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:3",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14738:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14767:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "14781:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:3"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:3"
									},
									"scope": 1313,
									"src": "14720:662:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "15684:219:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1192,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "15698:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1193,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "15694:91:3",
												"trueBody": {
													"id": 1202,
													"nodeType": "Block",
													"src": "15722:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1199,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "15765:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1198,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "15743:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1201,
															"nodeType": "RevertStatement",
															"src": "15736:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1204,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "15794:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1207,
															"indexExpression": {
																"id": 1205,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "15813:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1208,
														"indexExpression": {
															"id": 1206,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "15820:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "15832:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1213,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "15870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "15877:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "15887:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1212,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "15855:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "EmitStatement",
												"src": "15850:46:3"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:3",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15619:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15634:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "15652:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:3"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:3"
									},
									"scope": 1313,
									"src": "15591:312:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "16210:169:3",
										"statements": [
											{
												"assignments": [
													1228
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1247,
														"src": "16220:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1227,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"arguments": [
														{
															"id": 1230,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "16245:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "16236:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "16267:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1234,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "16263:88:3",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "16288:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1240,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "16332:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1239,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "16309:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1242,
															"nodeType": "RevertStatement",
															"src": "16302:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1245,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1228,
													"src": "16367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1246,
												"nodeType": "Return",
												"src": "16360:12:3"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:3",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "16161:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:3"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "16201:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:3"
									},
									"scope": 1313,
									"src": "16138:241:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "17020:680:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1260,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "17034:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "IfStatement",
												"src": "17030:664:3",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "17054:640:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1289,
																		"nodeType": "Block",
																		"src": "17168:162:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1282,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1278,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1276,
																						"src": "17190:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1279,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1448,
																								"src": "17200:15:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1448_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1280,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:3",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1447,
																							"src": "17200:32:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1281,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:3",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1288,
																				"nodeType": "IfStatement",
																				"src": "17186:130:3",
																				"trueBody": {
																					"id": 1287,
																					"nodeType": "Block",
																					"src": "17243:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1284,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1253,
																										"src": "17294:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1283,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 239,
																									"src": "17272:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1285,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1286,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1290,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1277,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1276,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1290,
																				"src": "17153:13:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1275,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:3"
																	},
																	"src": "17144:186:3"
																},
																{
																	"block": {
																		"id": 1306,
																		"nodeType": "Block",
																		"src": "17359:325:3",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1297,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1294,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1292,
																							"src": "17381:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:3",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1296,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1304,
																					"nodeType": "Block",
																					"src": "17480:190:3",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:3",
																								"nodeType": "YulBlock",
																								"src": "17566:86:3",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:3",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:3",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:3"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:3"
																													},
																													"nativeSrc": "17599:15:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:3"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:3",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:3"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:3",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:3"
																													},
																													"nativeSrc": "17616:13:3",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:3"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:3",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:3"
																											},
																											"nativeSrc": "17592:38:3",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:3"
																										},
																										"nativeSrc": "17592:38:3",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:3"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1292,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:3",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1292,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:3",
																									"valueSize": 1
																								}
																							],
																							"id": 1303,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:3"
																						}
																					]
																				},
																				"id": 1305,
																				"nodeType": "IfStatement",
																				"src": "17377:293:3",
																				"trueBody": {
																					"id": 1302,
																					"nodeType": "Block",
																					"src": "17401:73:3",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1299,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1253,
																										"src": "17452:2:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1298,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 239,
																									"src": "17430:21:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1301,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:3"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1307,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1293,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1292,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 1307,
																				"src": "17338:19:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1291,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:3"
																	},
																	"src": "17331:353:3"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1269,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1742,
																			"src": "17109:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1271,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "17123:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "17129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "17138:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1266,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1253,
																				"src": "17088:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1265,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1448,
																			"src": "17072:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1448_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1448",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:3",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1447,
																	"src": "17072:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1308,
															"nodeType": "TryStatement",
															"src": "17068:616:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:3",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16950:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16964:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16976:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "16993:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:3"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:3"
									},
									"scope": 1313,
									"src": "16918:782:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1314,
							"src": "776:16926:3",
							"usedErrors": [
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256
							],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "107:17596:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2125
						],
						"IERC721": [
							1430
						]
					},
					"id": 1431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1431,
							"sourceUnit": 2126,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1316,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1319,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2125,
										"src": "287:7:4"
									},
									"id": 1320,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1318,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430,
								2125
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1329,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1338,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1347,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 1430,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 1430,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1430,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 1430,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 1430,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 1430,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 1430,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1412,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 1430,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 1430,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1431,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1448
						]
					},
					"id": 1449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1433,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1448,
							"linearizedBaseContracts": [
								1448
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1448,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1449,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1430
						],
						"IERC721Metadata": [
							1476
						]
					},
					"id": 1477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1477,
							"sourceUnit": 1431,
							"src": "153:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1451,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1430,
										"src": "161:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1454,
										"name": "IERC721",
										"nameLocations": [
											"357:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "357:7:6"
									},
									"id": 1455,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:6"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1453,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1476,
							"linearizedBaseContracts": [
								1476,
								1430,
								2125
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:6"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "473:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:6"
									},
									"scope": 1476,
									"src": "434:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:6"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "600:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:6"
									},
									"scope": 1476,
									"src": "559:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:6"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "774:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1472,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:6"
									},
									"scope": 1476,
									"src": "716:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1477,
							"src": "328:463:6",
							"usedErrors": [],
							"usedEvents": [
								1329,
								1338,
								1347
							]
						}
					],
					"src": "127:665:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/common/ERC2981.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/common/ERC2981.sol",
					"exportedSymbols": {
						"ERC165": [
							2113
						],
						"ERC2981": [
							1730
						],
						"IERC165": [
							2125
						],
						"IERC2981": [
							167
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC2981.sol",
							"file": "../../interfaces/IERC2981.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 168,
							"src": "134:55:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1479,
										"name": "IERC2981",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "142:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 1483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 2114,
							"src": "190:69:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1481,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "198:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1482,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2113,
										"src": "207:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1485,
										"name": "IERC2981",
										"nameLocations": [
											"1135:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "1135:8:7"
									},
									"id": 1486,
									"nodeType": "InheritanceSpecifier",
									"src": "1135:8:7"
								},
								{
									"baseName": {
										"id": 1487,
										"name": "ERC165",
										"nameLocations": [
											"1145:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2113,
										"src": "1145:6:7"
									},
									"id": 1488,
									"nodeType": "InheritanceSpecifier",
									"src": "1145:6:7"
								}
							],
							"canonicalName": "ERC2981",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1484,
								"nodeType": "StructuredDocumentation",
								"src": "261:844:7",
								"text": " @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n fee is specified in basis points by default.\n IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n voluntarily pay royalties together with sales, but note that this standard is not yet widely supported."
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730,
								2113,
								167,
								2125
							],
							"name": "ERC2981",
							"nameLocation": "1124:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC2981.RoyaltyInfo",
									"id": 1493,
									"members": [
										{
											"constant": false,
											"id": 1490,
											"mutability": "mutable",
											"name": "receiver",
											"nameLocation": "1195:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1493,
											"src": "1187:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1489,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1492,
											"mutability": "mutable",
											"name": "royaltyFraction",
											"nameLocation": "1220:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1493,
											"src": "1213:22:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 1491,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "1213:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoyaltyInfo",
									"nameLocation": "1165:11:7",
									"nodeType": "StructDefinition",
									"scope": 1730,
									"src": "1158:84:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1496,
									"mutability": "mutable",
									"name": "_defaultRoyaltyInfo",
									"nameLocation": "1268:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1248:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
										"typeString": "struct ERC2981.RoyaltyInfo"
									},
									"typeName": {
										"id": 1495,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1494,
											"name": "RoyaltyInfo",
											"nameLocations": [
												"1248:11:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1493,
											"src": "1248:11:7"
										},
										"referencedDeclaration": 1493,
										"src": "1248:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
											"typeString": "struct ERC2981.RoyaltyInfo"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1501,
									"mutability": "mutable",
									"name": "_tokenRoyaltyInfo",
									"nameLocation": "1341:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1293:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
										"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
									},
									"typeName": {
										"id": 1500,
										"keyName": "tokenId",
										"keyNameLocation": "1309:7:7",
										"keyType": {
											"id": 1497,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1301:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1293:39:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
											"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1499,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1498,
												"name": "RoyaltyInfo",
												"nameLocations": [
													"1320:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1493,
												"src": "1320:11:7"
											},
											"referencedDeclaration": 1493,
											"src": "1320:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
												"typeString": "struct ERC2981.RoyaltyInfo"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "1365:96:7",
										"text": " @dev The default royalty set is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "6f483d09",
									"id": 1508,
									"name": "ERC2981InvalidDefaultRoyalty",
									"nameLocation": "1472:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1509:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1501:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1528:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1520:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1500:40:7"
									},
									"src": "1466:75:7"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "1547:64:7",
										"text": " @dev The default royalty receiver is invalid."
									},
									"errorSelector": "b6d9900a",
									"id": 1513,
									"name": "ERC2981InvalidDefaultRoyaltyReceiver",
									"nameLocation": "1622:36:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1667:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1659:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:18:7"
									},
									"src": "1616:61:7"
								},
								{
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "1683:114:7",
										"text": " @dev The royalty set for an specific `tokenId` is invalid (eg. (numerator / denominator) >= 1)."
									},
									"errorSelector": "dfd1fc1b",
									"id": 1522,
									"name": "ERC2981InvalidTokenRoyalty",
									"nameLocation": "1808:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1843:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1835:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "1860:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1852:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1879:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1871:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:57:7"
									},
									"src": "1802:90:7"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "1898:70:7",
										"text": " @dev The royalty receiver for `tokenId` is invalid."
									},
									"errorSelector": "969f0852",
									"id": 1529,
									"name": "ERC2981InvalidTokenRoyaltyReceiver",
									"nameLocation": "1979:34:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2022:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2014:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2039:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "2031:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:35:7"
									},
									"src": "1973:76:7"
								},
								{
									"baseFunctions": [
										2112,
										2124
									],
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "2224:105:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1540,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "2241:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1542,
																		"name": "IERC2981",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "2261:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$167_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2981_$167_$",
																			"typeString": "type(contract IERC2981)"
																		}
																	],
																	"id": 1541,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2256:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2256:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2981_$167",
																	"typeString": "type(contract IERC2981)"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2271:11:7",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2256:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2241:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1548,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1532,
																"src": "2310:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1546,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC2981_$1730_$",
																	"typeString": "type(contract super ERC2981)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2292:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2112,
															"src": "2286:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2286:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2241:81:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1551,
												"nodeType": "Return",
												"src": "2234:88:7"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "2055:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2125:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1536,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1534,
												"name": "IERC165",
												"nameLocations": [
													"2192:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2125,
												"src": "2192:7:7"
											},
											{
												"id": 1535,
												"name": "ERC165",
												"nameLocations": [
													"2201:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2113,
												"src": "2201:6:7"
											}
										],
										"src": "2183:25:7"
									},
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2150:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2143:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2143:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:20:7"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2218:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2218:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:6:7"
									},
									"scope": 1730,
									"src": "2116:213:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										166
									],
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "2483:315:7",
										"statements": [
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "royalty",
														"nameLocation": "2512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "2493:26:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo"
														},
														"typeName": {
															"id": 1566,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1565,
																"name": "RoyaltyInfo",
																"nameLocations": [
																	"2493:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1493,
																"src": "2493:11:7"
															},
															"referencedDeclaration": 1493,
															"src": "2493:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage_ptr",
																"typeString": "struct ERC2981.RoyaltyInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"baseExpression": {
														"id": 1568,
														"name": "_tokenRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2522:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
															"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
														}
													},
													"id": 1570,
													"indexExpression": {
														"id": 1569,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "2540:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2522:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2493:55:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1572,
															"name": "royalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2563:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																"typeString": "struct ERC2981.RoyaltyInfo memory"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2571:8:7",
														"memberName": "receiver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1490,
														"src": "2563:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2591:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2583:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1574,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2583:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2583:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2563:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "2559:90:7",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "2595:54:7",
													"statements": [
														{
															"expression": {
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1579,
																	"name": "royalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "2609:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																		"typeString": "struct ERC2981.RoyaltyInfo memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1580,
																	"name": "_defaultRoyaltyInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "2619:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
																		"typeString": "struct ERC2981.RoyaltyInfo storage ref"
																	}
																},
																"src": "2609:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																	"typeString": "struct ERC2981.RoyaltyInfo memory"
																}
															},
															"id": 1582,
															"nodeType": "ExpressionStatement",
															"src": "2609:29:7"
														}
													]
												}
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "royaltyAmount",
														"nameLocation": "2667:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1601,
														"src": "2659:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2659:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1587,
																	"name": "salePrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "2684:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 1588,
																		"name": "royalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "2696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																			"typeString": "struct ERC2981.RoyaltyInfo memory"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2704:15:7",
																	"memberName": "royaltyFraction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1492,
																	"src": "2696:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "2684:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1591,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2683:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1592,
															"name": "_feeDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2723:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
																"typeString": "function () pure returns (uint96)"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2723:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "2683:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:81:7"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1596,
																"name": "royalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "2759:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
																	"typeString": "struct ERC2981.RoyaltyInfo memory"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2767:8:7",
															"memberName": "receiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1490,
															"src": "2759:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1598,
															"name": "royaltyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2777:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1599,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2758:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1600,
												"nodeType": "Return",
												"src": "2751:40:7"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2335:39:7",
										"text": " @inheritdoc IERC2981"
									},
									"functionSelector": "2a55205a",
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "royaltyInfo",
									"nameLocation": "2388:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "salePrice",
												"nameLocation": "2425:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2417:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:36:7"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2465:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2474:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:18:7"
									},
									"scope": 1730,
									"src": "2379:419:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "3139:29:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3130303030",
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3156:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												"functionReturnParameters": 1607,
												"id": 1609,
												"nodeType": "Return",
												"src": "3149:12:7"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2804:264:7",
										"text": " @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n override."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_feeDenominator",
									"nameLocation": "3082:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3097:2:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3131:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1605,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3131:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:8:7"
									},
									"scope": 1730,
									"src": "3073:95:7",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "3513:423:7",
										"statements": [
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "3531:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1656,
														"src": "3523:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3523:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1621,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "3545:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3545:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3523:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1624,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3576:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1625,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "3591:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3576:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1633,
												"nodeType": "IfStatement",
												"src": "3572:173:7",
												"trueBody": {
													"id": 1632,
													"nodeType": "Block",
													"src": "3604:141:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1628,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1616,
																		"src": "3708:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1629,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "3722:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1627,
																	"name": "ERC2981InvalidDefaultRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "3679:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3679:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1631,
															"nodeType": "RevertStatement",
															"src": "3672:62:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1634,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3758:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3778:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3770:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3770:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3770:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3758:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "3754:108:7",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "3782:80:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3848:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3840:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1641,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3840:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3840:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1640,
																	"name": "ERC2981InvalidDefaultRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "3803:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3803:48:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1646,
															"nodeType": "RevertStatement",
															"src": "3796:55:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1649,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "3872:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1651,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "3906:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1652,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1616,
																"src": "3916:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 1650,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3894:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$1493_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3894:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "3872:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "3872:57:7"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "3174:250:7",
										"text": " @dev Sets the royalty information that all ids in this contract will default to.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDefaultRoyalty",
									"nameLocation": "3438:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3465:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3457:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3457:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "3482:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "3475:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1615,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3475:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:39:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:7"
									},
									"scope": 1730,
									"src": "3429:507:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "4057:43:7",
										"statements": [
											{
												"expression": {
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4067:26:7",
													"subExpression": {
														"id": 1661,
														"name": "_defaultRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "4074:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "4067:26:7"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "3942:60:7",
										"text": " @dev Removes default royalty information."
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deleteDefaultRoyalty",
									"nameLocation": "4016:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4037:2:7"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4057:0:7"
									},
									"scope": 1730,
									"src": "4007:93:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "4469:444:7",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "4487:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "4479:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4479:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1679,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1677,
														"name": "_feeDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "4501:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint96_$",
															"typeString": "function () pure returns (uint96)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4501:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4479:39:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1680,
														"name": "feeNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "4532:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1681,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4547:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4532:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "4528:180:7",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "4560:148:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1684,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "4662:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1685,
																		"name": "feeNumerator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "4671:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"id": 1686,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "4685:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1683,
																	"name": "ERC2981InvalidTokenRoyalty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "4635:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4635:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "4628:69:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "4721:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4741:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4733:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4733:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4733:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4721:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1706,
												"nodeType": "IfStatement",
												"src": "4717:115:7",
												"trueBody": {
													"id": 1705,
													"nodeType": "Block",
													"src": "4745:87:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1698,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "4801:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4818:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4810:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4810:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4810:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1697,
																	"name": "ERC2981InvalidTokenRoyaltyReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "4766:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (uint256,address) pure returns (error)"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4766:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1704,
															"nodeType": "RevertStatement",
															"src": "4759:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1707,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "4842:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 1709,
														"indexExpression": {
															"id": 1708,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4860:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4842:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1711,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1670,
																"src": "4883:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1712,
																"name": "feeNumerator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "4893:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 1710,
															"name": "RoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "4871:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_RoyaltyInfo_$1493_storage_ptr_$",
																"typeString": "type(struct ERC2981.RoyaltyInfo storage pointer)"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4871:35:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_memory_ptr",
															"typeString": "struct ERC2981.RoyaltyInfo memory"
														}
													},
													"src": "4842:64:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
														"typeString": "struct ERC2981.RoyaltyInfo storage ref"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "4842:64:7"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "4106:259:7",
										"text": " @dev Sets the royalty information for a specific token id, overriding the global default.\n Requirements:\n - `receiver` cannot be the zero address.\n - `feeNumerator` cannot be greater than the fee denominator."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenRoyalty",
									"nameLocation": "4379:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4404:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4396:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4396:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4421:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4413:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "feeNumerator",
												"nameLocation": "4438:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "4431:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1671,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4431:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4395:56:7"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4469:0:7"
									},
									"scope": 1730,
									"src": "4370:543:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "5081:50:7",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5091:33:7",
													"subExpression": {
														"baseExpression": {
															"id": 1723,
															"name": "_tokenRoyaltyInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "5098:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$1493_storage_$",
																"typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
															}
														},
														"id": 1725,
														"indexExpression": {
															"id": 1724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "5116:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5098:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoyaltyInfo_$1493_storage",
															"typeString": "struct ERC2981.RoyaltyInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "5091:33:7"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "4919:95:7",
										"text": " @dev Resets royalty information for the token id back to the global default."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_resetTokenRoyalty",
									"nameLocation": "5028:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5055:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "5047:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:17:7"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5081:0:7"
									},
									"scope": 1730,
									"src": "5019:112:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1731,
							"src": "1106:4027:7",
							"usedErrors": [
								1508,
								1513,
								1522,
								1529
							],
							"usedEvents": []
						}
					],
					"src": "108:5026:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1760
						]
					},
					"id": 1761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1760,
							"linearizedBaseContracts": [
								1760
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1738,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1740,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1760,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1747,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1746,
												"id": 1749,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1760,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1755,
												"id": 1757,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1760,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1761,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1834
						]
					},
					"id": 1835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1762,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1763,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1834,
							"linearizedBaseContracts": [
								1834
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1766,
									"members": [
										{
											"constant": false,
											"id": 1765,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1766,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1764,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1834,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1774,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1765,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1776,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1767,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1766,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1766,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1834,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1790,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1784,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1765,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1789,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1780,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1779,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1766,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1766,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1834,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1799
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1819,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1798,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"expression": {
														"id": 1800,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1765,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1818,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1810,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1795,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1765,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1799,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1817,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1793,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1766,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1766,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1834,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1826,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1765,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1822,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1821,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1766,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1766,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1834,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1835,
							"src": "424:971:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3179
						],
						"SignedMath": [
							3284
						],
						"Strings": [
							2089
						]
					},
					"id": 2090,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2090,
							"sourceUnit": 3180,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1837,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3179,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2090,
							"sourceUnit": 3285,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1839,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3284,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1841,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2089,
							"linearizedBaseContracts": [
								2089
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1844,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 2089,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1842,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1843,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1847,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2089,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1845,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1846,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1854,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 1900,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															1863
														],
														"declarations": [
															{
																"constant": false,
																"id": 1863,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1900,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1862,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1870,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1866,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1857,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1864,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3179,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3179_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2999,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															1872
														],
														"declarations": [
															{
																"constant": false,
																"id": 1872,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1900,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1871,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1877,
														"initialValue": {
															"arguments": [
																{
																	"id": 1875,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1873,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															1879
														],
														"declarations": [
															{
																"constant": false,
																"id": 1879,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1900,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1880,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1863,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1879,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 1881,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 1896,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 1883,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1885,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1844,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1879,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1857,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1886,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1890,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1895,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 1894,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1897,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 1898,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1861,
														"id": 1899,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 2089,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1920,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3284,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3284_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3283,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1919,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1910,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1926,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1904,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 2089,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 1946,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1940,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1938,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3179,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3179_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3121,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1936,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1948,
																	2031,
																	2051
																],
																"referencedDeclaration": 2031,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1935,
														"id": 1945,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 2089,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1961,
												"initialValue": {
													"id": 1960,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1951,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													1963
												],
												"declarations": [
													{
														"constant": false,
														"id": 1963,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2030,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1962,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1972,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1967,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1964,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1973,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1975,
														"indexExpression": {
															"hexValue": "30",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1979,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1981,
														"indexExpression": {
															"hexValue": "31",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 2013,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1999,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2001,
																	"indexExpression": {
																		"id": 2000,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2002,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2006,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2003,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2009,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2012,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1993,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1986,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"initializationExpression": {
													"assignments": [
														1986
													],
													"declarations": [
														{
															"constant": false,
															"id": 1986,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2014,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1985,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1992,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1988,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 1996,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1998,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2015,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2024,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 2023,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2019,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2020,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2018,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2022,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2025,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1957,
												"id": 2029,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 2089,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2044,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2034,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2042,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2047,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2039,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1948,
															2031,
															2051
														],
														"referencedDeclaration": 2031,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2049,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 2089,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2063,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2061,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2066,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2075,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2054,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2073,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2072,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2081,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2079,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2078,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2060,
												"id": 2086,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2053,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 2089,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2090,
							"src": "251:2847:10",
							"usedErrors": [
								1854
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2113
						],
						"IERC165": [
							2125
						]
					},
					"id": 2114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2093,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2114,
							"sourceUnit": 2126,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2092,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2095,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2125,
										"src": "687:7:11"
									},
									"id": 2096,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2094,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2113,
							"linearizedBaseContracts": [
								2113,
								2125
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2124
									],
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2104,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2099,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2106,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2125_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2125_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2105,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2125",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2110,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2112,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2113,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2114,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2125
						]
					},
					"id": 2126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2116,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2125,
							"linearizedBaseContracts": [
								2125
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2117,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2118,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2125,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2126,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3179
						]
					},
					"id": 3180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2128,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3179,
							"linearizedBaseContracts": [
								3179
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2129,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2131,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2136,
									"members": [
										{
											"id": 2132,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2133,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2134,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2135,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2166,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2149
														],
														"declarations": [
															{
																"constant": false,
																"id": 2149,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2166,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2148,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2153,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2150,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2151,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2154,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2155,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2139,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2161,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2159,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2147,
															"id": 2160,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2163,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2147,
														"id": 2165,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3179,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2194,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2171,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2187,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2179,
															"id": 2186,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2189,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2171,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2190,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2192,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2179,
														"id": 2193,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3179,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2236,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2208,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2215,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2213,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2207,
															"id": 2214,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2217
														],
														"declarations": [
															{
																"constant": false,
																"id": 2217,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2236,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2216,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2221,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2218,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2222,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2223,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2225,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2231,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2207,
															"id": 2230,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2233,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2207,
														"id": 2235,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3179,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2264,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2250,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2243,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2257,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2249,
															"id": 2256,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2259,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2260,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2249,
														"id": 2263,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3179,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2292,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2278,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2285,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2277,
															"id": 2284,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2287,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2288,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2290,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2277,
														"id": 2291,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2294,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3179,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2304,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2305,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2299,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2299,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2303,
												"id": 2310,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2295,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3179,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2322,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2323,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2326,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2325,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2328,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3179,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2340,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2341,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2343,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2344,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2333,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2345,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2335,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2347,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2339,
												"id": 2351,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3179,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2371,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2370,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2366,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2367,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2362,
															"id": 2369,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2372,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2376,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2358,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2362,
												"id": 2385,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3179,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2511,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2400
														],
														"declarations": [
															{
																"constant": false,
																"id": 2400,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2404,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2401,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2402,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2392,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2406
														],
														"declarations": [
															{
																"constant": false,
																"id": 2406,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2407,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2406,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2390,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2392,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2408,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2409,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2417,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2416,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2412,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2400,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2413,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2398,
																	"id": 2415,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2418,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2419,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2406,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2425,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2424,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2421,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2423,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2427
														],
														"declarations": [
															{
																"constant": false,
																"id": 2427,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2426,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2428,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2406,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2406,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2427,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2427,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2427,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2390,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2392,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2429,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2431
														],
														"declarations": [
															{
																"constant": false,
																"id": 2431,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2430,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2438,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2432,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2434,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2431,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2439,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2440,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2406,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2442,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2431,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2445,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2447
														],
														"declarations": [
															{
																"constant": false,
																"id": 2447,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2511,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2454,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2449,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2455,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2457,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2458,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2462,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2463,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2465,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2466,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2470,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2471,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2473,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2474,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2478,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2479,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2481,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2482,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2486,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2487,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2489,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2490,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2494,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2495,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2447,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2497,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2498,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2502,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2503,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2397,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2504,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2505,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2508,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2509,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2398,
														"id": 2510,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3179,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2529
												],
												"declarations": [
													{
														"constant": false,
														"id": 2529,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2555,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2535,
												"initialValue": {
													"arguments": [
														{
															"id": 2531,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2532,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2533,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2530,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2513,
															2556
														],
														"referencedDeclaration": 2513,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2537,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2523,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2136",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2136",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2536,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3178,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2136_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2540,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2516,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2541,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2518,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2542,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2539,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2552,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2551,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2547,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2529,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2550,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2553,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2529,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2527,
												"id": 2554,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2522,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2521,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3179,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2667,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2564,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2570,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2569,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2563,
															"id": 2568,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2572
												],
												"declarations": [
													{
														"constant": false,
														"id": 2572,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2667,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2571,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2581,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2575,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2559,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2574,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2835,
																			2870
																		],
																		"referencedDeclaration": 2835,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2579,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2666,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2582,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2583,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2584,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2585,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2592,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2593,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2594,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2595,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2596,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2599,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2603,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2604,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2605,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2606,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2607,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2610,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2614,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2615,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2616,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2617,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2618,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2621,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2625,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2626,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2627,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2628,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2629,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2632,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2636,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2638,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2639,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2640,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2643,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2647,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2648,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2572,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2649,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2572,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2650,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2651,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2572,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2654,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2658,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2660,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2572,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2661,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2559,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2662,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2572,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2659,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2563,
														"id": 2665,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2668,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3179,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2702,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2701,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2680
														],
														"declarations": [
															{
																"constant": false,
																"id": 2680,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2701,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2679,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2684,
														"initialValue": {
															"arguments": [
																{
																	"id": 2682,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2671,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2681,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2668,
																	2703
																],
																"referencedDeclaration": 2668,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2685,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2680,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2687,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2674,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2686,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3178,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2136_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2693,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2691,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2689,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2680,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2690,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2680,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2692,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2671,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2698,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2678,
														"id": 2700,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2673,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2672,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2703,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3179,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2834,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2712
												],
												"declarations": [
													{
														"constant": false,
														"id": 2712,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2834,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2711,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2714,
												"initialValue": {
													"hexValue": "30",
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2831,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2715,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2720,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2723,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2744,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2743,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2735,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2738,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2739,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2742,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2745,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2759,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2758,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2754,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2757,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2760,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2774,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2773,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2765,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2768,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2769,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2772,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2789,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2788,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2780,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2783,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2787,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2790,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2804,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2803,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2798,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2799,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2802,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2805,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2819,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2818,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2810,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2813,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2814,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2817,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2820,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2830,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2829,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2825,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2712,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2828,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2832,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2712,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2710,
												"id": 2833,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2704,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2835,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3179,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2869,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2868,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2847
														],
														"declarations": [
															{
																"constant": false,
																"id": 2847,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2868,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2846,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2851,
														"initialValue": {
															"arguments": [
																{
																	"id": 2849,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2848,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2835,
																	2870
																],
																"referencedDeclaration": 2835,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2852,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2847,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2854,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2841,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2853,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3178,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2136_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2857,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2847,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2859,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2838,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2865,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2845,
														"id": 2867,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2836,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2839,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3179,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2879
												],
												"declarations": [
													{
														"constant": false,
														"id": 2879,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2998,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2881,
												"initialValue": {
													"hexValue": "30",
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2995,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2898,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2897,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2896,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2915,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2914,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2904,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2913,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2916,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2932,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2931,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2927,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2930,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2949,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2948,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2938,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2947,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2950,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2960,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2967,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2983,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2982,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2977,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2981,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2984,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2873,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2994,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2993,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2992,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2996,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2879,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2877,
												"id": 2997,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3179,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 3032,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															3011
														],
														"declarations": [
															{
																"constant": false,
																"id": 3011,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3032,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3010,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3015,
														"initialValue": {
															"arguments": [
																{
																	"id": 3013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3002,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3012,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2999,
																	3034
																],
																"referencedDeclaration": 2999,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3011,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3018,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3005,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3017,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3178,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2136_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3020,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3021,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3011,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3023,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3002,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3029,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3009,
														"id": 3031,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3003,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3179,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3043
												],
												"declarations": [
													{
														"constant": false,
														"id": 3043,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3120,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3045,
												"initialValue": {
													"hexValue": "30",
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3117,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3037,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3060,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3059,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3051,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3054,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3055,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3058,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3037,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3075,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3074,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3066,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3069,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3070,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3073,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3076,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3037,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3090,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3089,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3081,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3084,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3085,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3088,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3091,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3037,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3105,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3104,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3096,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3099,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3100,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3103,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3037,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3116,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3115,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3111,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3043,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3114,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3118,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3043,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3041,
												"id": 3119,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3179,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3158,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3157,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3133
														],
														"declarations": [
															{
																"constant": false,
																"id": 3133,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3157,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3132,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3137,
														"initialValue": {
															"arguments": [
																{
																	"id": 3135,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3124,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3134,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3121,
																	3159
																],
																"referencedDeclaration": 3121,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3138,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3133,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3140,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3127,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2136",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3139,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3178,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2136_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3149,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3142,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3145,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3143,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3133,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3144,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3146,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3148,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3124,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3154,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3131,
														"id": 3156,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3125,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3179,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3177,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3170,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3163,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2136",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2136",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3168,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3167,
												"id": 3176,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3160,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2136",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3161,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2136,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2136,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2136",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3179,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3180,
							"src": "203:14914:13",
							"usedErrors": [
								2131
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3284
						]
					},
					"id": 3285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3182,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3284,
							"linearizedBaseContracts": [
								3284
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3199,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3192,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3185,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3193,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3187,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3187,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 3195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3185,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3191,
												"id": 3198,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 3183,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3186,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 3191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3189,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 3284,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3217,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3210,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3203,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3211,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3214,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 3213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3203,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3209,
												"id": 3216,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 3201,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3202,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3204,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3218,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3207,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 3284,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3261,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													3229
												],
												"declarations": [
													{
														"constant": false,
														"id": 3229,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 3261,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3228,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3242,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3230,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3221,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3231,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3223,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3233,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3234,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3221,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3235,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3223,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3237,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3240,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3243,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3229,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3248,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3229,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3246,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3244,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3253,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3221,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3254,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3223,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3256,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3258,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3227,
												"id": 3260,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 3219,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3220,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3222,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3225,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 3284,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3282,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 3281,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3272,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3265,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 3276,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3265,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 3275,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3265,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3270,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 3279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3269,
														"id": 3280,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3264,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 3269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 3284,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3285,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"GumdropsAlbumNFT1.sol": {
				"ast": {
					"absolutePath": "GumdropsAlbumNFT1.sol",
					"exportedSymbols": {
						"Context": [
							1760
						],
						"Counters": [
							1834
						],
						"ERC165": [
							2113
						],
						"ERC2981": [
							1730
						],
						"ERC721": [
							1313
						],
						"EuphoriaAlbumNFT": [
							3727
						],
						"IERC165": [
							2125
						],
						"IERC2981": [
							167
						],
						"IERC721": [
							1430
						],
						"IERC721Errors": [
							257
						],
						"IERC721Metadata": [
							1476
						],
						"IERC721Receiver": [
							1448
						],
						"Ownable": [
							147
						],
						"Strings": [
							2089
						]
					},
					"id": 3728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3728,
							"sourceUnit": 1314,
							"src": "59:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3728,
							"sourceUnit": 148,
							"src": "118:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/common/ERC2981.sol",
							"file": "@openzeppelin/contracts/token/common/ERC2981.sol",
							"id": 3289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3728,
							"sourceUnit": 1731,
							"src": "172:58:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3728,
							"sourceUnit": 1835,
							"src": "232:52:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3291,
										"name": "ERC721",
										"nameLocations": [
											"315:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1313,
										"src": "315:6:15"
									},
									"id": 3292,
									"nodeType": "InheritanceSpecifier",
									"src": "315:6:15"
								},
								{
									"baseName": {
										"id": 3293,
										"name": "Ownable",
										"nameLocations": [
											"323:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "323:7:15"
									},
									"id": 3294,
									"nodeType": "InheritanceSpecifier",
									"src": "323:7:15"
								},
								{
									"baseName": {
										"id": 3295,
										"name": "ERC2981",
										"nameLocations": [
											"332:7:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "332:7:15"
									},
									"id": 3296,
									"nodeType": "InheritanceSpecifier",
									"src": "332:7:15"
								}
							],
							"canonicalName": "EuphoriaAlbumNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3727,
							"linearizedBaseContracts": [
								3727,
								1730,
								147,
								1313,
								257,
								1476,
								1430,
								2113,
								167,
								2125,
								1760
							],
							"name": "EuphoriaAlbumNFT",
							"nameLocation": "295:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3300,
									"libraryName": {
										"id": 3297,
										"name": "Counters",
										"nameLocations": [
											"349:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1834,
										"src": "349:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "343:36:15",
									"typeName": {
										"id": 3299,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3298,
											"name": "Counters.Counter",
											"nameLocations": [
												"362:8:15",
												"371:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1766,
											"src": "362:16:15"
										},
										"referencedDeclaration": 1766,
										"src": "362:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"canonicalName": "EuphoriaAlbumNFT.Track",
									"id": 3317,
									"members": [
										{
											"constant": false,
											"id": 3302,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "433:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "426:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3301,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "426:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3304,
											"mutability": "mutable",
											"name": "isrc",
											"nameLocation": "448:4:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "441:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3303,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "441:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3306,
											"mutability": "mutable",
											"name": "pricePerShare",
											"nameLocation": "463:13:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "455:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "455:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3308,
											"mutability": "mutable",
											"name": "sharesRemaining",
											"nameLocation": "487:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "479:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3307,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "479:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3310,
											"mutability": "mutable",
											"name": "isAvailable",
											"nameLocation": "510:11:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "505:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3309,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "505:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3312,
											"mutability": "mutable",
											"name": "totalRoyalty",
											"nameLocation": "532:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "524:20:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3316,
											"mutability": "mutable",
											"name": "shareOwnership",
											"nameLocation": "575:14:15",
											"nodeType": "VariableDeclaration",
											"scope": 3317,
											"src": "547:42:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 3315,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 3313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "547:27:15",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 3314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Track",
									"nameLocation": "417:5:15",
									"nodeType": "StructDefinition",
									"scope": 3727,
									"src": "410:217:15",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a2e34586",
									"id": 3322,
									"mutability": "mutable",
									"name": "tracks",
									"nameLocation": "686:6:15",
									"nodeType": "VariableDeclaration",
									"scope": 3727,
									"src": "653:39:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
										"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track)"
									},
									"typeName": {
										"id": 3321,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3318,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "661:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "653:25:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
											"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3320,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3319,
												"name": "Track",
												"nameLocations": [
													"672:5:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3317,
												"src": "672:5:15"
											},
											"referencedDeclaration": 3317,
											"src": "672:5:15",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
												"typeString": "struct EuphoriaAlbumNFT.Track"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3325,
									"mutability": "mutable",
									"name": "_trackCounter",
									"nameLocation": "720:13:15",
									"nodeType": "VariableDeclaration",
									"scope": 3727,
									"src": "695:38:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1766_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3324,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3323,
											"name": "Counters.Counter",
											"nameLocations": [
												"695:8:15",
												"704:7:15"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1766,
											"src": "695:16:15"
										},
										"referencedDeclaration": 1766,
										"src": "695:16:15",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1766_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "293945b4",
									"id": 3328,
									"mutability": "constant",
									"name": "MAX_SHARES_PER_TRACK",
									"nameLocation": "774:20:15",
									"nodeType": "VariableDeclaration",
									"scope": 3727,
									"src": "750:51:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "750:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31323530",
										"id": 3327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "797:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1250_by_1",
											"typeString": "int_const 1250"
										},
										"value": "1250"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "414e8029",
									"id": 3331,
									"mutability": "constant",
									"name": "SHARE_PRICE_USD",
									"nameLocation": "828:15:15",
									"nodeType": "VariableDeclaration",
									"scope": 3727,
									"src": "804:46:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31323530",
										"id": 3330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "846:4:15",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1250_by_1",
											"typeString": "int_const 1250"
										},
										"value": "1250"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "21579433a032855e20e8afc48e980ddae0b6285e4aa03370f03192be12bea28b",
									"id": 3339,
									"name": "TrackCreated",
									"nameLocation": "932:12:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"indexed": false,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "953:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "945:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3335,
												"indexed": false,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "969:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "962:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "962:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3337,
												"indexed": false,
												"mutability": "mutable",
												"name": "isrc",
												"nameLocation": "983:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3339,
												"src": "976:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:44:15"
									},
									"src": "926:63:15"
								},
								{
									"anonymous": false,
									"eventSelector": "a5afafc7c052a234f91512f360beeb7b6db7a0692bbd017ab5632d80a03a4bc0",
									"id": 3347,
									"name": "SharePurchased",
									"nameLocation": "997:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"indexed": false,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "1020:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "1012:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3343,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1037:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "1029:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3345,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1052:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "1044:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:48:15"
									},
									"src": "991:69:15"
								},
								{
									"anonymous": false,
									"eventSelector": "e03872bdffa6568df2cc485cf9f211d60a716c99c5633e1edc87102d16112500",
									"id": 3353,
									"name": "RoyaltyAccrued",
									"nameLocation": "1068:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"indexed": false,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "1091:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "1083:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3351,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3353,
												"src": "1100:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:33:15"
									},
									"src": "1062:54:15"
								},
								{
									"anonymous": false,
									"eventSelector": "d6ce75900eecaacadb4848f3b1a4e89cba8434d748d82adab2caf1bf248b5d17",
									"id": 3361,
									"name": "RoyaltyWithdrawn",
									"nameLocation": "1124:16:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"indexed": false,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "1149:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "1141:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1141:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3357,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1166:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "1158:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3359,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1181:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3361,
												"src": "1173:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:48:15"
									},
									"src": "1118:71:15"
								},
								{
									"body": {
										"id": 3385,
										"nodeType": "Block",
										"src": "1317:223:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3377,
															"name": "_royaltyReceiverAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1363:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3378,
															"name": "_royaltyFeesInBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "1388:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3376,
														"name": "setRoyaltyInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3710,
														"src": "1348:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,uint96)"
														}
													},
													"id": 3379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:59:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3380,
												"nodeType": "ExpressionStatement",
												"src": "1348:59:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307841333963383231433639393961634332374437313838326231436134396644646641323634634341",
															"id": 3382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1493:42:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xA39c821C6999acC27D71882b1Ca49fDdfA264cCA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3381,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1475:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1475:61:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3384,
												"nodeType": "ExpressionStatement",
												"src": "1475:61:15"
											}
										]
									},
									"id": 3386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "457570686f72696120416c62756d",
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1271:16:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa1cf60e11a1342d13421a9b6e1607b576c088f877c607d8feb7d5adf81cf086",
														"typeString": "literal_string \"Euphoria Album\""
													},
													"value": "Euphoria Album"
												},
												{
													"hexValue": "544541",
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1289:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b8a6bc9ecdd41d9b326fac3690485614525b6548d76be40fae6c865fdcb8bc65",
														"typeString": "literal_string \"TEA\""
													},
													"value": "TEA"
												}
											],
											"id": 3370,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3367,
												"name": "ERC721",
												"nameLocations": [
													"1264:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1313,
												"src": "1264:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1264:31:15"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3372,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1304:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1308:6:15",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1304:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3374,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3371,
												"name": "Ownable",
												"nameLocations": [
													"1296:7:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1296:7:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1296:19:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "_royaltyFeesInBips",
												"nameLocation": "1210:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 3386,
												"src": "1203:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3362,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "1203:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "_royaltyReceiverAddress",
												"nameLocation": "1238:23:15",
												"nodeType": "VariableDeclaration",
												"scope": 3386,
												"src": "1230:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:60:15"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:0:15"
									},
									"scope": 3727,
									"src": "1191:349:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										509
									],
									"body": {
										"id": 3394,
										"nodeType": "Block",
										"src": "1635:117:15",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f696e686572656e742d736361726c65742d746172736965722e6d7966696c65626173652e636f6d2f697066732f516d5035674e44766f5245477859345842547468413933733436595775333459656b3569733650677a67576770472f",
													"id": 3392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1646:102:15",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7771773f702b4e939e4f13bb3109b5b3069fc424947ed7997233d08ce9476e9b",
														"typeString": "literal_string \"https://inherent-scarlet-tarsier.myfilebase.com/ipfs/QmP5gNDvoREGxY4XBTthA93s46YWu34Yek5is6PgzgWgpG/\""
													},
													"value": "https://inherent-scarlet-tarsier.myfilebase.com/ipfs/QmP5gNDvoREGxY4XBTthA93s46YWu34Yek5is6PgzgWgpG/"
												},
												"functionReturnParameters": 3391,
												"id": 3393,
												"nodeType": "Return",
												"src": "1638:110:15"
											}
										]
									},
									"id": 3395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1577:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3388,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1602:8:15"
									},
									"parameters": {
										"id": 3387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:15"
									},
									"returnParameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "1620:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1620:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1619:15:15"
									},
									"scope": 3727,
									"src": "1568:184:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3464,
										"nodeType": "Block",
										"src": "1868:351:15",
										"statements": [
											{
												"assignments": [
													3405
												],
												"declarations": [
													{
														"constant": false,
														"id": 3405,
														"mutability": "mutable",
														"name": "trackId",
														"nameLocation": "1879:7:15",
														"nodeType": "VariableDeclaration",
														"scope": 3464,
														"src": "1871:15:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1871:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3409,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3406,
															"name": "_trackCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "1889:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1766_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1903:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1778,
														"src": "1889:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1766_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1766_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1871:41:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3411,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1925:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1929:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1925:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3413,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3405,
															"src": "1937:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3410,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															935,
															961
														],
														"referencedDeclaration": 935,
														"src": "1915:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:30:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3415,
												"nodeType": "ExpressionStatement",
												"src": "1915:30:15"
											},
											{
												"assignments": [
													3418
												],
												"declarations": [
													{
														"constant": false,
														"id": 3418,
														"mutability": "mutable",
														"name": "track",
														"nameLocation": "1962:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3464,
														"src": "1948:19:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
															"typeString": "struct EuphoriaAlbumNFT.Track"
														},
														"typeName": {
															"id": 3417,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3416,
																"name": "Track",
																"nameLocations": [
																	"1948:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3317,
																"src": "1948:5:15"
															},
															"referencedDeclaration": 3317,
															"src": "1948:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3422,
												"initialValue": {
													"baseExpression": {
														"id": 3419,
														"name": "tracks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "1970:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
															"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track storage ref)"
														}
													},
													"id": 3421,
													"indexExpression": {
														"id": 3420,
														"name": "trackId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3405,
														"src": "1977:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1970:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Track_$3317_storage",
														"typeString": "struct EuphoriaAlbumNFT.Track storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1948:37:15"
											},
											{
												"expression": {
													"id": 3427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3423,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "1988:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3425,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1994:5:15",
														"memberName": "title",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3302,
														"src": "1988:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3426,
														"name": "_title",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3397,
														"src": "2002:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1988:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3428,
												"nodeType": "ExpressionStatement",
												"src": "1988:20:15"
											},
											{
												"expression": {
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3429,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "2011:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2017:4:15",
														"memberName": "isrc",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3304,
														"src": "2011:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3432,
														"name": "_isrc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3399,
														"src": "2024:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2011:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3434,
												"nodeType": "ExpressionStatement",
												"src": "2011:18:15"
											},
											{
												"expression": {
													"id": 3439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3435,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "2032:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2038:13:15",
														"memberName": "pricePerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3306,
														"src": "2032:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3438,
														"name": "SHARE_PRICE_USD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "2054:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:37:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3440,
												"nodeType": "ExpressionStatement",
												"src": "2032:37:15"
											},
											{
												"expression": {
													"id": 3445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3441,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "2072:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2078:15:15",
														"memberName": "sharesRemaining",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3308,
														"src": "2072:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3444,
														"name": "MAX_SHARES_PER_TRACK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "2096:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2072:44:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3446,
												"nodeType": "ExpressionStatement",
												"src": "2072:44:15"
											},
											{
												"expression": {
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3447,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3418,
															"src": "2119:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3449,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2125:11:15",
														"memberName": "isAvailable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3310,
														"src": "2119:17:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2139:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2119:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3452,
												"nodeType": "ExpressionStatement",
												"src": "2119:24:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3453,
															"name": "_trackCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "2146:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1766_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3455,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2160:9:15",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1792,
														"src": "2146:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1766_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1766_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3457,
												"nodeType": "ExpressionStatement",
												"src": "2146:25:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3459,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3405,
															"src": "2192:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3460,
															"name": "_title",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3397,
															"src": "2201:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3461,
															"name": "_isrc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3399,
															"src": "2209:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3458,
														"name": "TrackCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3339,
														"src": "2179:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory,string memory)"
														}
													},
													"id": 3462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3463,
												"nodeType": "EmitStatement",
												"src": "2174:41:15"
											}
										]
									},
									"functionSelector": "f3720cca",
									"id": 3465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3401,
												"name": "onlyOwner",
												"nameLocations": [
													"1858:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1858:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1858:9:15"
										}
									],
									"name": "createTrack",
									"nameLocation": "1796:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "_title",
												"nameLocation": "1822:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "1808:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1808:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3399,
												"mutability": "mutable",
												"name": "_isrc",
												"nameLocation": "1844:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3465,
												"src": "1830:19:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1830:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:43:15"
									},
									"returnParameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1868:0:15"
									},
									"scope": 3727,
									"src": "1787:432:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3542,
										"nodeType": "Block",
										"src": "2327:517:15",
										"statements": [
											{
												"assignments": [
													3474
												],
												"declarations": [
													{
														"constant": false,
														"id": 3474,
														"mutability": "mutable",
														"name": "track",
														"nameLocation": "2344:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3542,
														"src": "2330:19:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
															"typeString": "struct EuphoriaAlbumNFT.Track"
														},
														"typeName": {
															"id": 3473,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3472,
																"name": "Track",
																"nameLocations": [
																	"2330:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3317,
																"src": "2330:5:15"
															},
															"referencedDeclaration": 3317,
															"src": "2330:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3478,
												"initialValue": {
													"baseExpression": {
														"id": 3475,
														"name": "tracks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "2352:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
															"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track storage ref)"
														}
													},
													"id": 3477,
													"indexExpression": {
														"id": 3476,
														"name": "trackId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3467,
														"src": "2359:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2352:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Track_$3317_storage",
														"typeString": "struct EuphoriaAlbumNFT.Track storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2330:37:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3480,
																"name": "track",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3474,
																"src": "2378:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																	"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
																}
															},
															"id": 3481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2384:11:15",
															"memberName": "isAvailable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3310,
															"src": "2378:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "547261636b206e6f7420617661696c61626c65",
															"id": 3482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64d3295d37ddc4cbcb967b1bfe2f1fc298bc5ab15e2cacea28be7757731b61b8",
																"typeString": "literal_string \"Track not available\""
															},
															"value": "Track not available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64d3295d37ddc4cbcb967b1bfe2f1fc298bc5ab15e2cacea28be7757731b61b8",
																"typeString": "literal_string \"Track not available\""
															}
														],
														"id": 3479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2370:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:49:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3484,
												"nodeType": "ExpressionStatement",
												"src": "2370:49:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3486,
																	"name": "numShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3469,
																	"src": "2430:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2442:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2430:13:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3489,
																	"name": "numShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3469,
																	"src": "2447:9:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 3490,
																		"name": "track",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3474,
																		"src": "2460:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																			"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
																		}
																	},
																	"id": 3491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2466:15:15",
																	"memberName": "sharesRemaining",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3308,
																	"src": "2460:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2447:34:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2430:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e756d626572206f66736861726573",
															"id": 3494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07e703d688a67e300f3fab42d415aa984a7c9240ef5cb6cd9684c2f24aec5e6e",
																"typeString": "literal_string \"Invalid number ofshares\""
															},
															"value": "Invalid number ofshares"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07e703d688a67e300f3fab42d415aa984a7c9240ef5cb6cd9684c2f24aec5e6e",
																"typeString": "literal_string \"Invalid number ofshares\""
															}
														],
														"id": 3485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2422:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:87:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3496,
												"nodeType": "ExpressionStatement",
												"src": "2422:87:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3498,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2520:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2524:5:15",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2520:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3500,
																		"name": "numShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3469,
																		"src": "2533:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 3501,
																			"name": "track",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3474,
																			"src": "2545:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																				"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
																			}
																		},
																		"id": 3502,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2551:13:15",
																		"memberName": "pricePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3306,
																		"src": "2545:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2533:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653136",
																	"id": 3504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2567:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000000000_by_1",
																		"typeString": "int_const 10000000000000000"
																	},
																	"value": "1e16"
																},
																"src": "2533:38:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2520:51:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207061796d656e74",
															"id": 3507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															},
															"value": "Insufficient payment"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e",
																"typeString": "literal_string \"Insufficient payment\""
															}
														],
														"id": 3497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2512:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:84:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3509,
												"nodeType": "ExpressionStatement",
												"src": "2512:84:15"
											},
											{
												"expression": {
													"id": 3517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 3510,
																"name": "track",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3474,
																"src": "2624:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																	"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
																}
															},
															"id": 3514,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2630:14:15",
															"memberName": "shareOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3316,
															"src": "2624:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3515,
														"indexExpression": {
															"expression": {
																"id": 3512,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2645:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2649:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2645:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2624:32:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3516,
														"name": "numShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3469,
														"src": "2660:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2624:45:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3518,
												"nodeType": "ExpressionStatement",
												"src": "2624:45:15"
											},
											{
												"expression": {
													"id": 3523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3519,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3474,
															"src": "2672:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2678:15:15",
														"memberName": "sharesRemaining",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3308,
														"src": "2672:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3522,
														"name": "numShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3469,
														"src": "2697:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2672:34:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3524,
												"nodeType": "ExpressionStatement",
												"src": "2672:34:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3531,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2776:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2780:5:15",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2776:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3527,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2758:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2758:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2750:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3525,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2750:8:15",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2750:16:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2767:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2750:25:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "2750:36:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3536,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3467,
															"src": "2809:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3537,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2818:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2822:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2818:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3539,
															"name": "numShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3469,
															"src": "2830:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3535,
														"name": "SharePurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3347,
														"src": "2794:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3541,
												"nodeType": "EmitStatement",
												"src": "2789:51:15"
											}
										]
									},
									"functionSelector": "d2bcdc60",
									"id": 3543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "purchaseShares",
									"nameLocation": "2261:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "2284:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "2276:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3469,
												"mutability": "mutable",
												"name": "numShares",
												"nameLocation": "2301:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "2293:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:36:15"
									},
									"returnParameters": {
										"id": 3471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2327:0:15"
									},
									"scope": 3727,
									"src": "2252:592:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3578,
										"nodeType": "Block",
										"src": "2959:189:15",
										"statements": [
											{
												"assignments": [
													3552
												],
												"declarations": [
													{
														"constant": false,
														"id": 3552,
														"mutability": "mutable",
														"name": "track",
														"nameLocation": "2976:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3578,
														"src": "2962:19:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
															"typeString": "struct EuphoriaAlbumNFT.Track"
														},
														"typeName": {
															"id": 3551,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3550,
																"name": "Track",
																"nameLocations": [
																	"2962:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3317,
																"src": "2962:5:15"
															},
															"referencedDeclaration": 3317,
															"src": "2962:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3556,
												"initialValue": {
													"baseExpression": {
														"id": 3553,
														"name": "tracks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "2984:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
															"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track storage ref)"
														}
													},
													"id": 3555,
													"indexExpression": {
														"id": 3554,
														"name": "trackId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3545,
														"src": "2991:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2984:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Track_$3317_storage",
														"typeString": "struct EuphoriaAlbumNFT.Track storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2962:37:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3558,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3010:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3014:5:15",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3010:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3022:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3010:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526f79616c747920616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3025:42:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c720dc516040b79f05f5ec556572ec11727bdc7c6d8b6bb6e511515b2ff3afa",
																"typeString": "literal_string \"Royalty amount must be greater than zero\""
															},
															"value": "Royalty amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c720dc516040b79f05f5ec556572ec11727bdc7c6d8b6bb6e511515b2ff3afa",
																"typeString": "literal_string \"Royalty amount must be greater than zero\""
															}
														],
														"id": 3557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3002:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3002:66:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3564,
												"nodeType": "ExpressionStatement",
												"src": "3002:66:15"
											},
											{
												"expression": {
													"id": 3570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3565,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3552,
															"src": "3071:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3567,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3077:12:15",
														"memberName": "totalRoyalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3312,
														"src": "3071:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 3568,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3093:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3097:5:15",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3093:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3071:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3571,
												"nodeType": "ExpressionStatement",
												"src": "3071:31:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3573,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3545,
															"src": "3125:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3574,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3134:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3138:5:15",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3134:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3572,
														"name": "RoyaltyAccrued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3353,
														"src": "3110:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3110:34:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3577,
												"nodeType": "EmitStatement",
												"src": "3105:39:15"
											}
										]
									},
									"functionSelector": "bb86759f",
									"id": 3579,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3547,
												"name": "onlyOwner",
												"nameLocations": [
													"2949:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2949:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "2949:9:15"
										}
									],
									"name": "accumulateRoyalty",
									"nameLocation": "2899:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "2925:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3579,
												"src": "2917:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:17:15"
									},
									"returnParameters": {
										"id": 3549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2959:0:15"
									},
									"scope": 3727,
									"src": "2890:258:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "3305:203:15",
										"statements": [
											{
												"assignments": [
													3590
												],
												"declarations": [
													{
														"constant": false,
														"id": 3590,
														"mutability": "mutable",
														"name": "track",
														"nameLocation": "3322:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "3308:19:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
															"typeString": "struct EuphoriaAlbumNFT.Track"
														},
														"typeName": {
															"id": 3589,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3588,
																"name": "Track",
																"nameLocations": [
																	"3308:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3317,
																"src": "3308:5:15"
															},
															"referencedDeclaration": 3317,
															"src": "3308:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3594,
												"initialValue": {
													"baseExpression": {
														"id": 3591,
														"name": "tracks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "3330:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
															"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track storage ref)"
														}
													},
													"id": 3593,
													"indexExpression": {
														"id": 3592,
														"name": "trackId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3581,
														"src": "3337:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3330:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Track_$3317_storage",
														"typeString": "struct EuphoriaAlbumNFT.Track storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3308:37:15"
											},
											{
												"assignments": [
													3596
												],
												"declarations": [
													{
														"constant": false,
														"id": 3596,
														"mutability": "mutable",
														"name": "ownerShares",
														"nameLocation": "3356:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "3348:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3601,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 3597,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3590,
															"src": "3370:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3376:14:15",
														"memberName": "shareOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3316,
														"src": "3370:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3600,
													"indexExpression": {
														"id": 3599,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3583,
														"src": "3391:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3370:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3348:49:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3602,
																	"name": "ownerShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3596,
																	"src": "3408:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 3603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3422:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "3408:18:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3605,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3407:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3606,
														"name": "MAX_SHARES_PER_TRACK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "3430:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3407:43:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3587,
												"id": 3608,
												"nodeType": "Return",
												"src": "3400:50:15"
											}
										]
									},
									"functionSelector": "343e988c",
									"id": 3610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwnerSharePercentage",
									"nameLocation": "3218:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "3250:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "3242:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3267:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "3259:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3259:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:32:15"
									},
									"returnParameters": {
										"id": 3587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "3296:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3295:9:15"
									},
									"scope": 3727,
									"src": "3209:299:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3684,
										"nodeType": "Block",
										"src": "3617:726:15",
										"statements": [
											{
												"assignments": [
													3617
												],
												"declarations": [
													{
														"constant": false,
														"id": 3617,
														"mutability": "mutable",
														"name": "track",
														"nameLocation": "3634:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3684,
														"src": "3620:19:15",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
															"typeString": "struct EuphoriaAlbumNFT.Track"
														},
														"typeName": {
															"id": 3616,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3615,
																"name": "Track",
																"nameLocations": [
																	"3620:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3317,
																"src": "3620:5:15"
															},
															"referencedDeclaration": 3317,
															"src": "3620:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3621,
												"initialValue": {
													"baseExpression": {
														"id": 3618,
														"name": "tracks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3322,
														"src": "3642:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Track_$3317_storage_$",
															"typeString": "mapping(uint256 => struct EuphoriaAlbumNFT.Track storage ref)"
														}
													},
													"id": 3620,
													"indexExpression": {
														"id": 3619,
														"name": "trackId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3612,
														"src": "3649:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3642:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Track_$3317_storage",
														"typeString": "struct EuphoriaAlbumNFT.Track storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3620:37:15"
											},
											{
												"assignments": [
													3623
												],
												"declarations": [
													{
														"constant": false,
														"id": 3623,
														"mutability": "mutable",
														"name": "ownerShares",
														"nameLocation": "3668:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 3684,
														"src": "3660:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3660:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3629,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 3624,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3617,
															"src": "3682:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3688:14:15",
														"memberName": "shareOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3316,
														"src": "3682:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3628,
													"indexExpression": {
														"expression": {
															"id": 3626,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3703:3:15",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3707:6:15",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3703:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3682:32:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3660:54:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3631,
																"name": "ownerShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3623,
																"src": "3725:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3739:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3725:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f74206f776e20616e7920736861726573206f66207468697320747261636b",
															"id": 3634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3742:41:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27c71b42911925277fccc69932d4d9f48433f9b8a44de11392d19df91b750e80",
																"typeString": "literal_string \"You do not own any shares of this track\""
															},
															"value": "You do not own any shares of this track"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_27c71b42911925277fccc69932d4d9f48433f9b8a44de11392d19df91b750e80",
																"typeString": "literal_string \"You do not own any shares of this track\""
															}
														],
														"id": 3630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3717:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3717:67:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3636,
												"nodeType": "ExpressionStatement",
												"src": "3717:67:15"
											},
											{
												"assignments": [
													3638
												],
												"declarations": [
													{
														"constant": false,
														"id": 3638,
														"mutability": "mutable",
														"name": "ownerPercentage",
														"nameLocation": "3838:15:15",
														"nodeType": "VariableDeclaration",
														"scope": 3684,
														"src": "3830:23:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3830:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3644,
												"initialValue": {
													"arguments": [
														{
															"id": 3640,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3612,
															"src": "3880:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3641,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3889:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3893:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3889:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3639,
														"name": "getOwnerSharePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3610,
														"src": "3856:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (uint256,address) view returns (uint256)"
														}
													},
													"id": 3643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3856:44:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3830:70:15"
											},
											{
												"assignments": [
													3646
												],
												"declarations": [
													{
														"constant": false,
														"id": 3646,
														"mutability": "mutable",
														"name": "ownerRoyalty",
														"nameLocation": "3911:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3684,
														"src": "3903:20:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3903:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3654,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3647,
																		"name": "track",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3617,
																		"src": "3927:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																			"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
																		}
																	},
																	"id": 3648,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3933:12:15",
																	"memberName": "totalRoyalty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3312,
																	"src": "3927:18:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3649,
																	"name": "ownerPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3638,
																	"src": "3948:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3927:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3651,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3926:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 3652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3967:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3926:45:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3903:68:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3656,
																"name": "ownerRoyalty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3646,
																"src": "4019:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4034:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4019:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20726f79616c747920617661696c61626c6520666f72207769746864726177616c",
															"id": 3659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4037:37:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a2331c7c19f2502a16310aa3eef80b95d3147f8dab2f4f3364c6a6a4be1a37",
																"typeString": "literal_string \"No royalty available for withdrawal\""
															},
															"value": "No royalty available for withdrawal"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a2331c7c19f2502a16310aa3eef80b95d3147f8dab2f4f3364c6a6a4be1a37",
																"typeString": "literal_string \"No royalty available for withdrawal\""
															}
														],
														"id": 3655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4011:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4011:64:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3661,
												"nodeType": "ExpressionStatement",
												"src": "4011:64:15"
											},
											{
												"expression": {
													"id": 3666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3662,
															"name": "track",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3617,
															"src": "4139:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Track_$3317_storage_ptr",
																"typeString": "struct EuphoriaAlbumNFT.Track storage pointer"
															}
														},
														"id": 3664,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4145:12:15",
														"memberName": "totalRoyalty",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3312,
														"src": "4139:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3665,
														"name": "ownerRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3646,
														"src": "4161:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4139:34:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3667,
												"nodeType": "ExpressionStatement",
												"src": "4139:34:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3674,
															"name": "ownerRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "4267:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3670,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4246:3:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4250:6:15",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4246:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4238:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4238:8:15",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4238:19:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4258:8:15",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4238:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4238:42:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3676,
												"nodeType": "ExpressionStatement",
												"src": "4238:42:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3678,
															"name": "trackId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3612,
															"src": "4305:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4314:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4318:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4314:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3681,
															"name": "ownerRoyalty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "4326:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3677,
														"name": "RoyaltyWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3361,
														"src": "4288:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 3682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:51:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3683,
												"nodeType": "EmitStatement",
												"src": "4283:56:15"
											}
										]
									},
									"functionSelector": "57a2eda9",
									"id": 3685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawRoyalty",
									"nameLocation": "3577:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3612,
												"mutability": "mutable",
												"name": "trackId",
												"nameLocation": "3601:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3685,
												"src": "3593:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3593:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3592:17:15"
									},
									"returnParameters": {
										"id": 3614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3617:0:15"
									},
									"scope": 3727,
									"src": "3568:775:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3694,
										"nodeType": "Block",
										"src": "4438:37:15",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3690,
															"name": "_trackCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3325,
															"src": "4448:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1766_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4462:7:15",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1778,
														"src": "4448:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1766_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1766_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4448:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3689,
												"id": 3693,
												"nodeType": "Return",
												"src": "4441:30:15"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 3695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4394:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4405:2:15"
									},
									"returnParameters": {
										"id": 3689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3695,
												"src": "4429:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4428:9:15"
									},
									"scope": 3727,
									"src": "4385:90:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3709,
										"nodeType": "Block",
										"src": "4622:56:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3705,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "4644:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3706,
															"name": "_royaltyFeesInBips",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3699,
															"src": "4655:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3704,
														"name": "_setDefaultRoyalty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "4625:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$",
															"typeString": "function (address,uint96)"
														}
													},
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4625:49:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3708,
												"nodeType": "ExpressionStatement",
												"src": "4625:49:15"
											}
										]
									},
									"functionSelector": "02fa7c47",
									"id": 3710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3701,
												"name": "onlyOwner",
												"nameLocations": [
													"4612:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4612:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "4612:9:15"
										}
									],
									"name": "setRoyaltyInfo",
									"nameLocation": "4544:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "4567:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "4559:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3699,
												"mutability": "mutable",
												"name": "_royaltyFeesInBips",
												"nameLocation": "4585:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "4578:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3698,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4578:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:46:15"
									},
									"returnParameters": {
										"id": 3703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4622:0:15"
									},
									"scope": 3727,
									"src": "4535:143:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										405,
										1553
									],
									"body": {
										"id": 3725,
										"nodeType": "Block",
										"src": "4834:50:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3722,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3712,
															"src": "4868:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3720,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4844:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_EuphoriaAlbumNFT_$3727_$",
																"typeString": "type(contract super EuphoriaAlbumNFT)"
															}
														},
														"id": 3721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4850:17:15",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1553,
														"src": "4844:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4844:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3719,
												"id": 3724,
												"nodeType": "Return",
												"src": "4837:43:15"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4738:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3716,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3714,
												"name": "ERC721",
												"nameLocations": [
													"4800:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1313,
												"src": "4800:6:15"
											},
											{
												"id": 3715,
												"name": "ERC2981",
												"nameLocations": [
													"4808:7:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1730,
												"src": "4808:7:15"
											}
										],
										"src": "4791:25:15"
									},
									"parameters": {
										"id": 3713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3712,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4763:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3726,
												"src": "4756:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3711,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:20:15"
									},
									"returnParameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3726,
												"src": "4827:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4827:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:6:15"
									},
									"scope": 3727,
									"src": "4729:155:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3728,
							"src": "286:4601:15",
							"usedErrors": [
								13,
								18,
								215,
								220,
								229,
								234,
								239,
								246,
								251,
								256,
								1508,
								1513,
								1522,
								1529
							],
							"usedEvents": [
								24,
								1329,
								1338,
								1347,
								3339,
								3347,
								3353,
								3361
							]
						}
					],
					"src": "33:4854:15"
				},
				"id": 15
			}
		}
	}
}